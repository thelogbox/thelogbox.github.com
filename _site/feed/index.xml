<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Ted's blog'</title>
 <link href="http://thelogbox.com/feed/" rel="self"/>
 <link href="http://thelogbox.com/"/>
 <updated>2015-01-18T12:52:44+08:00</updated>
 <id>http://thelogbox.com/</id>
 <author>
   <name>Ted Hagos</name>
   <email>ted@thelogbox.com</email>
 </author>

 
 <entry>
   <title>Declarative Event Handling</title>
   <link href="http://thelogbox.com/android/declarative-event-handling"/>
   <updated>2015-01-02T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android/declarative-event-handling</id>
   <content type="html">&lt;h2 id=&quot;prerequisite&quot;&gt;1 Prerequisite&lt;/h2&gt;

&lt;p&gt;Before proceeding to the lesson, you must have done the following&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You need a properly installed Android Studio with API level 20 installed. We do not really need level 20 for this example so you can use a lower level API if that is what you’ve got&lt;/li&gt;
  &lt;li&gt;Anatomy of an android project&lt;/li&gt;
  &lt;li&gt;How to setup a project, either in CLI or Android Studio&lt;/li&gt;
  &lt;li&gt;Understand the lifecycle of an Activity&lt;/li&gt;
  &lt;li&gt;Understand Manifest XML, what is the entry point of an Android application&lt;/li&gt;
  &lt;li&gt;R.layout, the dynamically generated class of Android&lt;/li&gt;
  &lt;li&gt;Understand the constraints of the UI and the XML file&lt;/li&gt;
  &lt;li&gt;Basic IDE parts and operations&lt;/li&gt;
  &lt;li&gt;Emulator basics&lt;/li&gt;
  &lt;li&gt;Connecting a device&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;basic-concepts&quot;&gt;2 Basic Concepts&lt;/h2&gt;

&lt;p&gt;When an application is launched, the android runtime inspects the AndroidManifest file. It looks an activity class which has been designated as the entry point. This activity class is then instantiated, goes through its life cycle and at some point, calls  one of its method, the &lt;strong&gt;setContentView&lt;/strong&gt;, in order to render a user interface. This is the screen that the user sees when the application is launched. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/android-runtime-activity.png&quot; alt=&quot;Android runtime and activity&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The setContentView is parametrically polymorphic. It has been overloaded so it can take on different types of data. It can take a View Object, in which case that means you must have defined your user interface programmatically. Or it can take an integer value, in which case it means you defined the user interface on an xml file. At the moment, we are interested in the latter. Our exercise  will define the user interface declaratively using an xml file.&lt;/p&gt;

&lt;p&gt;A blank activity project that is created using the Android IDE gives us a bootstrapped collection of projects assets. The IDE automatically creates a java source file which serves as the main activity. The IDE also creates the AndroidManifest file and the xml file which the activity uses to render a user interface. &lt;/p&gt;

&lt;p&gt;The generated xml file that is used for UI (user interface) definition is very spartan. It only contains a TextView object. What we will do is to add a Button object to our UI definition. The Button will be equipped with the appropriate xml attribute so it can listen for user events. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Button
  android:layout_width=&quot;wrap_content&quot;
  android:layout_height=&quot;wrap_content&quot;
  android:text=&quot;Click Me&quot;
  android:onClick=&quot;showMe&quot;
  android:layout_below=&quot;@+id/textView&quot;
  android:layout_alignParentStart=&quot;true&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Most of the attributes of the Button node has to do with the way it looks, how tall and wide it should be, what text will you see on the button’s surface and where it should be positioned. In our case it is vertically aligned with its parent and horizontally positioned right below the TextView. The one attribute which is relevant to event handling is the &lt;strong&gt;android:onClick&lt;/strong&gt; attribute&lt;/p&gt;

&lt;p&gt;When the &lt;strong&gt;onClick&lt;/strong&gt; attribute is present, the android runtime will look inside the activity class that is associated with this xml file for a method. The name of that method must match the value of  the &lt;strong&gt;onClick&lt;/strong&gt; attribute.&lt;/p&gt;

&lt;p&gt;The program logic that will kick in when the user clicks our Button will be inside the Activity class. The code for the &lt;strong&gt;showMe&lt;/strong&gt; method is as follows.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  public void showMe(View v) {
    Context ctx = getApplicationContext();
    String msg = &quot;Hello World&quot;;
    int duration = Toast.LENGTH_SHORT;
    Toast notification = Toast.makeText(ctx,msg,duration);
    notification.show();
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;steps&quot;&gt;3 Steps&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Create a new project&lt;/strong&gt;. Supply the necessary information for the creation of a new project like Application name, Company domain and project location. The application name becomes the root folder the project. The company domain is transformed into reverse dns notation and becomes the namespace or the the package name for all the classes in the project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/declare-project-1.png&quot; alt=&quot;Create a project&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Select only the phone and tablet option&lt;/strong&gt; . We intend for this project to run on either a phone or tablet, so make sure that is selected. Leave out the TV option. The minimum SDK is not very important for this project, but I chose level 21 simply because I have it in my setup. You can choose a lower level API. We only need some very rudimentary capabilities for this project, even API level 8 will do.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/declare-project-2.png&quot; alt=&quot;Choose Blank Activity&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Choose a blank activity&lt;/strong&gt; for this project. We don’t need a complex layout. The blank option will keep things simple for us&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/declare-project-3.png&quot; alt=&quot;Activity Name, layout, title&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Accept the default values&lt;/strong&gt; for Activity name, layout, title and menu resource name&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/declare-project-4.png&quot; alt=&quot;Finish creating the project&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Click Finish&lt;/strong&gt; to create the project&lt;/p&gt;

&lt;p&gt;The project will open with the activity_main.xml file rendered in &lt;strong&gt;Design&lt;/strong&gt; view. The IDE allows you to work in either GUI mode where we can simply drag, drop, click and drag the UI components. It also allows us to work in text mode, which is simpler and faster, but maybe less intuitive. For now we will work on the text mode.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/declare-project-5.png&quot; alt=&quot;Design and Text Mode&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Switch to text mode&lt;/strong&gt;. While the activity_main.xml file is still selected on the upper tabs of the IDE, find the tabs in the lower portion of screen. Click the &lt;strong&gt;Text&lt;/strong&gt; tab. That will take you the raw xml view of the activity_main file. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/declare-project-6.png&quot; alt=&quot;Switch to Text Mode&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once we switched to text mode, the raw xml is now exposed. It is very spartan. It only has one TextView object at moment. The code for our activity_main is shown below. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Add the Button&lt;/strong&gt; definition to the activity_main.xml file. The activity_main.xml file, as generated during the project creation process looks the code below.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;RelativeLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;xmlns:tools=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/tools&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:paddingLeft=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@dimen/activity_horizontal_margin&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:paddingRight=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@dimen/activity_horizontal_margin&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:paddingTop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@dimen/activity_vertical_margin&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:paddingBottom=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@dimen/activity_vertical_margin&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;tools:context=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.MainActivity&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@string/hello_world&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/textView&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Insert the Button definition right below the closing tag of the TextView. Make sure that it is still enclosed within the RelativeLayout tag. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RelativeLayout&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;xmlns:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;nl&quot;&gt;xmlns:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/tools&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paddingLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@dimen/activity_horizontal_margin&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paddingRight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@dimen/activity_horizontal_margin&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paddingTop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@dimen/activity_vertical_margin&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paddingBottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@dimen/activity_vertical_margin&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;nl&quot;&gt;tools:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.MainActivity&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextView&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@string/hello_world&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/textView&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Click me okay&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;showMe&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_below&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/textView&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_alignParentStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RelativeLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The button definition is just another xml node. It was placed inside &lt;strong&gt;RelativeLayout&lt;/strong&gt; which is the main node so that the Button becomes its child.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Go to the tab of MainActivity.java&lt;/strong&gt; and write the code for the showMe method.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thelogbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;declareevent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.app.Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.Menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.MenuItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//This method was created by the IDE&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//This too was created by the IDE&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreateOptionsMenu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Menu&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;getMenuInflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;menu_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//And so is this one too.&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onOptionsItemSelected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MenuItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getItemId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;action_settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onOptionsItemSelected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//This method we write on our own&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;showMe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notification&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;notification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;9. Build the app and run Make&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Run the project&lt;/strong&gt; using either an emulator or a connected Android device&lt;/p&gt;

&lt;h2 id=&quot;glossary&quot;&gt;Glossary&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Parametrically Polymorphic&lt;/strong&gt;.	Overloaded method. The method has been defined more than once so it can deal with different kinds of parameter data&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Toast class&lt;/strong&gt;.	Toast is a view containing a quick little message to the user. If you have ever used the alert() function in Javascript or the MsgBox in Visual Basic, Toast is similar to those&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Android Studio Text Mode&lt;/strong&gt;. View an xml file in raw mode. You can see the text of the GUI definition in raw XML&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Android Studio Design mode&lt;/strong&gt;.	View an xml file in design mode. You can design a screen in graphical mode&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Flash cards are at &lt;a href=&quot;http://quizlet.com/_12k3my&quot;&gt;Quizlet, TLB, declarative event handling&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;5 Further Reading&lt;/h2&gt;

&lt;p&gt;https://developer.android.com/training/basics/firstapp/building-ui.html&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;6 Resources&lt;/h2&gt;

&lt;p&gt;The source xml and java files for this exercise can be downloaded as a &lt;a href=&quot;../resources/declarative-event-handling.zip&quot;&gt;zipped file&lt;/a&gt; from the resources page&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>NoClassDefFound</title>
   <link href="http://thelogbox.com/java/errors/noclassdeffound"/>
   <updated>2014-12-26T00:00:00+08:00</updated>
   <id>http://thelogbox.com/java/errors/noclassdeffound</id>
   <content type="html">&lt;p&gt;It means you are trying to execute a class file that does not exist&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Canvas Basics</title>
   <link href="http://thelogbox.com/typescript/canvas-basics"/>
   <updated>2014-12-22T00:00:00+08:00</updated>
   <id>http://thelogbox.com/typescript/canvas-basics</id>
   <content type="html">&lt;p&gt;This works&lt;/p&gt;

&lt;p&gt;The reference HTML file. Nothing fantastic. The script tag on head references the JavaScript file &lt;strong&gt;hey.js&lt;/strong&gt;. We will need to generate or emit this file from &lt;strong&gt;hey.ts&lt;/strong&gt;, our TypeScript file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head lang=&quot;en&quot;&amp;gt;
  &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
  &amp;lt;script src=&quot;hey.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;title&amp;gt;Hey&amp;lt;/title&amp;gt;
  &amp;lt;style&amp;gt;
    canvas {border: 1px solid gray;}
  &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;canvas id=&quot;thecanvas&quot; width=&quot;500&quot; height=&quot;500&quot;&amp;gt;
  You should not see this
&amp;lt;/canvas&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This works&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;window.onload = function() {

  var canvas:HTMLCanvasElement = &amp;lt;HTMLCanvasElement&amp;gt; document.getElementById(&quot;thecanvas&quot;);
  var ctx:CanvasRenderingContext2D = &amp;lt;any&amp;gt; canvas.getContext(&quot;2d&quot;);

  ctx.fillRect(100,100,50,50);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This works too&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;window.onload = function() {

  var canvas:any = &amp;lt;any&amp;gt; document.getElementById(&quot;thecanvas&quot;);
  var ctx:CanvasRenderingContext2D = &amp;lt;any&amp;gt; canvas.getContext(&quot;2d&quot;);

  ctx.fillRect(100,100,50,50);

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So does this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;window.onload = function() {

  var canvas:any =  document.getElementById(&quot;thecanvas&quot;);
  var ctx:CanvasRenderingContext2D = &amp;lt;any&amp;gt; canvas.getContext(&quot;2d&quot;);

  ctx.fillRect(100,100,50,50);

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This does not work. It says fillRect does not exist on HTMLCanvasElement. What is up with lib.d.ts, what is the answer to this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;window.onload = function() {

  var canvas:any =  document.getElementById(&quot;thecanvas&quot;);
  var ctx:HTMLCanvasElement = &amp;lt;any&amp;gt; canvas.getContext(&quot;2d&quot;);

  ctx.fillRect(100,100,50,50);

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But this works&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;window.onload = function() {

  var canvas:any =  document.getElementById(&quot;thecanvas&quot;);
  var ctx:CanvasRenderingContext2D =  canvas.getContext(&quot;2d&quot;);

  ctx.fillRect(100,100,50,50);

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So it looks like I don’t have to cast the canvas nor the context. I only have to strongly type them. &lt;/p&gt;

&lt;p&gt;The code below works. I don’t even have to strongly type the context. As long the canvas is typed.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;window.onload = function() {

  var canvas:any =  document.getElementById(&quot;thecanvas&quot;);
  var ctx =  canvas.getContext(&quot;2d&quot;);

  ctx.fillRect(100,100,50,50);

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If I remove the typing of the canvas, even if it is just &lt;strong&gt;any&lt;/strong&gt;, like this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
window.onload = function() {

  var canvas =  document.getElementById(&quot;thecanvas&quot;);
  var ctx =  canvas.getContext(&quot;2d&quot;);

  ctx.fillRect(100,100,50,50);

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It throws an error. It says &lt;strong&gt;getContext&lt;/strong&gt; does not exist on HTMLElement. Really, there is a rule here that I don’t understand. Welcome to the wonderful world of statically typed languages.&lt;/p&gt;

&lt;p&gt;This works. Why is casting working. Clearly, the HTMLCanvasElement  do contain the getContext call.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;window.onload = function() {

  var canvas =  &amp;lt;HTMLCanvasElement&amp;gt; document.getElementById(&quot;thecanvas&quot;);
  var ctx =  canvas.getContext(&quot;2d&quot;);

  ctx.fillRect(100,100,50,50);

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This does not work&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;window.onload = function() {

  var canvas =  &amp;lt;HTMLElement&amp;gt; document.getElementById(&quot;thecanvas&quot;);
  var ctx =  canvas.getContext(&quot;2d&quot;);

  ctx.fillRect(100,100,50,50);

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It appears HTMLElement does not contain the definition of getContext&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Boot Up, Login and Shutdown</title>
   <link href="http://thelogbox.com/linux/bootup-shutdown"/>
   <updated>2014-12-19T00:00:00+08:00</updated>
   <id>http://thelogbox.com/linux/bootup-shutdown</id>
   <content type="html">&lt;p&gt;As a user, there is not much you need to know about the boot up. As soon you hit the power switch of the machine, a whole bunch of messages flies up to the screen. Linux is doing quite a bit behind the scenes but we don’t need to concern ourselves about them right now.&lt;/p&gt;

&lt;p&gt;Most modern Linux systems are configured to start a gui login prompt, this could either be the &lt;strong&gt;xdm&lt;/strong&gt;, the X Display Manager or the &lt;strong&gt;gdm&lt;/strong&gt;, the Gnome Display Manager. In the early days of Linux, the default login is a console prompt. Unless you setup Linux without a desktop manager, you will not see the console prompt for login. What you will see instead is a gui login.&lt;/p&gt;

&lt;p&gt;During the installation, you were asked to create a user. You filled up, at the very least, 3 text fields, your name, a &lt;strong&gt;username&lt;/strong&gt; and a &lt;strong&gt;password&lt;/strong&gt;. You may not need to type up the username in the login prompt but you need to enter your password. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/login.png&quot; alt=&quot;PIC login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Linux stop you cold in your tracks if you don’t enter the correct password. The username that you provided during the setup will always be in lowercase but the password is different thing. The password allows for a mix of lower case, uppercase letters and numbers. It is important that you remember your password exactly as you defined it during setup because it is case sensitive. &lt;strong&gt;Password&lt;/strong&gt; is different from &lt;strong&gt;password&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;After a successful login, you will now see a shiny graphical desktop interface, pretty much like what you would see on a Windows or a Mac system. You can launch applications, click things, surf the web, watch movies and send emails.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/desktop.png&quot; alt=&quot;PIC desktop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Shutting down is a lot easier than starting up. You can do this either by clicking the power button then select shutdown. Or you can press the keys &lt;strong&gt;CTRL ALT DEL&lt;/strong&gt; simultaneously. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/logout.png&quot; alt=&quot;PIC desktop&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;geek-version&quot;&gt;1 Geek Version&lt;/h2&gt;

&lt;p&gt;BIOS/EFI&lt;/p&gt;

&lt;p&gt;POST&lt;/p&gt;

&lt;p&gt;GRUB&lt;/p&gt;

&lt;p&gt;/sbin/init&lt;/p&gt;

&lt;p&gt;init process tree&lt;/p&gt;

&lt;p&gt;sysv init and runlevels&lt;/p&gt;

&lt;p&gt;etc/inittab&lt;/p&gt;

&lt;p&gt;etc/init.d/rcs&lt;/p&gt;

&lt;p&gt;etc/rc5.d&lt;/p&gt;

&lt;p&gt;etc/default&lt;/p&gt;

&lt;p&gt;virtual console&lt;/p&gt;

&lt;p&gt;.bashrc&lt;/p&gt;

&lt;p&gt;shell&lt;/p&gt;

&lt;p&gt;.login&lt;/p&gt;

&lt;p&gt;halt -p now&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;2 Further Reading&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www3.cs.stonybrook.edu/~prade/Teaching/Spring13/prez/L01/boot.pdf&quot;&gt;The Linux Boot Sequence&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.tldp.org/LDP/intro-linux/html/sect_02_01.html&quot;&gt;Introduction to Linux, Section 2, TLDP.org&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Server Creation in Eclipse</title>
   <link href="http://thelogbox.com/websphere/server-creation-eclipse"/>
   <updated>2014-11-21T00:00:00+08:00</updated>
   <id>http://thelogbox.com/websphere/server-creation-eclipse</id>
   <content type="html">&lt;p&gt;Launch Eclipse. On the menu, click  &lt;strong&gt;File &amp;gt; Other&lt;/strong&gt;. This will take you to the selection wizard. Choose &lt;strong&gt;Server&lt;/strong&gt;. Note, do not choose the Liberty Profile configuration option. That is not what we need&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wlp-define-server-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Define a new server. Choose &lt;strong&gt;WebSphere Application Server Liberty Profile&lt;/strong&gt;. You need to provide the &lt;strong&gt;Server’s hostname&lt;/strong&gt; and a &lt;strong&gt;Server name&lt;/strong&gt;. These have reasonable defaults anyway but you can change them if you like. &lt;/p&gt;

&lt;p&gt;The Server’s hostname defaults to &lt;strong&gt;localhost&lt;/strong&gt;, that is because most of the time, you will run the Liberty profile server on the same machine where you are running Eclipse. If you will test the Liberty profile serve from machine other than where you are running Eclipse, change the Server’s hostname to a machine IP address or to a hostname that is resolvable within your local area network.&lt;/p&gt;

&lt;p&gt;The Server name is just a label so you can easily identify it within Eclipse. Put what you want in it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wlp-define-server-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Set the &lt;strong&gt;Runtime Environment&lt;/strong&gt;. It will ask you to give a name for Server again, this is essentially the same Server name in the dialog window, just acccept the default name.&lt;/p&gt;

&lt;p&gt;There are two options for the Runtime Environment. You can either download a Runtime Environment or use one that you have already installed. We have already installed a Runtime Environment when we did the &lt;strong&gt;Command Line installation&lt;/strong&gt; in the previous section.&lt;/p&gt;

&lt;p&gt;If you choose to download a runtime, Eclipse will make a connection to the WAS Dev site and pull the runtime and extended jar files for the Liberty Profile. &lt;/p&gt;

&lt;p&gt;We will choose not to download the Runtime at this time. We will use our previously downloaded jar files for the Liberty profile runtime. Click &lt;strong&gt;Browse&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wlp-define-server-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the &lt;strong&gt;Browse&lt;/strong&gt; button again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wlp-define-server-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The file you need is &lt;strong&gt;wlp-developers-runtime-XX.XX.jar&lt;/strong&gt;. This was downloaded previously from the &lt;a href=&quot;https://developer.ibm.com/wasdev/&quot;&gt;WAS Dev site&lt;/a&gt;. Choose the file then click the &lt;strong&gt;Open&lt;/strong&gt; button&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wlp-define-server-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Notice the button on lower part of the screen that says &lt;strong&gt;Add Archive …&lt;/strong&gt;. Click that and choose the &lt;strong&gt;wlp-extended-XX.XX.jar&lt;/strong&gt; we have downloaded earlier. &lt;/p&gt;

&lt;p&gt;You can choose the add-ons at this point. You can come back later to choose other add-ones so don’t worry about your choices now. Click the &lt;strong&gt;Next&lt;/strong&gt; button to proceed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wlp-define-server-6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wlp-define-server-8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wlp-define-server-7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally you will choose the installation folder for the runtime environment. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wlp-define-server-9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Finish&lt;/strong&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Creating Servers</title>
   <link href="http://thelogbox.com/websphere/server-creation"/>
   <updated>2014-11-20T00:00:00+08:00</updated>
   <id>http://thelogbox.com/websphere/server-creation</id>
   <content type="html">
</content>
 </entry>
 
 <entry>
   <title>Liberty Profile Installation</title>
   <link href="http://thelogbox.com/websphere/install-liberty-profile-stand-alone"/>
   <updated>2014-11-13T00:00:00+08:00</updated>
   <id>http://thelogbox.com/websphere/install-liberty-profile-stand-alone</id>
   <content type="html">&lt;p&gt;There are three ways to run the Liberty profile. First is to install it using the IBM Installation Manager. But this means you will have to install the base binaries of a WebSphere Application Server then install the Liberty profile. If your intention is to get acquainted with a true blue WAS installation, this might be the way to go. The Liberty profile has high fidelity with the WAS full profile as far as developers are concerned but it still not the full profile. &lt;/p&gt;

&lt;p&gt;If you choose to run the Liberty profile using the IBMIM, You will need your IBM id. If your work is on the admin or DevOps side of things, this is probably the ideal setup for you. &lt;/p&gt;

&lt;p&gt;The other two ways to run the Liberty Profile does not require the IBM Installation Manager. We simply need to grab a couple of jar files from the WAS Dev site and run the installation using the jar files. &lt;/p&gt;

&lt;p&gt;The Liberty profile can be ran and administered as a stand alone application using command line scripts that comes with it. It can also be integrated within an Eclipse IDE.&lt;/p&gt;

&lt;h2 id=&quot;command-line-installation&quot;&gt;1 Command Line Installation&lt;/h2&gt;

&lt;p&gt;Grab the jar files from &lt;a href=&quot;https://developer.ibm.com/wasdev/&quot;&gt;WAS Dev site&lt;/a&gt;. You can choose to download either the Beta or the GA (General Availability) release. Once you have downloaded the jar files, run the installer.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;runtime&lt;/strong&gt; can be installed using the command below&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java -jar wlp-beta-runtime-2014.11.0.0.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This archive install will prompt you to read the license, accept it and it will also prompt you where you would like to store the runtime files. The default location is the current directory.&lt;/p&gt;

&lt;p&gt;If you need to develop applications that will use &lt;strong&gt;Web Services, JMS, JCA, WebRTC or MongoDB&lt;/strong&gt;, you will need the extended runtime. That is a separate jar file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java -jar wlp-beta-extended-2014.11.0.0.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Same process as when you installed the runtime,it will prompt you for the license acceptance and location where to store the files. &lt;/p&gt;

&lt;p&gt;The third jar file is for administration. At the time of writing, the admin is not very useful and quite limited in capability. It simply starts, stops and restarts the runtime. Those are things that are easy enough to do on the command line. But install it anyway if you would like to see it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java -jar wlp-beta-admin-2014.11.0.0.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;installation-directory&quot;&gt;1.1 Installation Directory&lt;/h3&gt;

&lt;p&gt;You will need Administrative privileges when running and maintaining the Liberty profile runtime. It is best to install it where you have read/write/execute privileges and this folder is usually your home folder. &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; - This is usually somewhere in C:\Users\yourname\&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt; - ~/ or /home/yourname&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;OSX&lt;/strong&gt; - ~/ or /Users/yourname&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;eclipse-installation&quot;&gt;2 Eclipse Installation&lt;/h2&gt;

&lt;p&gt;The procedure for installing WAS Liberty Profile in Eclipse couldn’t be simpler. The steps for installation is outlined below. For the purpose of this exercise, the Eclipse edition used is &lt;strong&gt;JEE&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Launch Eclipse&lt;/li&gt;
  &lt;li&gt;Launch a web browser. Navigate to the &lt;a href=&quot;https://developer.ibm.com/wasdev/&quot;&gt;WAS Dev site&lt;/a&gt;. Choose either the &lt;strong&gt;GA&lt;/strong&gt; or the &lt;strong&gt;Beta&lt;/strong&gt; release. Either way, there is an option for &lt;strong&gt;online&lt;/strong&gt; installation. Look for an icon with a mouse pointer overlapping the Eclipse logo &lt;/li&gt;
  &lt;li&gt;From the web page, drag and drop the Eclipse logo to any part of an open Eclipse window, the one you launched in step &lt;strong&gt;1&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Accept the license and follow the prompts&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Alternatively, you can also do the following steps to install in Eclipse&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Launch Eclipse&lt;/li&gt;
  &lt;li&gt;From the &lt;strong&gt;Help&lt;/strong&gt; menu, choose &lt;strong&gt;Eclipse Market Place&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;On the &lt;strong&gt;Find&lt;/strong&gt; text box, type &lt;strong&gt;WebSphere&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Liberty Profile can be installed for Eclipse Luna and Kepler. Find the entry that says &lt;strong&gt;IBM WebSphere Application Server Liberty Profile for Luna&lt;/strong&gt;. Or Kepler if that is the Eclipse version you have&lt;/li&gt;
  &lt;li&gt;Accept the license and follow the prompts&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Audience</title>
   <link href="http://thelogbox.com/csharp/who-should-read"/>
   <updated>2014-11-01T00:00:00+08:00</updated>
   <id>http://thelogbox.com/csharp/who-should-read</id>
   <content type="html">&lt;p&gt;I wrote this for Steph. Hopefully, she will have a genuine interest in programming and that she may find this note as a useful learning resource as she goes through her college programming subjects, I know that this term, it is C#, hence, these notes. If you happen to find this note on the world wild web, you are probably one of my daughter’s classmate, groupmate or one of my former students, whoever you maybe, I hope you find this note useful. I wrote it to guide beginning programmers on their first few steps towards a very long journey in software development.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Introduction</title>
   <link href="http://thelogbox.com/csharp/introduction"/>
   <updated>2014-11-01T00:00:00+08:00</updated>
   <id>http://thelogbox.com/csharp/introduction</id>
   <content type="html">&lt;p&gt;Programs are the stuff that you run on your computer; or tablets or phones—you probably know them better as apps. There are lots of things that you need in order to build an app, but the biggest and probably the most important thing you need is knowledge of a programming language.&lt;/p&gt;

&lt;p&gt;A program is just a bunch of executable statements arranged in a specific order. Some statements execute right after another statement; some execute repeatedly while some conditions are true (or not), and then some statements are executed only when conditions are true.&lt;/p&gt;

&lt;p&gt;The subject of this field guide is C# (pronounced see sharp) It is intended to be a simple, modern, general-purpose, object-oriented programming language. Its development team was led by Anders Hejlsberg. The most recent version is C# 5.0, which was released on August 15, 2012. 1.&lt;/p&gt;

&lt;p&gt;There are other things to say about this language, such as it is statically typed, supports class-based OOP, strongly typed and has support for both functional style and imperative type programming, but they won’t make sense right now. You need to know some basics about the language before any of these fancy vocabulary will make sense to you, so I will try to explain what they mean along the way. What maybe important to realize right now are the facts that C# is a high-level language and that it is compiled.&lt;/p&gt;

&lt;p&gt;To speak loosely, computers can only run low-level instructions (sometimes they are also called machine instructions or assembly instructions). Low level languages are more difficult to write, that is why they are also more difficult to change. A high-level program on the other hand is written in an almost-English-like language. They are easier to learn and write (re-write).&lt;/p&gt;

&lt;p&gt;A program written in a high level language will not be readily understood by a machine though, they need to be translated. There are two ways to translate high level languages. One is by compilation and the other is by interpretation. An interpreter is also computer program, it does what it says—it interprets a high-level program to machine language. It does so by reading a the high-level source file one line at the time, and executes them also one line at a time.&lt;/p&gt;

&lt;p&gt;A compiler (which is also another computer program) reads a high level source code in its entirety and translates it in one fell swoop, then you can run the program.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Hello World</title>
   <link href="http://thelogbox.com/csharp/hello-world"/>
   <updated>2014-11-01T00:00:00+08:00</updated>
   <id>http://thelogbox.com/csharp/hello-world</id>
   <content type="html">&lt;p&gt;Beginning programmers get their feet wet on a new language by writing the hello world program. It is a useless program because it provides no measurable utility value except that it allows you to learn the flow and the steps of how to write the simplest code.&lt;/p&gt;

&lt;p&gt;C# is a simple language but it is not the simplest. Our program will contain some items that may not make sense to you immediately because they require and understanding of other more advanced concepts e.g. classes and namespaces. The complexity cannot be helped even in the simplest program because C# is an object oriented language. You cannot write anything outside a class, even the lowly instruction of printing “Hello World” to the screen.&lt;/p&gt;

&lt;p&gt;Create a folder where you will store all your practice source files. Create a file and name it “Hello.cs”. Once the file is created, we can type the contents of our program.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;filename: Hello.cs&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;author: Ted&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;date: &lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The C# compiler is accessible via the command line. You may notice however, that simply launching cmd.exe and typing &lt;strong&gt;csc&lt;/strong&gt; will yield an error instead of letting us compile our program. &lt;/p&gt;

&lt;p&gt;If the framework SDK has been properly setup, the installer would have created a script named &lt;strong&gt;vcvars32.bat&lt;/strong&gt; which contains commands that will include the framework SDK’s binaries to the system path. You need launch vcvars32.bat first before attempting any compilation on the command line. The installer would also have created a menu shortcut for vcvars32.bat, find that on the Windows menu and launch it. &lt;/p&gt;

&lt;p&gt;Launching vcvars32 will also launch a cmd terminal window. You will use that window to compile and run our program&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;ath&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;o&lt;span class=&quot;se&quot;&gt;\y&lt;/span&gt;our&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;roject&lt;span class=&quot;se&quot;&gt;\f&lt;/span&gt;older
C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; csc Hello.cs
C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; Hello.exe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;using-mono&quot;&gt;Using mono&lt;/h2&gt;

&lt;p&gt;On Linux and OSX, if you have installed the mono development kit and mono development runtime, you will use the &lt;strong&gt;mcs&lt;/strong&gt; command to compile and the &lt;strong&gt;mono&lt;/strong&gt; command to run our program.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /path/to/your/project/folder
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mcs Hello.cs
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mono Hello.exe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You cannot simply type “Hello.exe”, .NET programs needs a runtime environment to execute, that is why you need to run mono first before you can run Hello.exe. This runtime is called the CLR (Common Language Runtime). I will tackle this subject, but not now.&lt;/p&gt;

&lt;p&gt;On a windows machine, you did not need to invoke the .NET runtime, you simply typed Hello.exe and it runs just fine.Why?–because recent versions of Windows actually includes the .NET runtime already, and if it is intelligent enough to invoke the .NET runtime when it needs to. &lt;/p&gt;

&lt;h1 id=&quot;walk-through-of-the-hello-program&quot;&gt;Walk through of the Hello program&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;using System&lt;/strong&gt; - The “using” keyword allows you to use the Types defined in the &lt;em&gt;System&lt;/em&gt; namespace. When .NET was released, it came not only with the languages, it also came with lots of built-in Types that you can use immediately. There will be a discussion of Types way down the road, but for now, just settle for the explanation that if we did not use the System namespace, instead of writing &lt;strong&gt;Console.WriteLine()&lt;/strong&gt; we needed to write &lt;strong&gt;System.Console.WriteLine()&lt;/strong&gt;.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;class Hello {}&lt;/strong&gt; - CSharp is very object oriented, you cannot write anything meaningful outside of a class construct. Unlike C++, where you can still program in a procedural way and only optionally use the OOP constructs, CSharp forces you to use the class constructs—even for a trivial program like the Hello program; &lt;strong&gt;class&lt;/strong&gt; is a keyword (reserved word) which denotes that what follows is a name of class you are trying to define.  The pair of curly braces is the body of the class. You can write lots of things inside the class’ body, although for now, we just wrote &lt;em&gt;main()&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;public static int Main()&lt;/strong&gt; - this is called a method, some people may refer to it as a function, they will be right also but in OO languages, generally functions are referred to as methods–I will tell you why later, but not now. Main() is a very special method, all console applications (like our Hello program) is expected to have the Main() method because this is the entry point of the program. When you invoke the program, the .NET runtime will look for method, and if you did not define it—I mean exactly as it is written in the sample code, nothing will happen when you run your program. So make sure you type it exactly as it appeared in the sample code&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Console.WriteLine()&lt;/strong&gt; - Console is a built-in type under the System namespace, it does lots of things and it has lots of methods. One of the method is WriteLine(). What WriteLine does is to send a string data straight to the stdout (standard out, which means your screen). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Semi colon&lt;/strong&gt; - You will notice that all statements in CSharp are terminated using a semi colon, this is important because the semi colon will tell the compiler that you are finished with a statement. It signals the end of a programming statement pretty much as a period signals the end of a sentence in the English language. &lt;/p&gt;

&lt;p&gt;CSharp is a case-sensitive language, &lt;strong&gt;main()&lt;/strong&gt; is not the same as &lt;strong&gt;Main()&lt;/strong&gt;, so type carefully.&lt;/p&gt;

&lt;h2 id=&quot;vocabulary&quot;&gt;Vocabulary&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Source code&lt;/strong&gt; - sometimes called source file. It is a text file where you write CSharp statements.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;High level language&lt;/strong&gt; - a computer programming language undertandable by mere mortals, it looks a lot like the English language, but a computer programming language, unlike English does not contain ambiguities. Each statement you write in a programming language has very precise meaning—strive to know them well&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Compiler&lt;/strong&gt; - a computer program that takes in a source file as an input, processes it (parsing) then translates it to a format understandable by machines (machine code). CSharp comes with &lt;strong&gt;csc&lt;/strong&gt; on Windows and &lt;strong&gt;msc&lt;/strong&gt; on mono platform (which can run on platforms other than Windows)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Main()&lt;/strong&gt; - a special function in CSharp, if you will write console applications, you need to be very acquainted with the format of Main(). Whenever you invoke a compiled .NET CLI (command line interface) program, .NET will always look for &lt;strong&gt;public static int Main()&lt;/strong&gt;. This is the entry point of your app&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;CLR&lt;/strong&gt; - The common language runtime is a rich environment which abstracts a lot of what the Operating System can do for your programs. The CLR can open files, network connections, database connections etc. There are things also that a CLR can do for you that the Operating System cannot—the OS cannot do automatic garbage collection for your app, the CLR can; but let’s leave the garbage collection for another discussion&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Environment</title>
   <link href="http://thelogbox.com/csharp/environment"/>
   <updated>2014-11-01T00:00:00+08:00</updated>
   <id>http://thelogbox.com/csharp/environment</id>
   <content type="html">&lt;p&gt;The .NET framework includes a large collection of libraries and a runtime environment. The FCL or Framework Class Library consist of a large class library allows us a developer to do lots of things like create a Windows Desktop application, build a web page, write a custom control. The library also allows a program written in a language other than C# to be used from within a C# program and vice versa. This language interoperability if part of the FCL.&lt;/p&gt;

&lt;p&gt;.NET programs are meant to run on a virtual machine called the CLR which is short Common Language Runtime. The virtual machine runtime provides some services that the operating system cannot provide e.g. garbage collection. &lt;/p&gt;

&lt;p&gt;A short list of things included in the .NET framework is found below&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Common Language Runtime (CLR)&lt;/li&gt;
  &lt;li&gt;The .Net Framework Class Library&lt;/li&gt;
  &lt;li&gt;Common Language Specification&lt;/li&gt;
  &lt;li&gt;Common Type System&lt;/li&gt;
  &lt;li&gt;Metadata and Assemblies&lt;/li&gt;
  &lt;li&gt;Windows Forms&lt;/li&gt;
  &lt;li&gt;ASP.Net and ASP.Net AJAX&lt;/li&gt;
  &lt;li&gt;ADO.Net&lt;/li&gt;
  &lt;li&gt;Windows Workflow Foundation (WF)&lt;/li&gt;
  &lt;li&gt;Windows Presentation Foundation&lt;/li&gt;
  &lt;li&gt;Windows Communication Foundation (WCF)&lt;/li&gt;
  &lt;li&gt;LINQ&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tools&quot;&gt;Tools&lt;/h1&gt;

&lt;p&gt;The best tool for writing C# applications is Visual Studio. You need to pay for it, it is not free. But you can get alternative tools to start developing C# apps. You can download &lt;strong&gt;Express for Web&lt;/strong&gt;, &lt;strong&gt;Express for Windows&lt;/strong&gt; and &lt;strong&gt;Express for Windows Desktop&lt;/strong&gt;. You can read about the detailed descriptions of these tools from the &lt;a href=&quot;http://www.visualstudio.com/en-us/products/visual-studio-express-vs.aspx&quot;&gt;Visual Studio download page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;command-line-tools&quot;&gt;Command Line Tools&lt;/h2&gt;

&lt;p&gt;If you download any edition of the Visual Studio Express, either for Web, Windows or Windows Desktop, it will already include the .NET framework SD. The SDK contains tools and binaries that will allow you compile C# programs from the command line. Alternatively, the .NET framework SDK can also be downloaded without downloading Visual Studio.  You can download the framework SDK from the &lt;a href=&quot;http://msdn.microsoft.com/en-us/vstudio/aa496123.aspx&quot;&gt;MSDN download site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The framework SDK is applicable to Windows users, if you are on Linux or OSX, you can use &lt;strong&gt;mono&lt;/strong&gt; which can you download from the &lt;a href=&quot;http://www.mono-project.com/download/&quot;&gt;mono project site&lt;/a&gt;. You will need to install both the mono runtime environment (MRE) and the mono development kit (MDK).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Mono Development Environment</title>
   <link href="http://thelogbox.com/csharp/mono-development"/>
   <updated>2014-10-29T00:00:00+08:00</updated>
   <id>http://thelogbox.com/csharp/mono-development</id>
   <content type="html">
</content>
 </entry>
 
 <entry>
   <title>Project Structure</title>
   <link href="http://thelogbox.com/android/android-project-structure"/>
   <updated>2014-10-12T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android/android-project-structure</id>
   <content type="html">&lt;p&gt;An Android project is required to build a single app. A project is a
simple folder that contains a collection of XML, Java source, images,
property and optional audio or video files. It has a very specific
structure that stays the same for all android projects.&lt;/p&gt;

&lt;p&gt;The commands and utilities inside the Android SDK expects this structure
and is optimized to work with it. If you deviate from this structure,
you will have grief. It is not wise to build this project structure
unaided by tools. At the very least, you should use the &lt;strong&gt;android create
project&lt;/strong&gt; utility included in the SDK.&lt;/p&gt;

&lt;p&gt;Popular IDEs like Eclipse, NetBeans and Android Studio have wizard
driven ways of creating an android project. But no matter what you use
to create such a project, the structure of the files and folders is
pretty uniform.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/android-project-structure.png&quot; alt=&quot;android-project-structure.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The one on the left is a project created using just the SDK. The picture
on the right was created using the Android App Studio, a full blown IDE
for Android development. While the Android Studio project appears to
have more files, the basic structure of the two projects remains very
consistent.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;src&lt;/strong&gt; a folder that contains the Java source files. All your program logic
  will be written on these files. If you want to do something when a
  user clicks a Button, starts you application or suspends an
  application, you will write them on the source files. And these
  source files will be stored here&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;res&lt;/strong&gt; a folder that contains other folders like “res”, “values” and some
  images. The folder names that says “drawable” contains images that
  your application may use&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;bin&lt;/strong&gt; When you compile the project, this is where the binary or executable
  files will be stored&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;libs&lt;/strong&gt; Sometimes you will need to use codes that other developers built.
  These third party libraries should be located on this folder&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;layout&lt;/strong&gt; Android favors the declarative way of defining user interfaces. The
  screens you will create can be built using XML files. This is the
  folder where XML screen files are stored&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;values&lt;/strong&gt; Hard coding string values is a dangerous practice. The idiomatic way
  of defining strings for labels, buttons etc is to store them in
  resource bundles. These resource bundles are nothing more than XML
  files. You will store the resource bundles in this folder&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AndroidManifest.xml&lt;/strong&gt; Every project needs one manifest file. This file is important. It
  declares the things that are inside your application like how many
  screens it have, what their names are. It also affects the things
  your application can do. It declares whether your application can
  use the network, the local storage or the camera for example&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;local.properties&lt;/strong&gt; This file contains build configuration information e.g. the location
  of the Android SDK in your system&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Layout Weights</title>
   <link href="http://thelogbox.com/android/layout-weights"/>
   <updated>2014-10-10T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android/layout-weights</id>
   <content type="html">&lt;p&gt;A project created with a default Activity will include an XML file and an Activity class. These two are given to you so you can get started quickly in displaying at least one screen in your application. The screen is of vanilla construction. This default layout is mostly used for some quick fire challenges. The kinds of things you do when you just want to test some things.&lt;/p&gt;

&lt;p&gt;Real applications typically display some sophistication in their layouts. Let’s look at one small change you can do to effect some layout changes. The code snippet below is typical of the vanilla XML file given to us during project creation.&lt;/p&gt;

&lt;h2 id=&quot;review-of-linearlayout&quot;&gt;Review of LinearLayout&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas...&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  android:orientation=&amp;quot;vertical&amp;quot;
  android:layout_width=&amp;quot;fill_parent&amp;quot;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The orientation is set to &lt;strong&gt;vertical&lt;/strong&gt; and the layout_width is set to &lt;strong&gt;fill_parent&lt;/strong&gt;. With those setting in effect, each View component you will add to this layout will be stacked on top of each other. The first View object to be added will be the one on top, the next View object will follow suit.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&amp;gt;&lt;/span&gt;
  android:orientation=&amp;quot;vertical&amp;quot;
  android:layout_width=&amp;quot;fill_parent&amp;quot;  

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;CheckBox&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The preceding code example will result in a screen which has a CheckBox with a Button View right on top of it. The Button occupied whole width of the screen because the LinearLayout container says &lt;strong&gt;fill_parent&lt;/strong&gt; on its layout width. The Checkbox did the same, it spanned the whole width of the screen for the same reason the Button did. No surprises here. This is how a linear layout is supposed to work. The behavior is expected. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/linear-layout-vertical.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are some class of applications for which this kind of layouting might be okay. If the screen for example just wants to display a series of check boxes stacked on top of each other, like in a survey form, then this layout will suffice. No further tweaking is needed. &lt;/p&gt;

&lt;h2 id=&quot;weighted-layout&quot;&gt;Weighted layout&lt;/h2&gt;

&lt;p&gt;Let’s go to another layout example. Suppose we create a screen that allows a user to enter some data and when the user clicks a button, whatever he entered onto the text box will be added to a static text View, like a label. To build this example, we will need the following View objects: &lt;strong&gt;EditText, TextView&lt;/strong&gt; and &lt;strong&gt;Button&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;An EditText View allows for user input. If you have programming experience, you may have called this by a different name, perhaps you referred to it before as a textfield. Its the same thing. A TextView is a static text control. Some programmers call it a label. And you already know what a Button View does. &lt;/p&gt;

&lt;p&gt;Once we have created a new project with a default Activity, we can add the Views to our Layout. It could look like the next code sample&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/editText&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:textAppearance=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;?android:attr/textAppearanceLarge&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Large Text&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/textView&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;New Button&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/button&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will result to a screen where the EditText, TextView and the Button are stacked on top of one another. Each of the Views stretching out to the whole width of the screen. That may not be a problem for the width but it will be a problem for the height. Each View will vertically occupy just what it needs to display their content. The Button will size its height just enough to accomodate its label, the TextEdit will size itself accordingly to accomodate its current textual content and the EditText will size itself to accomodate a single line text input. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/weighted-layout.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The screen layout is not tight. There is plenty of unutilized screen space after the Button which makes the design clumsy. Putting screen space to good use gives the the app a more sophiscticated look. &lt;/p&gt;

&lt;p&gt;A small change we can make is to anchor the EditText and the Button on the opposite sides of the screen, top and bottom to be precise, so that the TextEdit can stretch itself vertically in between and occupy whatever space is left. To achieve this result, we will assign layout weights on each View.&lt;/p&gt;

&lt;p&gt;LinearLayout allows weight assignment for each View that is contained within. All Views by default are assigned a weight of zero. If the weight of a View is zero, the View cannot grow in space beyond what it needs to display its content. A View whose weight is more than zero is deemed to be more important. Hence it is allowed to stretch and hog the remaining space left on the screen.&lt;/p&gt;

&lt;p&gt;To achieve our desired layout, we will make the weight of the Button and EditText zero and assign a weight of one to the TextView&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/editText&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_weight=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:textAppearance=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;?android:attr/textAppearanceLarge&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Large Text&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/textView&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_weight=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;New Button&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/button&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_weight=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The EditText and Button Views are now pushed to the top and bottom and the TextView stretched its height to fill up the gap left by other two Views. Because only the TextView is assigned a weight more than zero, it is the only View that can grow beyond what it needs for display. &lt;/p&gt;

&lt;p&gt;Had we assigned all three Views equal weights of 1, all of them will grow in space beyond what they need but they will grow uniformly. The whole screen will be divided by three components. If we assigned each of them a weight of 2, you will not see any difference when they all had a weight of 1. Interesting things happen Views are assigned varying weights.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/different-weights.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Programming Prerequisite</title>
   <link href="http://thelogbox.com/android/android-what-you-need-to-know-before"/>
   <updated>2014-10-09T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android/android-what-you-need-to-know-before</id>
   <content type="html">&lt;p&gt;Before diving into Android programming, there are a couple of skills you might want to look at. It is possible to simply jump into programming, build some basic screens by copying example codes from the internet or from other programmers. But you cannot go to the deep end. When you find yourself neckdeep in the not-so-trivial parts of Android programming and you feel stuck, that’s probably because you haven’t covered some bases.&lt;/p&gt;

&lt;p&gt;The ideal set of skills to bring into Android development includes experience in AWT/Swing, JDBC, Collections, Network and Thread programming and a couple of others. But not many people will have this. For one reason, AWT and Swing went out of favor a long time ago. Most Java programmers right now have experience on web development but not desktop. &lt;/p&gt;

&lt;h2 id=&quot;object-oriented-concepts&quot;&gt;1. Object Oriented Concepts&lt;/h2&gt;

&lt;p&gt;The Android framework uses OOP heavily. You need to be comfortable with the idiomatic use of things like class/interface inheritance, polymorphism etc. Even the humble Hello World application in most Android textbooks involves the use inheritance. &lt;/p&gt;

&lt;h2 id=&quot;java-fundamentals&quot;&gt;2. Java fundamentals&lt;/h2&gt;

&lt;p&gt;You will need to be familiar with programming fundamentals in Java. Even if Android uses a different VM to run the apps, the language used for native apps development is Java. The more familiarity you have with basic programming concepts in Java, the better. You should at least know the concept of variables, constants, branching and looping, packaging and scope visibility, basic I/O and file persistence.&lt;/p&gt;

&lt;h2 id=&quot;java-collections&quot;&gt;3. Java Collections&lt;/h2&gt;

&lt;p&gt;Beyond simple variables, you will need some skills to handle collections of data. A basic familiarity with rudimentary data structures like arrays, maps and sets will be essential.&lt;/p&gt;

&lt;h2 id=&quot;java-event-model&quot;&gt;4. Java Event model&lt;/h2&gt;

&lt;p&gt;Android applications are heavy on user interaction. For the most basic applications, you might be able to get away by simply knowing how to put the click handler on XML file. But for other gestures like long clicks, swipe etc, you will need to write Java codes to handle the event. The Java event model uses listeners and callbacks quite a lot.&lt;/p&gt;

&lt;h2 id=&quot;xml&quot;&gt;5. XML&lt;/h2&gt;

&lt;p&gt;A passing familiarity wih XML structures and validation rules should take you quite far in Android programming. You don’t need to work much with XML programmatically. Your usual need for XML will arise when you define layouts and when configuring permissions for the app. If you have coded HTML before without using WYSIWYG tools, you should be fine.&lt;/p&gt;

&lt;h2 id=&quot;sql&quot;&gt;6. SQL&lt;/h2&gt;

&lt;p&gt;Some, if not most, of the applications you will make will need to store data. Some data might be simple and can be stored either via the preferences or the SD card. But some might need the facility of a relational database. The Android runtime includes the SQLite database. You will talk to it using the Structured Query Language. SQL is not a difficult language, its quite enjoyable to learn actually because of its declarative nature. It is almost English like.&lt;/p&gt;

&lt;h2 id=&quot;build-tools&quot;&gt;7. Build tools&lt;/h2&gt;

&lt;p&gt;An Android project is a compilation of various files e.g. XML, image resources, compiled byte codes, source codes etc. Getting all these resources to stick and work together cannot be done by hand, well actually it can be, but it will not be practical. That is why even the barebones SDK requires the use Apache Ant to help in compiling, building and deploying your applications. &lt;/p&gt;

&lt;h2 id=&quot;command-line-experience&quot;&gt;8. Command line experience&lt;/h2&gt;

&lt;p&gt;Even if you plan to use a full blown IDE like Eclipse, Android Studio or NetBeans, its not a bad idea to invest some time getting some skills on the command line. They might take a while longer to learn than their GUI counterparts but the effort will pay off. When you run into some problems on the IDE, your CLI skills might save you. You don’t need to be a ninja on the terminal, you can get by with some basics e.g. creating and deleting files, moving around directories, invoking ant scripts, using adb etc.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Key Concepts in Android</title>
   <link href="http://thelogbox.com/android/android-key-concepts"/>
   <updated>2014-10-09T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android/android-key-concepts</id>
   <content type="html">&lt;p&gt;Android applications are comprised of Java executable codes, XML files and other application resources like video, images and audio. These are all bundled together inside an .apk file.&lt;/p&gt;

&lt;p&gt;You will write your program in the Java programming language and compile them using the  Android SDK (software development kit). When the app is compiled, it becomes an android package. An android package is an archive file with a .apk extension. Think of them like zipped files for Android.&lt;/p&gt;

&lt;p&gt;When applications have been built and digitally signed, they can be distributed on market places like Google Play or Amazon. They don’t have to be but these market places are frequented by a lot of people, your can benefit from exposure which the market places can offer. &lt;/p&gt;

&lt;h2 id=&quot;architecture&quot;&gt;1.  Architecture&lt;/h2&gt;

&lt;p&gt;Android may refer to many things, some people use it to refer to their mobile device and some others use the term to refer to the programming environment. That’s fine. For our purpose, what we mean by Android is a platform which have runtime components where mobile apps can run.&lt;/p&gt;

&lt;p&gt;This platform is special version of Linux that is optimized for mobile devices. The Linux part takes care system services e.g. network and file operations, concurrency etc. The platform includes a bunch of other
things like WebKit which is the same browser engine that powers Chrome and Safari. It also has SQLite which you can use for database programming. It has other components useful for application development, but instead of listing all of them here, I will point them out in later when we need to use them.&lt;/p&gt;

&lt;p&gt;The one other thing to point out in the Android software stack is the framework. The framework lets us do things such as create screens, write code that runs in background, listen to some events that may happen on the mobile device (and do something about it). The platform enables us to do all these things by simply extending existing classes in the
Android SDK.&lt;/p&gt;

&lt;p&gt;Extending classes means utilizing the inheritance mechanism of Java to reuse existing functionality. The Android development team already wrote codes to display buttons and textfields for example. All we need to do, is to reuse them, mash them up or mix it up so we can use them in our own applications.&lt;/p&gt;

&lt;p&gt;The Android SDK is a collection of tools and code libraries. SDK is short for software development kit. You will need to download, install and configure the SDK before you can start any development work.&lt;/p&gt;

&lt;h2 id=&quot;versions-and-api-level&quot;&gt;2. Versions and API level&lt;/h2&gt;

&lt;p&gt;Android has been around for quite some time. It has evolved so many times and as a result, there are various versions of it.&lt;/p&gt;

&lt;p&gt;A version number will correspond to a code name. Buyers of Android devices would probably recognize the android versions using the codename rather than the actual number. As a developer, we need to be familiar not only with both the version number and codename, we also need to know the API level.&lt;/p&gt;

&lt;p&gt;The API level is what you will see on the Android SDK manager. You will use the SDK manager when updating your software development kit.&lt;/p&gt;

&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col class=&quot;right&quot; /&gt;

&lt;col class=&quot;left&quot; /&gt;

&lt;col class=&quot;right&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;right&quot;&gt;Version&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;left&quot;&gt;Codename&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;right&quot;&gt;API&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;right&quot;&gt;2.2&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;Froyo&lt;/td&gt;
&lt;td class=&quot;right&quot;&gt;8&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;right&quot;&gt;2.3.3 - 2.3.7&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;Gingerbread&lt;/td&gt;
&lt;td class=&quot;right&quot;&gt;10&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;right&quot;&gt;4.0.3 - 4.0.4&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;Ice Cream Sandwich&lt;/td&gt;
&lt;td class=&quot;right&quot;&gt;15&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;right&quot;&gt;4.1.x&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;Jelly Bean&lt;/td&gt;
&lt;td class=&quot;right&quot;&gt;16&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;right&quot;&gt;4.2.x&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;Jelly Bean&lt;/td&gt;
&lt;td class=&quot;right&quot;&gt;17&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;right&quot;&gt;4.3&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;Jelly Bean&lt;/td&gt;
&lt;td class=&quot;right&quot;&gt;18&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;right&quot;&gt;4.4&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;KitKat&lt;/td&gt;
&lt;td class=&quot;right&quot;&gt;19&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;By the time you read this, there could be changes or additions to the Android platform. The official site of Android keeps an updated list of this info over at &lt;a href=&quot;https://developer.android.com/about/dashboards/index.html&quot;&gt;https://developer.android.com/about/dashboards/index.html&lt;/a&gt;. &lt;/p&gt;

&lt;h2 id=&quot;fundamentals&quot;&gt;3.  Fundamentals&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Creation of an app starts by creating an Android project. It is a simple folder that contains the Java sources, XML files, videos, audio, images etc. Depending on what IDE or tool you use, a project can be created and managed using either Ant, Maven or Gradle. These are called build tools and they are usually managed by the IDE. Most of the time, they are invisible to you&lt;/li&gt;
  &lt;li&gt;Write the program logic using Java. Whether you would like to show something on the screen, listen to an event or do something in the background, Android has prebuilt classes to handle those. These prebuilt classes are part of the Android framework that lets us create rich apps by extending exisiting classes in the framework. We’ll discuss Application components a bit more later&lt;/li&gt;
  &lt;li&gt;The screen user interface is, usually, constructed using XML. Widgets like buttons, textfields and other UI components are declared in the XML. Things such as size, alignments and weights of each component can be declared in this file as well&lt;/li&gt;
  &lt;li&gt;Most of apps are event driven. They wait for the user to enter or press something then then some processing happens. Program logic is usually written as response to an event. These codes are the ones you write using the Java language&lt;/li&gt;
  &lt;li&gt;The Java source file are converted to an executable form and the XMl is flattened as a result of the compilation process. The XML is converted to byte code representation, this is what we mean by flattened&lt;/li&gt;
  &lt;li&gt;If the compilation is not successful, the compiler will you what’s wrong with it and you should fix it then compile again. If it compiles successfully, you will test the application by deploying it either an emulator or a real device connected to your computer&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;application-components&quot;&gt;4.  Application Components&lt;/h2&gt;

&lt;h3 id=&quot;activities&quot;&gt;4.1 Activities&lt;/h3&gt;

&lt;p&gt;If you want to create a screen that can interact with the user, you can do that by creating an Activity class. It is called that because the class you will create will extend the existing Activity class that is part of the Android framework.&lt;/p&gt;

&lt;p&gt;By extending this class, you will be able to create other components such as buttons, textfields, lists etc and contain them inside a screen. You can also react to some events such as when an incoming call interrupts the user while using your application. &lt;/p&gt;

&lt;p&gt;An Activity is basically a single screen that a user can see and interact with. Most applications will have more than one Activity. They have more than one screen. You can stitch Activities together using &lt;strong&gt;Intents&lt;/strong&gt;. You can define a button on one Activity then write program logic such that when the button is clicked, it will launch another Activity. You will use Intents to launch other Activities.  &lt;/p&gt;

&lt;h3 id=&quot;services&quot;&gt;4.2 Services&lt;/h3&gt;

&lt;p&gt;Sometimes you will need to write code that is invisible to the user. One that doesn’t have a user interface. Surely you will need to launch it somehow from an Activity but once launched, the application just keeps on running. Even if the UI that launched it has already disappeared from view. A music player is such an example of this kind of app. A GPS enabled application which updates your location every now and then is another example.&lt;/p&gt;

&lt;p&gt;If you need to build these kinds of apps, you will use &lt;strong&gt;Services&lt;/strong&gt;. These are long running operations that are executed in the background. A Service is independent of the Activity that launched. Even if the UI screen that was used to launch the service has already died, the Service code just keeps on going.&lt;/p&gt;

&lt;h3 id=&quot;content-providers&quot;&gt;4.3 Content Providers&lt;/h3&gt;

&lt;p&gt;Each application runs on its own process. Its own virtual machine. This behavior of Android protects each application. If one badly written application goes wonky, it cannot bring the other running applications down. Its good for application stability. But this makes it nearly impossible for one application to access data from another. &lt;/p&gt;

&lt;p&gt;Content Providers solves the problem of data sharing between applications. It is possible for you to write an application and share whatever data it has with other applications. The &lt;strong&gt;Contacts&lt;/strong&gt; and &lt;strong&gt;Calendar&lt;/strong&gt; apps in Android are good examples of apps that have Content Providers.&lt;/p&gt;

&lt;p&gt;Don’t confuse Content Provider with your own database. If you create an application that uses a SQLite database, of course your application can access that. If, for example, you want to allow other applications to gain access to your app’s data, you can build a Content Provider. Your application will make the data available to other apps using standard URIs. &lt;/p&gt;

&lt;h3 id=&quot;broadcast-receivers&quot;&gt;4.4 Broadcast Receivers&lt;/h3&gt;

&lt;p&gt;Broadcast Receivers are used if you want to execute some program logic in your app as a response to events generated by either the Android system or other applications. You can, for example, inititate a database write when the phone receives an SMS message. You probably want to examine the SMS message and if it fits a certain criteria, you will record it to the database. This is one example of how to use Broadcast receivers.  &lt;/p&gt;

&lt;p&gt;You can make your application listen to certain events. To do this, you need to register your application to listen to a specific event. Its the same concept when you subcribe to a mailing list. When there is a new mail, you get notified.&lt;/p&gt;

&lt;p&gt;Apart from listening to broadcasted events, you can also make your application broadcast specific events. To do that, you will extend a specific Android class called the &lt;strong&gt;BroadcastReceiver&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;BroadcastReceivers typically don’t have user interfaces. But you can create notifications that will show up on the status bar.&lt;/p&gt;

&lt;h3 id=&quot;android-manifest-file&quot;&gt;4.5 Android Manifest file&lt;/h3&gt;

&lt;p&gt;This is one of the most important parts of an Android app. The manifest is an XML file that needs be on the root folder of the application project. Every project needs one, and there can only be one per project. It needs to be named &lt;strong&gt;AndroidManifest.xml&lt;/strong&gt;. The manifest declares lots of things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the name of the application&lt;/li&gt;
  &lt;li&gt;what kinds of components does the app have. Does it have Activities, what are their names. Does it listen to broadcast etc&lt;/li&gt;
  &lt;li&gt;what kinds of things can it do with the mobile device? Can it access the network. The internet. Will it use the camera. Will it record a GPS location&lt;/li&gt;
  &lt;li&gt;can other applications interact with this applcation. If so, what kinds of permission should these other applications have&lt;/li&gt;
  &lt;li&gt;does this application use any external libraries (usually jar files that other people wrote)&lt;/li&gt;
  &lt;li&gt;what versions of Android will this application run on. Will it run on Froyo (API level 8)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Android manifest file is usually created by default when you start a new project. But it only provides some minimum declaration. Beyond the basic HelloWorld apps, you will need to learn how to work and manage the manifest file.&lt;/p&gt;

&lt;h3 id=&quot;other-resources&quot;&gt;4.6 Other Resources&lt;/h3&gt;

&lt;p&gt;Besides the programming components and the Android manifest file, your application may also include the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;XML resource files&lt;/strong&gt; . XMLs are everywhere in Android. They are used to define screen layouts, manifest file, resource bundles etc.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Image Resources&lt;/strong&gt;. At a minimum, your app needs an icon that will appear on the Android apps menu&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Video and Audio  Resources&lt;/strong&gt; .If you are building a game or a training application, your apps may contain lots of these&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Third Party Libraries&lt;/strong&gt;. You include codes that other people built e.g. social media functionalities. These are included in the project in the form of jar files (Java archive)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-ways-to-build-android-apps&quot;&gt;5.  Other ways to build Android apps&lt;/h2&gt;

&lt;p&gt;There are other ways to build an Android app. You can build apps using using languages other than Java. An app can be built using HTML, CSS, JavaScript and a middleware like the Cordova API, a good example of this is Phonegap. You can use C# to write apps and retarget the compilation to Android using a product called Xamarin. There are ways to build Android apps as well using Ruby or Python.  &lt;/p&gt;

&lt;p&gt;There are tools or products that can build an Android app without coding or with minimal coding. MIT’s App Inventor is a example of this kind of tool. There are other tools like AppyPie, MakeMeDroid and Como. These app making tools are far too many to list down here. And by the time you are reading this, some of these names could be out of business already and new app makers have taken their places. Just search Google for “android app builder no code 2014” if you happen to still be reading this text in 2015, just substitute the current year in search term.&lt;/p&gt;

&lt;p&gt;Our focus in here, of course, is to write our app using the Java language and build it using the Android SDK.&lt;/p&gt;

&lt;div id=&quot;footnotes&quot;&gt;
&lt;h2 class=&quot;footnotes&quot;&gt;Footnotes: &lt;/h2&gt;
&lt;div id=&quot;text-footnotes&quot;&gt;

&lt;div class=&quot;footdef&quot;&gt;&lt;sup&gt;&lt;a id=&quot;fn.1&quot; name=&quot;fn.1&quot; class=&quot;footnum&quot; href=&quot;#fnr.1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Uniform Resource Identifier is just a piece of string that is used to identify a resource, such as a data resource that you would like to export using a Content Provider. It can appear like this: content://yourapp/resourcename. It looks a lot like what you would type in a browser address bar, although technically, what you use in a browser is called a URL (Uniform Resource Locator). Becauase a URL specifies not only the name of the resource, it also specifies the manner on how to get the resource (http). But for all intents and purposes, a URL is also a URI.&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Project Creation CLI</title>
   <link href="http://thelogbox.com/android/android-create-project-cli"/>
   <updated>2014-10-09T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android/android-create-project-cli</id>
   <content type="html">&lt;p&gt;You need a bunch of files to build a project. XML files are used for both configuration and defining screens. Images and other resources like video and audio may also need to be included, depending on the kind of project you are building. Last and most importantly will be the Java source files where you will write the program logic. All of these things come together inside an Android project. &lt;/p&gt;

&lt;p&gt;The SDK includes executable tools and utilities that you can use to create and manage android projects. If you properly installed the SDK and included the folders &lt;strong&gt;tools&lt;/strong&gt; and &lt;strong&gt;platform-tools&lt;/strong&gt; to your system path, you can start an Android project using the &lt;strong&gt;android create project&lt;/strong&gt; command.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;android create project --target 8
                       --path Hello
                       --package com.thelogbox
                       --activity Main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The command is meant to be ran on a terminal window like xterm, Terminal.app or cmd.exe. You will type them in one continuous line, not like how you see it here. They are written on 4 lines for formatting purposes only. You need to pass the four options shown above as a minimum in order to create a project, they don’t have to be in the order you see them here but they all need to be there.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;–target&lt;/strong&gt; option tells the tool what Android version will your app run on. It expects an integer argument. The number 8 in our example means we are targetting the Froyo version of Android. The number stands for an API level.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;–path&lt;/strong&gt; option dictates the name of the folder where all your programming assets e.g. source, xml and images will be located. In our example, we would like to create a folder named “Hello”. This is where we will store all the things we need to build the project.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;–package&lt;/strong&gt; option is what Android will use to organize the Java source file. If you are familiar with Java packages, it is exactly what this option means. The package name will also be used if you decide to sell your applications to market places like Google Play or Amazon. It becomes your namespace. The package name is usually the name of your website in reverse notation.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;–activity&lt;/strong&gt; option instructs the tool to automatically create a class that extends the Activity class of the Android framework &lt;/p&gt;

&lt;h1 id=&quot;errors-you-might-have-encountered&quot;&gt;Errors you might have encountered&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Command not found or Bad command or file name&lt;/strong&gt;. The command &lt;strong&gt;android&lt;/strong&gt; cannot be found within the places where your shell looks for executable file. Either you have not included the folders &lt;strong&gt;tools&lt;/strong&gt; and &lt;strong&gt;platform-tools&lt;/strong&gt; of the Android SDK into your system path. Either that or you made some spelling mistakes when you included them in the path.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Android create project command won’t complete&lt;/strong&gt;. This is most likely a spelling error when typing the commands as shown earlier. Take care that you use a double dash when specifying the option. There is no space between the double dash and the option. Take note that there is a space between the option and the argument&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Introduction</title>
   <link href="http://thelogbox.com/javascript/javascript-introduction"/>
   <updated>2014-09-29T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript/javascript-introduction</id>
   <content type="html">&lt;h2 id=&quot;what-is-it&quot;&gt;1 What is it&lt;/h2&gt;

&lt;p&gt;JavaScript is a loose, dynamically typed and interpreted scripting
language. It began life as LiveScript (1995); when it was a project at
Netscape Communications. At some point in time, it was renamed
JavaScript (roughly around the time when plugin support for the Java
language was added to Netscape Navigator).&lt;/p&gt;

&lt;p&gt;Java and JavaScript are not related to each other, not even remotely,
they simply share a commonality in their names.&lt;/p&gt;

&lt;p&gt;JavaScript’s popularity maybe attributed to it’s ubiquity amongst web
pages (client side JavaScript), but it is actually being used in lots of
places other than web pages. JS can be ran on the server (Node.JS), it
can be used to do MVC type development of web apps (Backbone.JS) and it
can also be used to stitch together a bunch of Java apps together
(Rhino); these are just some of the other uses of JavaScript.&lt;/p&gt;

&lt;p&gt;JavaScript as we know it today, is the scripting language consistent
with ECMAScript. ECMAScript is a standardized scripting language
according to ECMA specification 262 and ISO/IEC 16262. ECMAScript exist
in the form of JavaScript, ActionScript and JScript. If you are looking
for language specification of JavaScript, you can look at the ECMAScript
262^&lt;a href=&quot;#fn.1&quot;&gt;1&lt;/a&gt;^.&lt;/p&gt;

&lt;h2 id=&quot;a-bit-of-history&quot;&gt;2 A bit of history&lt;/h2&gt;

&lt;h3 id=&quot;origins&quot;&gt;2.1 Origins&lt;/h3&gt;

&lt;h3 id=&quot;about-the-name&quot;&gt;2.2 About the name&lt;/h3&gt;

&lt;h2 id=&quot;minimum-tooling&quot;&gt;3 Minimum tooling&lt;/h2&gt;

&lt;p&gt;It is not difficult to get started with JavaScript. The necessary tools
you need to try out and play around with the language are most likely
already in your notebook or desktop computer. You only need a modern web
browser and not much else.&lt;/p&gt;

&lt;p&gt;Most modern browsers like Chrome, Firefox, Safari and IE include the
JavaScript runtime, some diagnostic tools and even an interactive
JavaScript environment. You can use the interactive environment to try
out expressions and statements. It’s a programmer’s playground.&lt;/p&gt;

&lt;p&gt;You can use your preferred browser to try out the exercises, but if you
want to follow the coding examples closely, please use the latest Google
Chrome browser. That’s what I’ll be using for the examples.&lt;/p&gt;

&lt;h3 id=&quot;the-javascript-console&quot;&gt;3.1 The JavaScript console&lt;/h3&gt;

&lt;p&gt;The Chrome browser includes a set of developer tools. These tools are
used for authoring web pages and debugging. This is what we will use to
take our first steps towards JavaScript programming.&lt;/p&gt;

&lt;p&gt;Launch a Chrome browser session if you haven’t done so already. You are
probably looking at your home page or a default page of Chrome. There
are two ways to get to the developer tools. You can select the Chrome
menu (the symbol that has three horizontal lines at the top-right of the
browser), then select &lt;strong&gt;Tools&lt;/strong&gt; &amp;gt; &lt;strong&gt;Developer Tools&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/chrome-dev-tools.png&quot; alt=&quot;chrome-dev-tools.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anoter way to launch the dev tools is to right click on any part of the
web page. Then from the context menu choose the options &lt;strong&gt;Inspect
Elements&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/chrome-console-2.png&quot; alt=&quot;chrome-console-2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The developer tools is organized into tabs. The tab you need to get to
is the &lt;strong&gt;Console&lt;/strong&gt;. Click that tab to access the interactive JavaScript
environment.&lt;/p&gt;

&lt;p&gt;The Console is a REPL environment. REPL means Read, Eval, Print, Loop.
You can type valid JavaScript expressions, statements and even function
definitions in the Console and it will &lt;strong&gt;Read&lt;/strong&gt; what you typed, then
&lt;strong&gt;Evaluate&lt;/strong&gt; it. After that it will &lt;em&gt;Print&lt;/em&gt; the result of the evaluation
and then it will wait for you to type something up again. Lather, rinse,
repeat.&lt;/p&gt;

&lt;p&gt;The Console is a good place to start when you are beginning to learn
JavaScript. It is a valuable tool not only for learning for debugging.
Some seasoned programmers continue to use the console for quick
investigations and debugging sessions. These are good reasons why you
might want to invest some time learning this tool.&lt;/p&gt;

&lt;p&gt;Click anywhere inside the Console area. When you see a blinking vertical
cursor right next to chevron symbol (a greater than sign), the Console
is ready to take input. Type some simple arithmetic expressions to try
it out, then press &lt;strong&gt;enter&lt;/strong&gt;. Each time you press the enter key, it
tells the Console that you want to evaluate something. Try out some of
these expressions.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello JavaScript&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;What is your name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;What is your name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Did you notice that each line was punctuated with a semi-colon? That’s
part of the language. JavaScript statements should finish with a
semi-colon just like English sentences are punctuated with a period.&lt;/p&gt;

&lt;p&gt;Be careful when typing the commands above. Take care that you type them
as you see them above. JavaScript is case sensitive. Alert is not the
same things as alert. If you mistype the commands, you will see some
errors.&lt;/p&gt;

&lt;h2 id=&quot;scripting-example&quot;&gt;4 Scripting example&lt;/h2&gt;

&lt;p&gt;A full hello world example. The goal is not to print Hello World, but to
have a feel of the environment and get into some workflow&lt;/p&gt;

&lt;h2 id=&quot;more-on-tooling&quot;&gt;5 More on tooling&lt;/h2&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes:&lt;/h2&gt;

&lt;p&gt;^&lt;a href=&quot;#fnr.1&quot;&gt;1&lt;/a&gt;^&lt;/p&gt;

&lt;p&gt;The ECMA 2262 specification can be found at
&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-262.htm&quot;&gt;http://www.ecma-international.org/publications/standards/Ecma-262.htm&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>JavaScript Conditions</title>
   <link href="http://thelogbox.com/javascript/javascript-conditions"/>
   <updated>2014-09-28T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript/javascript-conditions</id>
   <content type="html">&lt;p&gt;As you progress in your practice of writing JavaScript codes, you will
begin to write codes that increases in complexity. After writing basic
Math expressions, alerting some string and other various one-liner
codes, you will need to exert control over program flow.&lt;/p&gt;

&lt;p&gt;When JavaScript encounters your first line of code, it will execute that
immediately, then it will look for the next line of code and the next
one after that and the next one after that. Until it runs of out of code
to execute. This is a very sequential way of executing statements. And
this is the default.&lt;/p&gt;

&lt;p&gt;As you begin writing codes with increasing complexity and
sophistication, you will need a way to write code that only runs only
when certain conditions are true and skip some codes when conditions are
not right. This program flow is known as branching. We will look at two
constructions in this section that will help us deal with branching.&lt;/p&gt;

&lt;h2 id=&quot;symbols-and-syntax&quot;&gt;1 Symbols and Syntax&lt;/h2&gt;

&lt;p&gt;Before we begin any further, we need to cover some basic symbology when
writing codes. Especially when writing codes in a language that is a C
derivative. JavaScript is such as language. Quite often, you will see
symbols such as the parens &lt;strong&gt;()&lt;/strong&gt;, brackets &lt;strong&gt;[]&lt;/strong&gt; and braces &lt;strong&gt;{}&lt;/strong&gt;.
They do quite different things hence they are not intechangeable. You
cannot substitute one symbol for another. But they have similarities.
All of them are used to group or enclose either statements or
expressions. And all of them come in pairs. When you write an opening
paren, brace or bracket, you will sure have to close it up somewhere in
your code. Maybe not immediately but you need to make sure they all pair
up. Unpaired symbols is one of the most common sources of errors and
developer grief. It is not a simple activity to hunt down a missing
curly brace.&lt;/p&gt;

&lt;h3 id=&quot;parens&quot;&gt;1.1 Parens&lt;/h3&gt;

&lt;p&gt;Parens or parentheses are commonly found on branching and looping
expressions. You will also use them when defining or calling functions.
The sample code below shows situations where you might use or see the
parens&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// CONDITIONS&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;a is greater than b&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;// LOOPS&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// FUNCTIONS&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I am fooing&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;gold&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;consoloe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are times when some expressions are written inside the parens and
other times there aren’t any. It depends on what you are trying to do.
We will get to those details when we discusss JavaScript functions.&lt;/p&gt;

&lt;h3 id=&quot;braces&quot;&gt;1.2 Braces&lt;/h3&gt;

&lt;p&gt;Programmers often refer to this symbol as curly braces, but calling them
braces is acceptable too. Programmers would know what you mean. You will
use brackets to group together a bunch of statements. This is done so
you can refer to the statements as one unit. The grouped statements is
called a &lt;strong&gt;block&lt;/strong&gt;. A block is executed as if it is a single statement.&lt;/p&gt;

&lt;p&gt;There is another reason why a block is beneficial. It defines a boundary
or a limit to the scope of your variables. Although we will not go to
the details of lexical scope just yet, it is helpful to know that blocks
are basically namespaces. It allows you to define data within a space,
limit the accessibility of this data and protect the data from potential
conflict which may exist outside the block. The block acts as a basic
unit of encapsulation. This is foundational knowledge in structured
programming.&lt;/p&gt;

&lt;p&gt;A block defines a single point of entry and exit. The program flow
enters the block thrugh the opening curly brace and it exits on the
closing curly brace. It is important to realize and internalize this
concept because it goes a long way in code analysis.&lt;/p&gt;

&lt;h4 id=&quot;one-point-of-entry-one-point-of-exit&quot;&gt;1.2.1 One point of entry, One point of exit&lt;/h4&gt;

&lt;p&gt;Program flow can only enter the block one way. That is through the
beginning curly brace. There are no conditions or instructions
whatsoever in which you can selectively jump to an instruction in the
middle of the block. When you enter it, you start at the very first
instruction within it, then to the next line of code, then to the next.
You will execute it in sequence and in the order which they were
defined. Guaranteed.&lt;/p&gt;

&lt;p&gt;There is only one exit point in the block and that is through the
closing curly brace. Only the last instruction within the block can
cause the program flow to exit. I need to tell you though that this
exiting behavior is not always strictly followed. There are some
programming elements that can bend this behavior. The &lt;strong&gt;return&lt;/strong&gt; and
&lt;strong&gt;throw&lt;/strong&gt; keywords will introduce some subtleties to the exiting
behavior of blocks. We will not go to those details in this section
though.&lt;/p&gt;

&lt;p&gt;A very common use of blocks for grouping statements is shown below:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;actual_hrs_worked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;overtime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual_hrs_worked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;overtime_pay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;overtime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hourly_rate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_pay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hourly_rate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gross_pay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_pay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;overtime_pay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Even if the example code is contrived, it is easy to see and discover
the intent of the programmer. When the number of actual hours worked is
more than 80 hours, a series of instruction will be carried out. From
start to finish.&lt;/p&gt;

&lt;h4 id=&quot;block-syntax&quot;&gt;1.2.2 Block syntax&lt;/h4&gt;

&lt;p&gt;The block syntax of JavaScript is achieved using a pair of curly braces.
Not all programming languages are like this. Other languages mark their
blocks using specific keywords such as &lt;strong&gt;begin&lt;/strong&gt; and &lt;strong&gt;end&lt;/strong&gt;, or some
variations of it. Ruby and Algol are some examples of such languages.
Other languages use indentations to define a block. Python is famous for
this. Most languages derived or inspired by the C language use the curly
brace to define blocks. JavaScript is such a language.&lt;/p&gt;

&lt;p&gt;The placement of curly braces has become a contentious subject over the
years. It continues to do so these days. We will not discuss the merits
or pros and cons of these arguments.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// C Style braces&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Known also as Kernighan and Ritchie or K &amp;amp; R&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// statements&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// C++ style&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// statements&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;K &amp;amp; R places the opening brace on the same line as the header and the
closing brace is flushed to left. When using the C++ style, the opening
and closing brace aligns with each other.&lt;/p&gt;

&lt;p&gt;JavaScript doesn’t care whichever of these styles you used. But other
people you will be working with might. These coding styles are usually
dictated as part of a convention for a team of programmers. A tech lead,
project lead or whoever is in charge with the project places certain
impositions on how code will be written. The placement of the curly
brace is a matter of style and convention. It is not a technical
imposition.&lt;/p&gt;

&lt;p&gt;While you are still a beginner, no one is probably in charge of your
coding style but yourself. Just pick any one style and stick with it. Be
consistent. If you choose K &amp;amp; R, use it all through out. It improves
readability of the codes.&lt;/p&gt;

&lt;h3 id=&quot;brackets&quot;&gt;1.3 Brackets&lt;/h3&gt;

&lt;p&gt;Brackets are often found in Array definitions. Other languages such as
Objective C use them for other purposes such as message sending. But in
JavaScript, we will almost exclusively use the bracket when working with
arrays.&lt;/p&gt;

&lt;p&gt;We will discuss arrays in future sections, so we will not go to the
details and mechanics of array creation and management here. But let us
look at some short code samples that shows how brackets might look like
in our program&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;gold&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first line of code used the brackets to define an array of colors.
You might have noticed that the brackets on that line were at right hand
side (RHS) of the equal sign. When we want to assign a certain value to
a variable, that value will be on the RHS.&lt;/p&gt;

&lt;p&gt;Notice the third line of code which changed the value of the third
element of the colors array. The brackets appeared on the left hand side
(LHS) of the equal sign. That is because we wanted to assign a certain
value to the third element of the array. When we are storing something
to an array or to whatever variable, we place them on LHS. When we want
to get something from the array or whatever variable, we place them on
the RHS.&lt;/p&gt;

&lt;p&gt;We can now go back to discussing JavaScript conditions.&lt;/p&gt;

&lt;h2 id=&quot;condition&quot;&gt;2 Condition&lt;/h2&gt;

&lt;p&gt;Beyond the most basic of codes, you will need a way to route program
logic or program flow. There will be times when we need to execute a
block when some some criteria is met and on other times we simpy ignore
the block. Like in other languages, JavaScript uses the &lt;strong&gt;if statement&lt;/strong&gt;
to route program logic.&lt;/p&gt;

&lt;p&gt;The basic form of the if statement is as follows:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// statement to execute&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The statement requires an expression that resolves to either true or
false. We need to write this boolean expression inside the parens.
JavaScript will only look inside the parens for a conditional
expression. It won’t look elsewhere. This is the reason why you need to
develop a keen eye for paired symbols. Some conditional expressions
could be short, and in those cases it is not visually challenging to
keep the symbol pairs straight. But there could be times when the
expression is a mouthful.&lt;/p&gt;

&lt;p&gt;When the expression resolves to true, whatever statements contained in
block will be executed. If it isn’t true, we simply scoot over to end of
the block and continue our program.&lt;/p&gt;

&lt;h3 id=&quot;we-only-care-if-it-is-truthy-or-falsy&quot;&gt;2.1 We only care if it is truthy or falsy&lt;/h3&gt;

&lt;p&gt;When write conditions for the if statement, we only care about truthness
or falseness of the expression. Nothing more. Were not checking for any
values whatsoever.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the above code samples, we only want to know if the value currently held by the variable x is more than 50. We are not concerned about the actual value of x, it may be a really large number, it could be 51 or it could even be 50. Is x greater than 50 or is it not. Is y less than 100
or is it not. Those are the only things we care about.&lt;/p&gt;

&lt;h3 id=&quot;else-and-else-if&quot;&gt;2.2 else and else if&lt;/h3&gt;

&lt;p&gt;Now that we know how to execute a block when a condition is true. What happens when it isn’t true? Well, we know that program control will skip the block and continue on.&lt;/p&gt;

&lt;p&gt;If you want something else to happen when the condition evaluates to
true, you can specify that also by using the optional &lt;strong&gt;else&lt;/strong&gt; clause.&lt;/p&gt;

&lt;h4 id=&quot;todo-samples-and-usage-of-else&quot;&gt;2.2.1 TODO Samples and usage of else&lt;/h4&gt;

&lt;h3 id=&quot;comparisson-operators&quot;&gt;2.3 Comparisson operators&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;TODO Samples and usage of operators\
    &lt;ul&gt;
      &lt;li&gt;double equal: ==&lt;/li&gt;
      &lt;li&gt;tripe equal: &lt;code&gt;=&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;not equal : !=&lt;/li&gt;
      &lt;li&gt;not double equal : !==&lt;/li&gt;
      &lt;li&gt;greater than : &amp;gt;&lt;/li&gt;
      &lt;li&gt;greater than or equal to: &amp;gt;=&lt;/li&gt;
      &lt;li&gt;less than : &amp;lt;&lt;/li&gt;
      &lt;li&gt;less than or equal to : &amp;lt;=&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;complex-decisions&quot;&gt;2.4 Complex decisions&lt;/h3&gt;

&lt;h2 id=&quot;switch-statement&quot;&gt;3 Switch statement&lt;/h2&gt;

&lt;h2 id=&quot;nesting&quot;&gt;4 Nesting&lt;/h2&gt;

&lt;p&gt;don’t nest too deep&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Guessing Game coding practice</title>
   <link href="http://thelogbox.com/javascript-guessing-game"/>
   <updated>2014-04-10T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-guessing-game</id>
   <content type="html">&lt;h2 id=&quot;use-case&quot;&gt;Use case&lt;/h2&gt;

&lt;p&gt;When the page loads up, a picture will be shown. The user will guess who or what the picture is by typing his answer on the provided text field and clicking the submit button. &lt;/p&gt;

&lt;p&gt;If the user guesses correctly, proceed to the next picture and let the user guess again. If the guess is incorrect, display a “Try again message”, clear the text field and await for the response.&lt;/p&gt;

&lt;h2 id=&quot;solution-approach&quot;&gt;Solution approach&lt;/h2&gt;

&lt;p&gt;Will make the html portion quite spartan. We won’t use any fancy divs or nested tables so that we won’t get distracted by styling clutter.  We will handle the image using the &lt;em&gt;img&lt;/em&gt; tag. We will use the old school &lt;em&gt;input&lt;/em&gt; element for the text field and we will use the &lt;em&gt;button&lt;/em&gt; element for, well, the button.  &lt;/p&gt;

&lt;p&gt;The JavaScript part of our solution will be in an external file named &lt;em&gt;script.js&lt;/em&gt;, so our JS and HTML codes don’t mingle up. We will use JQuery for DOM manipulation, surely by now you must be tired of typing &lt;em&gt;document.getElementById&lt;/em&gt;. We can do this by embedding two &lt;em&gt;script&lt;/em&gt; elements in the &lt;em&gt;head&lt;/em&gt; region of the html code.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;jquery-1.11.0.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;script.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The script tag above assumes that you have downloaded the JQuery library into your work area. It also assumes that the JQuery file and &lt;em&gt;script.js&lt;/em&gt; is located on the same directory where the html file is.&lt;/p&gt;

&lt;p&gt;The full code listing for the html part is below.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!--  index.html --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;jquery-1.11.0.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;script.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  
    &lt;span class=&quot;nf&quot;&gt;#status&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#CACACA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Helvetica&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;The Status&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;answer&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clickme&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-javascript-part&quot;&gt;The JavaScript part&lt;/h3&gt;

&lt;p&gt;Create a file named &lt;em&gt;script.js&lt;/em&gt; on the same folder where you created &lt;em&gt;index.html&lt;/em&gt;. It is not necessary, neither it is always desirable to put the JS files on same folder as other files such as html or images, but we chose to do it that way to keep the codes and directory structure simple.&lt;/p&gt;

&lt;p&gt;First thing we need to write is the block of code where we will put all of our subsequent JavaScript codes. Many other programs require such an entry point. If you have experience coding in other languages, you might remember that there is a function &lt;strong&gt;main&lt;/strong&gt; which serves as the program entry point. In JavaScript however, you cannot simply write a function called &lt;strong&gt;main&lt;/strong&gt; and proceed from there. Well, actually you can write a function and name it &lt;em&gt;main&lt;/em&gt;, but that won’t do anything. It will simply be a regular function. It won’t have magical powers that makes it a program entry point. &lt;/p&gt;

&lt;p&gt;JavaScript is event aware. You can listen for events and then write code when that event is raised. There are two sources of events in our use case. The user will raise an event when he types his answer on the text field and when he clicks the button to submit his answer. The browser also raises events. When a page is pulled from a web server, it goes through some stages&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It scans all the html tags and renders them&lt;/li&gt;
  &lt;li&gt;If you have some directives to pull files, e.g. a CDN hosted JQuery library, it will pull that from the server. When it is done processing the directives on the &lt;em&gt;head&lt;/em&gt; region, it goes to the &lt;em&gt;body&lt;/em&gt; region. At this point, it raises an event that the &lt;em&gt;body&lt;/em&gt; part of the html document is being loaded. &lt;/li&gt;
  &lt;li&gt;When it encounters a &lt;em&gt;script&lt;/em&gt; tag, it momentarily stops rendering any html element. It needs to stop because JavaScript is capable of writing and changing the DOM (Document Object Model), the browser will wait for all the script tag to be processed before it can continue rendering html elements. When all the DOM elements have been processed, the browser raises an event saying that the “document is ready”. &lt;/li&gt;
  &lt;li&gt;If you have image tags, the browser will make another request to the server to download the image files&lt;/li&gt;
  &lt;li&gt;Once all the resources have been completely downloaded and rendered, the browser raises an event that says it the “window is ready”. Ideally, this is the point where it is safe to do anything with JavaScript because all the DOM resources that your code anticipates, are already available. In some occasions, you might want to start doing things before the document is ready, say during &lt;em&gt;body onLoad&lt;/em&gt; but for this example, we will wait for the document to finish loading. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In order to write our program entry point, we will choose an event that the browser will raise, and use it as the entry point. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// this is our entry point&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above snippet is a JQuery code. It binds our code into &lt;em&gt;document.onload&lt;/em&gt; event of the browser. When the browser has finished processing all the DOM elements in the html, it will raise the document.onload event. We are simply latching on to that event. Think of this code block as some sort of initialization routine. If you need to define arrays, variables or bind buttons to events, this is the place to do it.&lt;/p&gt;

&lt;h3 id=&quot;make-sure-the-simplest-scenario-is-working&quot;&gt;Make sure the simplest scenario is working&lt;/h3&gt;

&lt;p&gt;The best advice I have ever given to beginning programmers is to &lt;em&gt;make sure the simplest scenario is working&lt;/em&gt;— next only to “don’t forget the semi colon”. A complex system does not start out to be complex, they start out as simple systems. They get complex in time. Make sure that the building blocks of your code are sound and that they are working.  &lt;/p&gt;

&lt;p&gt;We need to make sure that our program entry point actually does something. A small noticeable change in the UI will do. Let’s change the text of the heading element. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;hello there&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Open &lt;em&gt;index.html&lt;/em&gt; using the browser. You should see the “Hello there” message when it loads. It will confirm that our code is actually running when the page loads. If you don’t see the message, you need to check your code for spelling and other typing errors. If you know how to use the debugging tools in the browser such as &lt;em&gt;FireBug&lt;/em&gt; in FireFox and the developer tools of &lt;em&gt;Chrome/Safari&lt;/em&gt;, they will help you find the errors faster.&lt;/p&gt;

&lt;p&gt;Next step is to display just a single image when the page loads. That can be managed using the following code&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;hello there&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bugsbunny.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code above assumes the file &lt;em&gt;bugsbunny.jpg&lt;/em&gt; is on the same folder where &lt;em&gt;index.html&lt;/em&gt; and &lt;em&gt;script.js&lt;/em&gt; are. Right after we get the IMG element using the #a selector, we changed the &lt;em&gt;SRC&lt;/em&gt; attribute programmatically using the JQuery &lt;em&gt;attr&lt;/em&gt; function. That code should display the contents of the image. &lt;/p&gt;

&lt;p&gt;Next thing to manage is accept user input via the text element and do something with when he clicks the button. For that, we need to bind the click event of the button to our code. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;hello there&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bugsbunny.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#clickme&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;    
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useranswer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#answer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useranswer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;  
  
  
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To bind the button to our code, we selected it via JQuery and invoked the the &lt;em&gt;click&lt;/em&gt; function. The JQuery click function takes a single argument. You can put a named function inside it or an anonymous function. Either way, JQuery will call whatever you put inside the &lt;em&gt;click&lt;/em&gt; function when the user clicks the button.&lt;/p&gt;

&lt;p&gt;Our click handler is quite simple. It extracts the value of the text field and changes the message of the heading element to whatever the user has typed in the text field.&lt;/p&gt;

&lt;p&gt;We will add some more codes so we can check the user’s input against the correct answer.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;hello there&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bugsbunny.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#clickme&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;    
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useranswer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#answer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useranswer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useranswer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Bugs Bunny&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;correct&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;try again&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;    
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;An &lt;em&gt;if-else&lt;/em&gt; statement provides a simple validation for our code. Note that the &lt;em&gt;if&lt;/em&gt; branch is inside the click handler block. We will perform this check only when the button is clicked. If you place it outside the click handler block, it will be evaluated during &lt;em&gt;page load&lt;/em&gt;—which does not make sense. &lt;/p&gt;

&lt;p&gt;The answer key in our example code is hard coded, in a real life application this should be pulled from a data structure like a database or a file.&lt;/p&gt;

&lt;p&gt;At this point, we know we can display a picture, wait for a user’s input and validate whether it is correct or otherwise. We can now use this as a building block for the more complex portion of the solution.&lt;/p&gt;

&lt;h3 id=&quot;complexity&quot;&gt;Complexity&lt;/h3&gt;

&lt;p&gt;The complexity of the use case, clearly, does not lie in mechanics of input, validation and graphics display. Those are easy enough tasks to manage. The slight difficulty in the use case is in the workflow. We need a simplistic game engine to satisfy the use case requirement.  &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Display the graphics&lt;/li&gt;
  &lt;li&gt;Accept input from the user&lt;/li&gt;
  &lt;li&gt;If the user got it right, clear the text field, update the heading status, then move on to the next round&lt;/li&gt;
  &lt;li&gt;If the user got it wrong, clear the text field, update the heading status and keep him in the current round until he gets it&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is the basic workflow that we need. &lt;/p&gt;

&lt;p&gt;&amp;lt;img class=default src=”/img/javascript/guessing-game.png”/&amp;gt;&lt;/p&gt;

&lt;p&gt;If you look at it closely, you might see that it resembles the basic engine for a flash card application. A flash card is a set of cards that one uses as a study aide. On one face of the card are either words, numbers, pictures or any combination of the three. The front side of the card usually is a question. And on the other side of the card is the answer.  The idea is to go through a set of cards, show the front side to the user and let him guess.&lt;/p&gt;

&lt;p&gt;In the previous section, we explored how to display just one card and let the user guess. That much we can do. The challenge is how to make more cards and let the user go through all of them.  Using the flash card analogy, let’s rewrite our game engine workflow.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Take out one card from the deck&lt;/li&gt;
  &lt;li&gt;Display the front side of the card&lt;/li&gt;
  &lt;li&gt;Let the user guess&lt;/li&gt;
  &lt;li&gt;If the user guesses right, clear the text field, update the heading status and proceed to the next card—which means go back to step no. 1&lt;/li&gt;
  &lt;li&gt;If the user guesses wrong, clear the text field, update the heading status and let the user guess again&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now that we have clarified our solution approach, the next task is to figure out how to translate them into codes.&lt;/p&gt;

&lt;p&gt;There are two data structures that we need to figure out. The card and the deck. The card data structure cannot be held by simple scalar variables. It needs a more capable and complex data structure. We want it to hold the picture and the answer key. The deck is really just a collection of cards, &lt;/p&gt;

&lt;p&gt;There are lots of options for us. At first glance it looks like a relational database is good tool to represent our data structure. A record in the database will represent a card and a deck of cards is a table. We can also use an XML file. Or we can use JavaScript objects. For the purpose of our practice, we will use JavaScript objects to represent the card and we will store all these cards inside an Array. The Array data structure is our deck.&lt;/p&gt;

&lt;p&gt;The card data structure can be represented in code like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;card1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;card&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;picture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bugsbunny.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;answertext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Bart&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above code shows how to declare an object in JavaScript Object Notation (JSON). See the text on &lt;a href=&quot;/javascript-complex-types&quot;&gt;JavaScript Complex Types&lt;/a&gt; if you need a background or review on JS data structures. This data structure satisfies our purpose.&lt;/p&gt;

&lt;p&gt;We need to somehow define each card and populate the deck with it. We will use the built-in JS Array to represent the deck. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    
    
    &lt;span class=&quot;c1&quot;&gt;// OTHER STATEMENTS &lt;/span&gt;
    

    &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;card1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;card:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;picture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;bugsbunny.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;answertext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Bugs Bunny&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;card2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;card:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;picture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;bart.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;answertext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Bart&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;deck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;deck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next task is how to pop a card from the deck and display the picture. What we want is to take the top card from the Array, make it available for data retrieval and display the picture.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currcard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;


  &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Draw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;currcard&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;deck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#a&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currcard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;picture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The variable &lt;em&gt;currcard&lt;/em&gt; is initially defined as null. It was defined outside the &lt;em&gt;Draw&lt;/em&gt; function so that it other functions will have access to it. We will need the data stored on the current card when we check the user’s answer against the answer key (which is stored on the current card).&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;shift&lt;/em&gt; method of the JS Array provides the mechanism to take the top card from the deck. When you call &lt;em&gt;shift&lt;/em&gt;, it removes whatever is on the top element of the array and returns its value—it allows us to store the return value to a variable, that was why it was assigned to &lt;em&gt;currcard&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;full-code&quot;&gt;Full code&lt;/h3&gt;

&lt;p&gt;We now have the essential technical details and workflow to put it all together. The program entry point is when the DOM has finished loading. There are two data structures that we will use, the &lt;em&gt;card&lt;/em&gt; data structure which is an object literal (JSON format) and the &lt;em&gt;dec&lt;/em&gt; which will hold the collection of cards, the deck will just be a standard JS Array. &lt;/p&gt;

&lt;p&gt;First thing to do is to initialize our cards and deck. We will give them some values. These codes are encapsulated in the function named &lt;em&gt;Init&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;When the cards and the deck has been initialized, we call the &lt;em&gt;Draw&lt;/em&gt; function. It pops the top card and displays the picture associated with that card. It also stores the value of the top card to the variable &lt;em&gt;currcard&lt;/em&gt; because we will need the value of current top card when we compare the user’s answer to our answer key.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// script.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currcard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// EVENT HANDLER&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#clickme&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useranswer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#answer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useranswer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currcard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;answertext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useranswer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;correct&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;ClearText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;Draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// GET the next card&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;try again&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;ClearText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;    
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ClearText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#answer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;card1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;card&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;picture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bugsbunny.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;answertext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Bugs Bunny&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;card2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;card&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;picture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bart.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;answertext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Bart&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;deck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;card1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;deck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;card2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;currcard&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;deck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currcard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;picture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When the user types his answer and clicks the button, we simply compare the value of &lt;em&gt;currcard.answertext&lt;/em&gt; which is our answer key to whatever the user has typed on the text field.  &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Python Virtual Environment</title>
   <link href="http://thelogbox.com/mac-python-virtual-environment"/>
   <updated>2013-11-10T00:00:00+08:00</updated>
   <id>http://thelogbox.com/mac-python-virtual-environment</id>
   <content type="html">&lt;pre&gt;&lt;code&gt;$ brew install python
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yes, I know OSX comes with Python pre-installed, but this formula for python comes with pip and setuptools. &lt;/p&gt;

&lt;p&gt;Just to make sure pip and setuptools are up to date, do this also&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pip install --upgrade setuptools
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;virtual-environment-setup&quot;&gt;Virtual Environment Setup&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pip install virtualenv
$ sudo pip install virtualenvwrapper
$ mkdir ~/pythonenvs
$ echo &quot;WORKON_HOME=~/pythonenvs&quot; &amp;gt;&amp;gt; ~/.bash_profile
$ source /usr/local/virtualenvwrapper.sh   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Quit and re-open the terminal for the changes to take effect — or just launch another terminal window and work there.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ mkvirtualenv gae
$ mkvirtualenv standard
$ workon gae
$ workon standard
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;another-usage&quot;&gt;Another Usage&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;mkdir ~/workarea/notes-gae (if you are working on a Python Google App Engine project, for example)&lt;/li&gt;
  &lt;li&gt;cd to it&lt;/li&gt;
  &lt;li&gt;mkvirtualenv notes-gae&lt;/li&gt;
  &lt;li&gt;work on notes-gae, install some new eggs, site packages&lt;/li&gt;
  &lt;li&gt;write the software to install inside requirements.txt, Ian Bicking wrote something about this&lt;/li&gt;
  &lt;li&gt;then pip -r requirements.txt&lt;/li&gt;
  &lt;li&gt;you can use yolk -l to see what packages are installed in the env&lt;/li&gt;
  &lt;li&gt;then use pip freeze &amp;gt; stable-requirements.txtto freeze the software versions&lt;/li&gt;
  &lt;li&gt;Use deactivate command to get out of virtual environments&lt;/li&gt;
  &lt;li&gt;version the project, git init (gotta use git for source control)&lt;/li&gt;
  &lt;li&gt;add some files to the project, then git add .&lt;/li&gt;
  &lt;li&gt;do some commits, git commit -m “comments”&lt;/li&gt;
  &lt;li&gt;and push the commits to a remote repo, git push -u origin master&lt;/li&gt;
  &lt;li&gt;When you pick the project up another day, remember to git pull, before doing anything else&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;why-do-it&quot;&gt;Why do it&lt;/h2&gt;

&lt;p&gt;A virtual environment setup keeps python packages across projects separate. They have independence. That’s a good thing. When you are working on a new python project, you can’t avoid installing python packages for it. If the new packages does not agree with packages you have installed for other projects, you are in for a bag of hurt. If the packages were managed using virtual environments, the independence of packages start becoming valuable.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>document history</title>
   <link href="http://thelogbox.com/javascript-document-history"/>
   <updated>2013-11-06T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-document-history</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;2012-07-07. Document was started. Used as learning material for RD Batch 1.&lt;/li&gt;
  &lt;li&gt;2012-08-12. Reformatted for web. Single HTML  &lt;/li&gt;
  &lt;li&gt;2012-10-30. Sections on Inheritance, DOM and event programming was added&lt;/li&gt;
  &lt;li&gt;2013-11-03. Reformatted for minisite format. Added new diagrams&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Program Flow</title>
   <link href="http://thelogbox.com/javascript-program-flow"/>
   <updated>2013-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-program-flow</id>
   <content type="html">&lt;p&gt;A program starts with the very first statement in a script. After it has been read, the second one is read next, then the third, so on and so forth. The program will stop when there are no more statements to process. This linear way of processing statements is the norm. Unless the program flow is altered by some statements.&lt;/p&gt;

&lt;p&gt;Think of program statements like a river. It streams. It flows in a linear way unless something influences the direction of flow. &lt;/p&gt;

&lt;p&gt;There are two ways to alter the flow of control in your script. There are statements that can fork or branch the direction and there are statements that can loop.&lt;/p&gt;

&lt;h1 id=&quot;branching&quot;&gt;Branching&lt;/h1&gt;

&lt;p&gt;Branching statements allows you to side step some statements when some conditions are true; &lt;em&gt;if-else&lt;/em&gt; statement is one way to branch. When the expression inside the &lt;em&gt;if()&lt;/em&gt; construct yields true, the statement inside the if block is executed. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;nah!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;// RETURNS nah!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Be careful when writing your comparisson operator. Here’s a slightly modified version of the code above&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;nah!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;// RETURNS true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Can you spot the difference? The expression inside the if() construct is improperly written as an assignment rather than a test for equality–but JavaScript went to evaluate it anyway. Be careful with this one because this mistake is so easy to make. The reason this returned &lt;strong&gt;true&lt;/strong&gt; is because an arithmetic assignment operation returns the zero value, and if you use a number where a boolean expression is expected, the number is convered to the &lt;em&gt;true&lt;/em&gt; value. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Switch statement&lt;/em&gt; is another way of branching. It is a bit more concise than the if-else statement, it allows for a different kind of construction. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;he&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;he&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nothing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;RETURNS &amp;quot;Hello&amp;quot;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The values listed in &lt;em&gt;case&lt;/em&gt; statements can be Strings, booleans or numbers (a bit of a relief if you are coming the Java language where the case is restricted to integer values). Always add the &lt;em&gt;break&lt;/em&gt; keyword inside the case statement lest you will have unintended consequences–without the break keyword, the program will overflow to the remaining statements of the &lt;em&gt;switch construct&lt;/em&gt; even if a match has already been found. &lt;/p&gt;

&lt;h1 id=&quot;iteration&quot;&gt;Iteration&lt;/h1&gt;

&lt;p&gt;Looping or iteration statements allows you to perform some statements repeatedly while some conditions are true.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;while&lt;/em&gt; statement is a looping mechanism. It requires a boolean value (or an expression that yields a boolean value) inside the &lt;strong&gt;while()&lt;/strong&gt; construct. The statements inside the while block will be executed repeatedly as long as the expression inside while() is true. When the expression is no longer true, the loop terminates. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timetoexit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timetoexit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;counter = &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timetoexit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can use the &lt;strong&gt;break&lt;/strong&gt; keyword to break out of loops, like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timetoexit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timetoexit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;counter = &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The break keyword causes the program flow to ignore all the statements (if there are any) immediately following the &lt;em&gt;break&lt;/em&gt; keyword and fall right outside the end of the while block where the program flow will resume.  &lt;/p&gt;

&lt;p&gt;Another keyword related to loop structures is the &lt;strong&gt;continue&lt;/strong&gt; keyword. It causes program flow to jump also&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timetoexit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timetoexit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;counter = &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;timetoexit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;	
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Unlike &lt;em&gt;break&lt;/em&gt; though, &lt;strong&gt;continue&lt;/strong&gt; causes program flow to ignore all the remaining statements until the end of the while block and jump right away to the beginning of the while loop—forcing the condition to get re-evaluated; this is the reason why our last asterisk never got printed. &lt;/p&gt;

&lt;p&gt;The &lt;em&gt;for&lt;/em&gt; statement is another looping mechanism. The for loop like the while loop allows you to iterate and perform a group of statements over and over again. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;Canonical Form&lt;/div&gt;

&lt;p&gt;A key concept in using the for loop is the counter (the step). Loop will perform all the statements inside the block for a finite and determined number of times. Each time that the whole block is evaluated, the step value is incremented. The incremented step value is then compared to the ending value, and when the ending value is reached, the for loop will then terminate. The program control will fall over to first statement immediately after the for loop block.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code sample above defines the starting point at 1 (i = 1), it will stop the loop execution when &lt;em&gt;i &amp;lt; 10&lt;/em&gt;.  Each time the &lt;em&gt;for&lt;/em&gt; loop is evaluated, the i variable will be incremented by 1 (i++).&lt;/p&gt;

&lt;p&gt;Here is a another sample of the for loop.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;util&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;RESULT&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;1   2   3   4   5   6   7   8   9   &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2   4   6   8   10  12  14  16  18  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;3   6   9   12  15  18  21  24  27  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;4   8   12  16  20  24  28  32  36  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;5   10  15  20  25  30  35  40  45  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;6   12  18  24  30  36  42  48  54  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;7   14  21  28  35  42  49  56  63  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;8   16  24  32  40  48  56  64  72  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;9   18  27  36  45  54  63  72  81&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This code requires the node.js library &lt;em&gt;util&lt;/em&gt;. We can’t use the STDIO (console.log) here because it automatically adds a CRLF (carriage return-line feed) while &lt;em&gt;util.print()&lt;/em&gt; library does not. Node.JS has many libraries for convenient use, you just need to do the &lt;em&gt;require(libname)&lt;/em&gt; statement if you want to use it. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Objects and Functions</title>
   <link href="http://thelogbox.com/javascript-objects-functions"/>
   <updated>2013-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-objects-functions</id>
   <content type="html">&lt;p&gt;Objects are easy to create, construct and modify in JS. Adding a property to an object takes nothing more than declarating the name of the property (attached to the object using the dot notation), then simply assigning a value to to it. Just don’t forget that objects in JS are like hash tables, each member of the object is a pair of data, the first one is the key and the second one is the value. &lt;/p&gt;

&lt;p&gt;You can put any type of member inside an object. A member could be any data type in JS, simple data or complex data—which means you can put another object inside another object. This is the part we need to make a leap on our JS knowledge. &lt;strong&gt;Functions&lt;/strong&gt; in JS are objects as well, that’s right. Which means, we can put functions inside objects, and when functions are inside objects, they become methods of the objects. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// file: obj3.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;employee&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Ted&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
	&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; is working&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The preceding code sample is straightforward, it is a simple creation of an object using object literals. The second property though, used an anonymous function which was assigned to the property named “work”. When we invoked the &lt;em&gt;work()&lt;/em&gt; property as function—as we should, because it is a function, it then executed whatever was defined inside the function block.  &lt;/p&gt;

&lt;p&gt;If we need another object, we need to repeat whatever we did on the first employee object, like so;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;employee&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Ted&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
	&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; is working&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rommel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rommel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Rommel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rommel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; is working&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;rommel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While this is perfectly legal to do, the idiom used in creating the &lt;em&gt;rommel&lt;/em&gt; object is bit bitter to the taste, surely, there has to be a way to achieve some sort &lt;em&gt;Object factory&lt;/em&gt; idiom in JS. The code is too malleable (it could be a good thing though). It seems that following this idiom, one can pretty much add properties as you go along. I am sure there is a class of problems where this kind of flexibility and malleability is desired, probably necessary even. Coming from a language that supported classical OOP (like Java), it can send some chill on the spine knowing that I could easily change properties of my object anywhere in the code. Fortunately, JS is very orthogonal language—there are lots of ways of achieving same results, so let’s look for something more palatable for classical OO programmers.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Employee object: Template&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	

	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; is working&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Company object: Template&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employees&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;recruit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listEmployees&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;arrlength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Ted H&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;swd&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Kit A&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;swd&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pepper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Pepper F&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;


&lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;recruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;recruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;recruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pepper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listEmployees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The preceding code feels a bit firmer than the one before it. This code used the function as some sort of constructor (actually, it is called exactly that, a function constructor). JavaScript does not have class mechanisms like Java or C++. Code reuse is not achieved by class extensions, but rather by Object extensions. By the way, this last code we just did sure looks a lot like the class mechanism, if you could just get over the fact that it said &lt;strong&gt;function&lt;/strong&gt; rather than &lt;em&gt;class&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;There a couple of things we need to talk about in this code, specifically they keyword &lt;strong&gt;this&lt;/strong&gt;, but before we go there, let’s look at another code, it is exactly the &lt;em&gt;Employee&lt;/em&gt; and &lt;em&gt;Company&lt;/em&gt; constructor code also, but with a bit of modification. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Company.js&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Employee object: Template&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; is working&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// Company object: Template&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employees&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;recruit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listEmployees&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;arrlength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Ted H&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;swd&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Kit A&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;swd&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pepper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Pepper F&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;


&lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;recruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;recruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;recruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pepper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listEmployees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Objects</title>
   <link href="http://thelogbox.com/javascript-objects"/>
   <updated>2013-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-objects</id>
   <content type="html">&lt;p&gt;A few things we need to remember (or know for the first time) about objects. &lt;em&gt;Objects in JS are reference types&lt;/em&gt;, they are not value types, you can declare as many reference variables pointing to the exact same object&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//filename: multiref.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;firstobject&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// both obj1 and obj2 reference var is pointing to the same object&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//exact same property as obj1&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;obj2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;anothername&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;still first object&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;anothername&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//obj1 should have &amp;quot;anothername&amp;quot; as well, because &lt;/span&gt;
							   &lt;span class=&quot;c1&quot;&gt;//object 2 is pointing to the same object &lt;/span&gt;
							   &lt;span class=&quot;c1&quot;&gt;//being referenced by obj1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;2. Some object’s structure can be modified (mutable)&lt;/em&gt;.  An array is actually an object, it is a good example of an object that is mutable. Mutability means that as you modify the content or structure of the object, it does not spawn or create newer objects. It modifies the original object that was created. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;3. And then, some objects cannot be modified (immutable)&lt;/em&gt;.  The String objects that you create are such examples of immutable objects in JS. To add this list, Numbers and Booleans (when wrapped) are also immutable. What this means is that if you apply transformations to immutable objects, they will not modify the original object that was created. The transformation will cause the object to create a new object. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;assert&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;A String&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;//s and stemp points to &amp;quot;A String&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;checking is s is equal to stemp&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// result is ok&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;checking is s is equal to stemp&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// result not ok&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If Strings are mutable, then the second assert would not have failed. The references “s” and “stemp” are simply no longer pointing to the same object. Any transformation that you apply on an immutable object will cause the creation of a new object, the original content plus any transformation you applied will now be contained inside the new object. By the way, &lt;strong&gt;assert&lt;/strong&gt; works pretty much like a test for truth or falsity, but it behaves violently. When the expression inside the assert (the asserted value) does not evaluate to true, your code will fail with a pretty ugly run-time error. Defensive programmers use this to test their codes mercilessly, better that the code fails during development time, rather than the code failing in front of hte users. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;4. Pass by Reference&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Property 1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// Property 1&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;paramPass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// Altered prop1&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paramPass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Altered prop1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;While inside ParamPass : Base.prop1 = &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// this outputs Altered prop1&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When you pass object references to functions as parameters, whatever changes you make to the object (that was passed) will endure even after the function goes out of execution scope.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>JavaScript Reserved Words</title>
   <link href="http://thelogbox.com/javascript-keywords"/>
   <updated>2013-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-keywords</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;break:&lt;/strong&gt; to get out of loops. Use it (sparingly) inside for or while loops. Used also inside switch statements to prevent cascading of flow. &lt;em&gt;see also&lt;/em&gt; switch, for, while, continue&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;case:&lt;/strong&gt; used from within a switch statement. It works as an expression matcher. When an it matches, program flow is routed on that specific case label &lt;em&gt;see also&lt;/em&gt; switch&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;catch:&lt;/strong&gt; part of a try-catch-finally exception handling mechanism. When an exception is thrown, the actual exception can be matched to a number of catch blocks. If the exception matches, the program flow is transferred to that catch block &lt;em&gt;see also&lt;/em&gt; try, finally&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;continue:&lt;/strong&gt; similar to the break statement. It is used inside loops. The difference is that, in the case of the label, it does immediately get out of the loop. It forces program flow to the beginning of the loop to allow evaluation of the loop condition; the break keyword does not do that, break just gets out of the loop. &lt;em&gt;see also&lt;/em&gt; break, for, while&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;debugger:&lt;/strong&gt; invokes any available debugging functionality, if any is available. There isn’t any clear examples I’ve see alson on this one though. Even Mozilla Developer Network lacks concrete examples&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; used as part of a switch statement. After a series of case labels has been evaluated, if none of them matches the expression, the statements under the default label will be executed. &lt;em&gt;see also&lt;/em&gt; switch, case&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;delete:&lt;/strong&gt; this is an operator. You will use it to delete defined properties on an object&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;do:&lt;/strong&gt; a variation of the while loop. This is slightly different from a while loop because it executes the statements inside the loop block &lt;em&gt;at least once&lt;/em&gt;. &lt;em&gt;see also&lt;/em&gt; while&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;else:&lt;/strong&gt; an optional block used hand in hand with the if block. In a situation where in the expression on the if statement evaluates to false, an else block can be provided&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;else if:&lt;/strong&gt; &lt;em&gt;see also&lt;/em&gt; if, else&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;finally:&lt;/strong&gt; part of a try-catch-finally block. Statements inside the finally block are executed regardless of whether an exception occurred or not&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;for:&lt;/strong&gt; creates a loop. It usually has 3 parameters inside it 1) beginning value 2) condition when to terminate and 3) step, whether increment or decrement. These 3 parameters are optional. They are separated by semi colon. &lt;em&gt;see also&lt;/em&gt; while, do&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;function:&lt;/strong&gt; keyword to declare a function block in JS&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;if:&lt;/strong&gt; a branching keyword. It executes a statement or a block of statement if the condition evaluates to true&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;in:&lt;/strong&gt; used as an iterator. It can step through a number of enumerated properties&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;instanceof:&lt;/strong&gt; this is an operator. Use it to test whether an object is a descendant (is kind of) another object&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;new:&lt;/strong&gt; this is an operator. The new keyword is used to create an instance of an object. It calls a constructor function&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;return:&lt;/strong&gt; It specifies the value of what is to be returned from a function. &lt;em&gt;see also&lt;/em&gt; function&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;switch:&lt;/strong&gt; A branching mechanism. Similar to IF but it uses CASE labels instead of blocks . &lt;em&gt;see also&lt;/em&gt; if, case&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;this:&lt;/strong&gt; Used in OOP constructions. Generally, the this keyword refers to instance of oneself, but it behaves differently in JS than in other languages like Java or C# . MDN has more information on this &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/this&quot;&gt;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/this&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;throw:&lt;/strong&gt; To programmatically raise an Exception. To manually trigger an abnormal runtime condition. &lt;em&gt;see also&lt;/em&gt; try, catch, finally&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;try:&lt;/strong&gt; Used for handling exceptions or abnormal runtime conditions. It alters program flow during cases of abnormal runtime conditions. Statements inside the try are the ones that can potentially trigger an exception. &lt;em&gt;see also&lt;/em&gt; catch, finally&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;typeof:&lt;/strong&gt; This is an operator. It returns a string indicating the type of the given operand&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;var:&lt;/strong&gt; keyword to declare a variable. If you don’t use var for declaration, the variable becomes part of the global scope&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;void:&lt;/strong&gt; This is an operator. If you are coming from a statically typed language, don’t mistake this for a type. JavaScript has dynamic typing, so you won’t use void in there. It evaluates an expression, then it returns undefined.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;while:&lt;/strong&gt; similar to the &lt;em&gt;do&lt;/em&gt; loop, but the while loop places the condition before body of while block will be evaluated, unlike the do loop where the condition is evaluated at the end of loop block. In the case of the while loop, it is possible not to even go through the statements of the block if the condition evaluates to false on the first pass&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;with:&lt;/strong&gt; Extends the scope chain for a statement. MDN however, does not recommend the use of the with keyword&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These &lt;a href=&quot;http://quizlet.com/_hqgq6&quot;&gt;Flash Cards&lt;/a&gt; are on Quizlet.com. You can use it as a study resource&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Inheritance</title>
   <link href="http://thelogbox.com/javascript-inheritance"/>
   <updated>2013-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-inheritance</id>
   <content type="html">&lt;p&gt;You can use JavaScript pretty much in a procedural way. What I mean by that is, without using coarse grained abstractions for interesting objects of your problem domain. But as soon as you find yourself coding way past 300 lines of code (give or take a 100 lines), you might find yourself in a (pretty) mess. The code becomes incresingly complex and increasingly difficult to change or introduce new features. Soon you need to find a way to compartmentalize the mess, you will still deal with the mess, but with OO abstractions, the messes are in bigger boxes. Inheritance is one of the bigger concepts in OO programming, here’s one way to do them in JS.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Person working&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;managing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;should not be implemented here&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Manager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;managing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;am managing&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;prototype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// Person working&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;managing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 	&lt;span class=&quot;c1&quot;&gt;// am managing&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Keys : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;isPrototypeOf manager : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isPrototypeOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;getPrototypeOf m : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPrototypeOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;m instanceof Manager  :&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;m instanceof Person   :&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;m instance of Object  :&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;m instanceof Function :&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;JavaScript is an OO language but it is not class-based. There are no templates (classes) you can use to create objects. Objects, in JavaScript are created using other objects; more specifically, they are created using the function object. There is a way to create an object in JS using a literal, but we are not interested in those, we are interested in objects created using constructor functions. &lt;/p&gt;

&lt;p&gt;When you create a constructor function (like Manager and Person, in the examples above), they will have a property called &lt;em&gt;prototype&lt;/em&gt;. A prototype is an object whose properties are shared by all the objects that have that prototype . In the example above, Manager inherits from Person via the code &lt;code class=&quot;codeblock&quot;&gt;Manager.prototype = new Person&lt;/code&gt;. Whatever Person have, Manager will also have.  &lt;/p&gt;

&lt;p&gt;To override an inherited method, simply redefine (reimplement) the method in inheriting class (the child class), that makes the method polymorphic. When you invoke a method against an object, the method will be searched (first) on the child class, if the method is not found, the search will go up the prototype chain until the method definition is found. &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>JavaScript Functions</title>
   <link href="http://thelogbox.com/javascript-functions"/>
   <updated>2013-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-functions</id>
   <content type="html">&lt;p&gt;A JavaScript function is named code-block. A code block is a group of statements tucked inside a pair of opening and ending curly brace. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;File name: hello.js&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;The hello world program in JavaScript&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you installed node.js (and I hope you did) you can run try this out on the command line using &lt;strong&gt;$ node hello.js&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;The hello.js program is actually more verbose than it has to be,  it could have been written as &lt;code class=&quot;codeblock&quot;&gt;console.log(&quot;Hello World&quot;);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I wrote it that way to demonstrate a few more JS characteristics. /*    */ are comments. Comments are non-executable codes, the interpreter will ignore them, but they are useful in putting reminders or markers in your code. It can help others read your code as well. &lt;/p&gt;

&lt;p&gt;Functions are defined in JavaScript by using the word &lt;strong&gt;function&lt;/strong&gt; then give it a name (hopefully a descriptive one), put open and close parentheses immediately after the function name, then put the pair of curly braces. &lt;/p&gt;

&lt;p&gt;The &lt;em&gt;console.log()&lt;/em&gt; command is the STDIO library of Node.JS (although some browsers include this as part of their JavaScript runtime). This command routes the output to stderr and stdout (the command line screen) &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// statements&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;Canonical Form&lt;/div&gt;

&lt;p&gt;Functions can contain a &lt;em&gt;return&lt;/em&gt; statement, take note of the following though;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Calling a function without a return statement - returns undefined&lt;/li&gt;
  &lt;li&gt;Calling a function with return statement, but does actually return anything - returns undefined&lt;/li&gt;
  &lt;li&gt;Calling a function with a return statement and a proper return value - returns the value&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Be careful how you write your curly braces, JavaScript’s defaults might produce unexpected results, see the following code.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// this line is unreachable&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;objprop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Some obj property&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The statement will be unreachable because JavaScript would have inserted a semi-colon right after the &lt;strong&gt;return&lt;/strong&gt; statement. The object literal is unreachable as a return value.&lt;/p&gt;

&lt;p&gt;Functions are different from JS statements. Statements are executed at once as soon as it is encountered by interpreter. Functions on the other hand are &lt;em&gt;compiled&lt;/em&gt; first, they are not executed when first encountered, intead, it will be parsed and stored for later use. &lt;/p&gt;

&lt;p&gt;Theres a lot more to JavaScript functions but we will stop here for now. The other characteristics of functions are better explained when we are the context of Object Oriented JavaScript and some more advanced concepts.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Typing</title>
   <link href="http://thelogbox.com/javascript-data-types"/>
   <updated>2013-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-data-types</id>
   <content type="html">&lt;p&gt;Programmers create things (data). We manipulate them by adding, substract- ing, dividing or multiplying. Sometimes we mash them up together (concatenation). Then we create more things. Sometimes, we store these things for later use, and other times we don’t, we simply discard them. Sometimes we dig up things that we have stored in the past (retrieval) and other times we show the things we’ve tucked away to other people (reports).&lt;/p&gt;

&lt;p&gt;This is an oversimplification of what programmers do, but it is very common. In order to create things, we need to know what kinds of things you can create. Are we going to count these things (whole numbers) or are we suppose to measure them (real numbers). If we need to compare one thing to another thing, how will I remember the result of that comparisson, can I store the result in another kind of thing that is aware of truth and falsity?&lt;/p&gt;

&lt;p&gt;If we were using a language that is pretty close to the metal, like assembly or C, you may need to know quite a bit about how things are stored and organized in a very low-level fashion before you can get very far.&lt;/p&gt;

&lt;p&gt;Thankfully, we are using JavaScript and it will not require us to work close to the metal. You will work with Types rather than bits (zeroes and ones). JS has defined some useful abstractions for us already. These abstractions allow us to work with ease because we can represent business concepts with ready-made Types.&lt;/p&gt;

&lt;p&gt;For example, if you need to work with real numbers, Java has defined the float and double data types. If you need to work with words and letters, JavaScript can work String&lt;/p&gt;

&lt;p&gt;These abstractions are high enough that we don’t get bogged down by the de- tails of how they are stored and structured on the disk, we can worry about other things like the logic of our application.&lt;/p&gt;

&lt;h1 id=&quot;data-types&quot;&gt;Data Types&lt;/h1&gt;

&lt;p&gt;You need to know what kinds of stuff you can create, define and manipulate in JS. &lt;/p&gt;

&lt;p&gt;JavaScript have simple data types. These are &lt;em&gt;Number, Boolean&lt;/em&gt; and &lt;em&gt;String&lt;/em&gt;. It also have other data types which are not so simple anymore. Their complexity is primarily because they are no longer scalar values. These are &lt;em&gt;Array, Object&lt;/em&gt; and &lt;em&gt;Function&lt;/em&gt;. There are two more types right after the complex types. The last two are &lt;em&gt;null&lt;/em&gt; and &lt;em&gt;undefined&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Number&lt;/em&gt; - 10, 2, 100 (integers), 2.3, 1.2 (floats) are numbers. JS does not discriminate whether it is of integral or float type. There’s more; 0xFF, 0xCAFEBABE (hex or octal) are also considered numbers, and so are base 8 numbers (i.e. 0377)&lt;/p&gt;

&lt;p&gt;When you try to store a value that is more than what a Number can hold, it can result to either &lt;em&gt;Infinity&lt;/em&gt; or &lt;em&gt;-Infinity&lt;/em&gt;. You can also get some weird results like &lt;em&gt;NaN&lt;/em&gt; (not a number). The NaN can result if you try to do some illegal operations, i.e. divide something by zero. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Boolean&lt;/em&gt; - either &lt;em&gt;true&lt;/em&gt; or &lt;em&gt;false&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;String&lt;/em&gt; - A sequence of UNICODE characters, although, there is no concept of character arrays in JS. You can define Strings using either the single quote or double quote technique. i.e. “Hello World” is as good as ‘Hello World’. You may insert escape characters in Strings like “Hello\n World”.&lt;/p&gt;

&lt;p&gt;We will deal with the other data types a little bit later, these three are actually enough to keep us busy for now. &lt;/p&gt;

&lt;p&gt;You will usually bother with data types when you are either declaring variables or returning something from functions. If you need to see for your eyes how the JS runtime really treats this variable, this small code snippet should help&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;A small test on how JS treats types&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vnull&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vundefined&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Let&amp;#39;s see the typeof results&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;s &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;int &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;float &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;boolean &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;vnull &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vnull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;vundefined &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vundefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;obj &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;arr &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;function x &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;function y &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;function z &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;wildcard &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wildcard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;RETURNS:&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;s string&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;int number&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;float number&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;boolean boolean&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;vnull object&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;vundefined undefined&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;obj object&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;arr object&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;function x number&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;function y undefined&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;function z undefined&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;wildcard undefined&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;VAR types&lt;/div&gt;

&lt;p&gt;Variables can be declared using the word &lt;strong&gt;var&lt;/strong&gt; (or without). I would rather that you always declare your variables using &lt;em&gt;var&lt;/em&gt; because it has some effects on the &lt;em&gt;global context&lt;/em&gt;. Don’t worry about that context for now, they will be discussed shortly.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Complex Types</title>
   <link href="http://thelogbox.com/javascript-complex-types"/>
   <updated>2013-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-complex-types</id>
   <content type="html">&lt;p&gt;JavaScript has some containers (stuff that can contain other stuff, that can contain other stuff … ). We will take a look at two of them right now — Arrays and Objects. These are not simple types like Numbers or Strings or Boolean. Instead of representing single values, Objects and Arrays can represent a collection of values. &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;OBJECTS&lt;/em&gt;. Lots of things are considered objects in JavaScript, even arrays and functions are objects, but let’s not get distracted by that right now. Think of an object like a dictionary or the telephone yellow pages. It is just a collection of stuff. This stuff though has a format, it comes in pairs. The first part of the pair is a key, the other part of the pair is a value. Using the yellow pages analogy, the key is probably a person’s name or name of a business. The value is the address or the phone number. The key has to be unique, you cannot have more than one key with exactly the same name. &lt;/p&gt;

&lt;p&gt;The value part of each pair could be anything. It could be simple data (Numbers, Booleans, Strings) or it could be complex data (Arrays, Objects or functions).&lt;/p&gt;

&lt;p&gt;There are a couple of ways to create objects in JS.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Using object literals&lt;/li&gt;
  &lt;li&gt;Using the new keyword against the Object type&lt;/li&gt;
  &lt;li&gt;Constructor functions&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Try your best to ignore number 3 above (at least for now). We will circle around that later when we get to JavaScript OOP.&lt;/p&gt;

&lt;h1 id=&quot;object-literals&quot;&gt;Object Literals&lt;/h1&gt;

&lt;p&gt;Object literals have very simple construction. The code sample below illustrates how to use &lt;em&gt;object literals&lt;/em&gt; in your code. Object literals are also known as JSON — short for JavaScript Object Notation.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this one constructs an empty object&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pt&lt;/span&gt; 	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// an object with simple data types as members&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;John Doe&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;johndoe@somewhere.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// an object that has two members, both of which are Strings&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When you use object literals to initialize objects, don’t forget to separate the pairs using comma. You can add properties (the key-value pair) to objects by simply declaring the member–using the dot notation–and assigning them values&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
person.date_hired = &quot;some date value&quot;;
person.address = &quot;some address&quot;;
&lt;/pre&gt;

&lt;p&gt;Similarly, you can access values of the object properties using the dot notation as well, although this is not the only way.&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
console.log(person.name);
console.log(person.address);
&lt;/pre&gt;

&lt;p&gt;JavaScript’s use of dot notation to access object properties and method will feel very familiar with programmers because a lot of other languages use this notation too. What might not feel familiar will be the fact that JS can also access object properties using square brackets. Like this&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
person[&quot;name&quot;];
person[&quot;address&quot;];
&lt;/pre&gt;

&lt;p&gt;JS objects are actually associative arrays—I need to clarify one point, when I write &lt;strong&gt;Array&lt;/strong&gt; (capitalized) I am referring to the JavaScript complex type. When I write &lt;strong&gt;array&lt;/strong&gt; (lowercase) I am referring to the array data structure in general, what I mean by this is a collection of rows (and sometimes columns). An object looks like an array because it a collection of &lt;strong&gt;named&lt;/strong&gt; values, this is the reason you can use the square braces approach to reference a member of a specific object. &lt;/p&gt;

&lt;h1 id=&quot;arrays&quot;&gt;Arrays&lt;/h1&gt;

&lt;p&gt;An Array is also a collection of values. Unlike an object, an Array is a collection of &lt;em&gt;ordered values&lt;/em&gt;, not &lt;em&gt;named values&lt;/em&gt;. Each member of an Array is called an element. Each element is denoted by a numeric position in the array–the position is called an index. Like objects, Arrays can be created using a variety of ways;&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

var a = []; //an empty array
var b = [1,2,3,4,5,6,7]; //an array with 7 elements
var c = [&quot;Hello&quot;, &quot;World&quot;, 1, 2.0, 0xFF]; //an array with members of diff types
var d = [[1,1], [2,2],[3,3]]; // an array with members, which are also arrays. 

&lt;/pre&gt;

&lt;p&gt;The other way to create an Array is to use the &lt;strong&gt;Array()&lt;/strong&gt; constructor&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

var a = new Array(); //equivalent to var a = []
var b = new Array(1,2,3,4,5,6,7);
var c = new Array(&quot;Hello&quot;, &quot;World&quot;, 1, 2.0, 0xFF);
var d = new Array(new Array(1,1), new Array(2,2), new Array(3,3));

var e = new Array(5); //with 5 new elements

&lt;/pre&gt;

&lt;p&gt;If you call the Array constructor with a single integer as parameter, it means you are specifying the length of the Array–you are not declaring an array with a single element, and the number you passed is the value of the first element.&lt;/p&gt;

&lt;p&gt;Array members can be retrieved by accessing the individual elements. Arrays are zero-based, hence the first element is index 0.&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

b[0] =  8; //assigns the value 8 to the first element of the Array
console.log(b[2]); //prints the value of the third element (remember, zero based)

&lt;/pre&gt;

&lt;p&gt;The characteristic of arrays having index positions makes them ideal for iterating using a for-loop. You cannot access members of an array using the dot notation–like you did when you accessed members of an object.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Code Structure</title>
   <link href="http://thelogbox.com/javascript-code-structure"/>
   <updated>2013-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-code-structure</id>
   <content type="html">&lt;p&gt;JavaScript codes may either be embedded in HTML documents or referenced from it. When they are referenced from an HTML file, they are known as external JS files.  &lt;/p&gt;

&lt;p&gt;External JS files lives in a source file, they usually have an extension of &lt;em&gt;.js&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;There are a couple of things that make up a JS source file&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/javascript/code-structure.png&quot; alt=&quot;Code Structure&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Code Structure&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Variables&lt;/em&gt;. These are temporary storage for area something. It can hold any type of data. Variables are very necessary for an imperative programming language like JavaScript. The compute engine depends upon the manipulation or changing of variable to achieve certain results. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Literals&lt;/em&gt; - e.g. 10 is Number literal, “Hello” is a string literal. They are used to assign values to variables.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Expression&lt;/em&gt; - involves operand(s) and operators. e.g. &lt;code class=&quot;codeblock&quot;&gt;a + b or 1 + a &lt;/code&gt; or &lt;code class=&quot;codeblock&quot;&gt;15 % 12&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Statement&lt;/em&gt; - similar to expressions. They are (optionally) terminated by semicolon. They can be written either inside a function or outside a function&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Function or Method&lt;/em&gt; - a programming block that (usually) have a name. A programming block is a bunch of statements grouped together and enclosed inside a pair of curly braces. Functions are primarily used to put a label on a group of statements. By simply invoking the name of the function, the group of statments will be executed. It’s a name for a routine of statements. In JavaScript, functions play a larger role than being a sub routine. Functions are an important part of JavaScript’s OOP capabilities&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Anonymous Functions</title>
   <link href="http://thelogbox.com/javascript-anonymous-functions"/>
   <updated>2013-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-anonymous-functions</id>
   <content type="html">&lt;p&gt;We have already taken a look at functions earlier. At first glance, functions in Javascript does not seem too special. Like in any other language, we used it to contain a bunch of statements and gave it a name. This name, when we call them at a later time, will execute the set of commands inside its block. We use the function simply as an encapsulation unit for a sequence of statements.&lt;/p&gt;

&lt;p&gt;Functions in JavaScript has some twists that may seem weird at first (depending on where you are coming from). The dynamic characteristic of the language presents a lot of possibilites—and some suprises too. Take a look at the following code&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; 	&lt;span class=&quot;c1&quot;&gt;//nothing surprising here, it will return 10&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 	&lt;span class=&quot;c1&quot;&gt;//This is allowed in JS, because it is not strongly typed&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 		&lt;span class=&quot;c1&quot;&gt;//This will now output &amp;quot;Hello World&amp;quot;. It has already forgotten that it was a function&lt;/span&gt;
						&lt;span class=&quot;c1&quot;&gt;//before&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;//this one will throw an error, because foo is no longer a function&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;JavaScript function names are not that different from ordinary variables. You can assign them values, just like how you would an ordinary variable. Similarly, you can assign functions to variables; like this&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

var foo = function() {
	return 10;
}

console.log(foo()); //returns 10

&lt;/pre&gt;

&lt;p&gt;It may seem that you don’t have a need for anymous functions at the moment. Admittedly, the code example above does a poor job hinting at it’s utility value. Anonymous functions will become increasingly important when you start using them for call backs e.g. during event driven programming on the browser, using third party libraries like JQuery or server side programming with NodeJS&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This is another way to create a function. Notice that the function on the right hand side of the equal sign does not have a name. Notice also that we can assign it to a regular variable named “foo” then invoked &lt;strong&gt;foo()&lt;/strong&gt;. What we have just done was create an anonymous function and assigned it to variable &lt;em&gt;foo&lt;/em&gt;. It is called an anonymous function, for obvious reasons, it does not have a name. There are other ways to create functions in JS, but we will stop here because we don’t have any further use for another way to create a function, what we have is quite enough for now.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Introduction to PHP</title>
   <link href="http://thelogbox.com/wordpress/wordpress-php"/>
   <updated>2013-11-04T00:00:00+08:00</updated>
   <id>http://thelogbox.com/wordpress/wordpress-php</id>
   <content type="html">&lt;p&gt;To follow the exercises in this chapter, you will need WAMP up and running. You will also need to put the practice file on the &lt;strong&gt;DOCUMENT ROOT&lt;/strong&gt; of Apache. &lt;/p&gt;

&lt;p&gt;In HTML introduction chapter, we have already created a folder on the document root&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\yourname\wamp\www\practice
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We will still use this folder to contain all of our practice files. Create a file and name it &lt;em&gt;hello.php&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
Hello
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s not that much different from a regular html page. In fact, if not the php file extension, it is a lot like an ordinary html page. PHP behaves like this because it was designed to place very nicely with html — a valid html document is also a valid php script. &lt;/p&gt;

&lt;p&gt;Let’s add some php statements in our file. Edit &lt;em&gt;hello.php&lt;/em&gt; so it looks like the code example below&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;

  &amp;lt;?php echo &quot;This is outputed by PHP&quot;; ?&amp;gt;
   Today&#39;s date is
  &amp;lt;?php echo date(DATE_RFC822); ?&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To test this code, you need to launch a browser session and go to &lt;em&gt;http://localhost/practice/&lt;/em&gt;. You cannot simply double click the php file like you did with regular HTML files. PHP script is a server side technology not client side (like HTML, CSS, JavaScript). &lt;/p&gt;

&lt;p&gt;For the PHP script to execute, an HTTP request has to be made. When web server reads PHP instructions, it will hand over the execution to a program that understands PHP instructions. It will execute the instructions, then it will produce the resulting html files.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;basic-concepts&quot;&gt;Basic Concepts&lt;/h2&gt;

&lt;p&gt;Think of programming as if you are writing a recipe for a friend. To write a recipe, you need to tell him two things. Firstly, the ingredients, what kinds of things he needs to work with. Secondly, how to work on those things. Some things you slice or dice. Some things you put in the pan first before you put the others. Some things you keep on doing until the food is of a certain color or temperature or consistency.&lt;/p&gt;

&lt;p&gt;Programming is a lot like that. It might be oversimplication but oversimplification is what we need in order to begin understanding a complex subject. Before you can begin writing codes, you need to decide on a lot of things e.g. which language are we going to use, should we learn desktop, web or mobile programming etc. In our case, a lot of these decisions have already been made. We are building skills so that we can write a Wordpress app. That narrows things down for us.&lt;/p&gt;

&lt;p&gt;A Wordpress app requires knowledge HTML, JavaScript, CSS and PHP. I did not include MySQL anymore because the Wordpress platform insulates you from dealing with the database. You will only need to deal with the database if you are working on a really unusual problem.&lt;/p&gt;

&lt;p&gt;We will start building our programming competencies in PHP, this is what this chapter is all about.&lt;/p&gt;

&lt;h2 id=&quot;statements&quot;&gt;Statements&lt;/h2&gt;

&lt;p&gt;Remember the recipe analogy? First we need to know what kinds of things we can work with. In programming that means data. What kinds of data you can work with. You can work with numbers, both whole and real. You can use strings (words). You can work with boolean values (true or false). There are other things you can also work with but they are bit advanced, these are objects and arrays. We will circle back to these two when you have a bit more programming muscles.&lt;/p&gt;

&lt;p&gt;A statement in PHP is a declaration of an operation, something that you would like to do. For example, if you want define a variable and store a number in it, you need to tell PHP exactly that.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$anumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The variable name is &lt;em&gt;anumber&lt;/em&gt; but I did put a dollar sign before it. That is required. &lt;/p&gt;

&lt;p&gt;When you define a variable in PHP, you need to prepend it with the dollar sign so that PHP knows you are declaring a variable. The equal sign is used for assignment. In this statement, we defined a variable named &lt;em&gt;anumber&lt;/em&gt; and assigned an an integer to it.&lt;/p&gt;

&lt;p&gt;You will notice that there is a semicolon right after the number 10. That is a big deal. The semicolon tells PHP that you are already done with the statement. Just like when you want to end a sentence, you would punctuate it with a period to signal that it is already a complete thought, you need to punctuate your PHP statements with a semicolon.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;$anumber&lt;/em&gt; is called a variable because we can change it’s value later on. You can add, subtract, divide and multiply it with some other value then store the new results on $anumber thereby changing its original value, like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;co-mingling-with-html&quot;&gt;Co-mingling with html&lt;/h2&gt;

&lt;p&gt;You need to write your PHP statements inside this tag &lt;em&gt;&amp;lt;?php  ?&amp;gt;&lt;/em&gt;. PHP is a server side scripting language, the php tag tells the server that what’s inside is not HTML. It contains PHP instructions that needs to be &lt;em&gt;parsed and evaluated&lt;/em&gt;. When these instructions are evaluated, sometimes they produce HTML and other times they don’t. Through your practice, you will learn which statements produce HTML and which parts do something else. You don’t always need to output something, sometimes you just need to do some stuff that don’t necessary need to be seen by the user. &lt;/p&gt;

&lt;p&gt;PHP statements are often found co-mingled with HTML, like this;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;&amp;lt;html lang=en&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;lt;h1&amp;gt;My Spanking Web App&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;lt;span&amp;gt;Today is &amp;lt;/span&amp;gt; &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DATE_RFC822&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See that. Most of the codes are in HTML except for that tiny &lt;em&gt;&amp;lt;?php echo date(DATE_RFC822); ?&amp;gt;&lt;/em&gt; which basically just outputs the current date. When the server sees that instruction, it will get the  system date then &lt;em&gt;echo&lt;/em&gt; the return value as HTML. By this time you must have figured out that whatever you &lt;em&gt;echo&lt;/em&gt; it will be part of the HTML output.&lt;/p&gt;

&lt;p&gt;Many developers frown upon the practice of peppering your HTML codes with PHP expressions and statements, I don’t necessarily agree with this approach as well, but were just starting out to learn PHP, so don’t sweat about it just yet. Get some grips with the language first then worry about separation of concerns, MVC and other artsy fartsy architectural buzzwords. &lt;/p&gt;

&lt;p&gt;Before you can write elegant prose, you need to know vocabulary first, then grammar and rhetoric structures. Prose will come later, not before. &lt;/p&gt;

&lt;h2 id=&quot;three-things-you-can-do-with-statements&quot;&gt;THREE THINGS YOU CAN DO WITH STATEMENTS&lt;/h2&gt;

&lt;p&gt;First. You can write one statement after another, like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$in = 5;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$cm = 10;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$factor = 2.54;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;echo $in . &amp;quot; inches = &amp;quot; . $in / $factor;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo $cm . &amp;quot; cm = &amp;quot; . $cm * $factor;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That is called &lt;em&gt;sequencing&lt;/em&gt;. Your code starts executing the first statement until it runs out of things to do. &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Second. You can execute some statements when some condition is true, if it is not true, do something else; like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$a = 10;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$b = 20;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;if($a &amp;gt; $b) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  echo &amp;quot;a is &amp;gt; b&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;else {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  echo &amp;quot;a &amp;lt; b&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;if&lt;/em&gt; is a special word in PHP, programers call it a reserved word. Like &lt;em&gt;echo&lt;/em&gt; it has a specific action when used. The &lt;em&gt;if&lt;/em&gt; keyword is what you use for branching. You need to give it an expression, a boolean expression to be exact and it needs to result to either true or false. When the condition is true, all of the statements inside the &lt;em&gt;if block&lt;/em&gt; is ran. &lt;/p&gt;

&lt;p&gt;The pair of curly braces is called a &lt;em&gt;block&lt;/em&gt;. When statements are inside a block, they are executed as a group, start with the first one and all go all the way til the last. When you reach the last curly brace, execution resumes — unless you encounter another branching command or any command that alters the sequential flow of instruction. You will usually find blocks in control structures that either branch or loop.  &lt;/p&gt;

&lt;p&gt;The &lt;em&gt;else block&lt;/em&gt; gets executed when the condition given on the if block results to false. Mind you that the else block is not always necessary. Some programs only writes the if block and nothing else, like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$a = 10;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$b = 20;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;if($a &amp;gt; $b) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  echo &amp;quot;a is &amp;gt; b&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code is still valid, although incomplete. So when do you use the else? That is left to your discretion, the programmer. Use it when it makes sense. &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;We come to the last thing you can do with statements. If branching allows you sidestep some statements depending on some conditions, looping will let you perform some statements repeatedly until some conditions hold true.&lt;/p&gt;

&lt;p&gt;There are a two ways to perform looping in PHP. They use very different keywords and have very characteristic semantics.  PHP uses the &lt;em&gt;while&lt;/em&gt; and the &lt;em&gt;for&lt;/em&gt; statements to implement iterative constructions. For our purpose, we will only consider using the &lt;em&gt;whilte&lt;/em&gt; statement because this is what you will encounter most when programming WordPress.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; 

&lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;while loop&lt;/div&gt;

&lt;p&gt;The &lt;em&gt;while&lt;/em&gt; loop needs to have a conditional expression. That is the one you put inside the parens. While that condition evaluates to &lt;em&gt;true&lt;/em&gt;, all the statements inside the block — the paired curly braces — will execute. You have to take care that the condition of the while loop will evaluate to &lt;em&gt;false&lt;/em&gt; at some point in time lest your program will not terminate. In our example code above, the program will terminate when the &lt;em&gt;$counter&lt;/em&gt; variable becomes &lt;em&gt;10&lt;/em&gt;. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Installation and Configuration</title>
   <link href="http://thelogbox.com/wordpress/wordpress-installation"/>
   <updated>2013-11-04T00:00:00+08:00</updated>
   <id>http://thelogbox.com/wordpress/wordpress-installation</id>
   <content type="html">&lt;p&gt;Presumably, you have completed the Apache, MySQL and PHP setup. This chapter walks through the steps on how to install and configure a WordPress instance.&lt;/p&gt;

&lt;p&gt;The process involves downloading the installer from the WordPress website, expanding a zip file, editing a configuration file and creating a database. It may seem a bit complex for a beginning programmer but it can be managed by simply following the steps detailed below.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Download the installer from the &lt;a href=&quot;http://wordpress.org/download/&quot;&gt;WordPress site&lt;/a&gt;. This is usually a zipped file.&lt;/p&gt;

&lt;p&gt;Unzip the file and put it inside the folder &lt;em&gt;C:\Users\yourname\wamp\www&lt;/em&gt;. This is the directory of our WAMP installation. Technically you can place the unzipped file anywhere and still manage to have the Apache web server find it. That however requires intermediate knowledge of the Apache configuration files — which I did not assume you have at this point. Hence, it will be best to simply put our expanded &lt;em&gt;wordpress&lt;/em&gt; folder inside the default &lt;em&gt;Document Root&lt;/em&gt; of Apache which is &lt;em&gt;C:\Users\yourname\wamp\www&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-database&quot;&gt;Creating the Database&lt;/h2&gt;

&lt;p&gt;Check if the WAMP server is still running. You need WAMP to be in the running state to perform the following procedure.&lt;/p&gt;

&lt;p&gt;Launch a browser session and go to &lt;em&gt;http://localhost&lt;/em&gt; (assuming that you did not change the port of Apache in your WAMP installation). The opening screen of WAMP contains a &lt;em&gt;tool&lt;/em&gt; section, try to find it and click &lt;em&gt;phpmyadmin&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Go to the &lt;em&gt;SQL&lt;/em&gt; tab and enter the following&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE database wppractice;

GRANT ALL PRIVILEGES ON wppractice.* TO yourname@’localhost’ IDENTIFIED BY &#39;yourpassword&#39;;

FLUSH privileges;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Replace &lt;em&gt;yourname&lt;/em&gt; and &lt;em&gt;yourpassword&lt;/em&gt; with any value you like &amp;amp;mdash. Just a make a point to remember them because you will need them later.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/wordpress/phpmyadmin-sql.png&quot; alt=&quot;PHPMyAdmin SQL Page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the &lt;em&gt;GO&lt;/em&gt; button on the page. That will execute the three lines of SQL commands you typed up on the SQL editor. This is probably your first and last personal encounter with the MySQL database in WordPress unless you are doing something crazy, advanced or both with WordPress.&lt;/p&gt;

&lt;h2 id=&quot;configure-wp-configini&quot;&gt;CONFIGURE WP-CONFIG.INI&lt;/h2&gt;

&lt;p&gt;Go to Wordpress folder you created, it should be in C:\Users\yourname\WAMP\wordpress-project — if you did not stray from the instructions.&lt;/p&gt;

&lt;p&gt;The core files contains a file named &lt;em&gt;wp-config-sample.php. Make a copy of that file and name it *wp-config.php&lt;/em&gt;. Open it up for editing — don’t double click it, your system might be configured to launch a browser instead of opening an editor. Right-click on it and choose an editing program e.g. notepad. You need to make some changes to its contents.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define(&#39;DB_NAME&#39;, &#39;wppractice&#39;);

/** MySQL database username */
define(&#39;DB_USER&#39;, &#39;yourusername&#39;);

/** MySQL database password */
define(&#39;DB_PASSWORD&#39;, &#39;yourpassword&#39;);

/** MySQL hostname */
define(&#39;DB_HOST&#39;, &#39;localhost&#39;);

/** Database Charset to use in creating database tables. */
define(&#39;DB_CHARSET&#39;, &#39;utf8&#39;);

/** The Database Collate type. Don&#39;t change this if in doubt. */
define(&#39;DB_COLLATE&#39;, &#39;&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This part will tell WordPress what database to use, which user has access to the database and what is the password of that user. This is why you needed to remember the username and password during the database creation time on the SQL editor of phpmyadmin. Replace &lt;em&gt;yourusername&lt;/em&gt; with the username you used when you created the database using phpmyadmin (the SQL part). Do the same with &lt;em&gt;yourpassword&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Save the file and launch a browser session. Go to &lt;em&gt;http://localhost/wordpress-project/wordpress&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;You will be taken to the WordPress Site initialization page. That is straightforward to fill up. Think of a site name and give it an administrator password.&lt;/p&gt;

&lt;aside&gt;

**NOTE:** The WordPress administrator password being requested on the WordPress site installation is different from your database password. Each wordpress installation must have at least one Admin user, so don’t lose your Admin password.

&lt;/aside&gt;
</content>
 </entry>
 
 <entry>
   <title>Environment Setup</title>
   <link href="http://thelogbox.com/javascript-core-environment-setup"/>
   <updated>2013-11-04T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-core-environment-setup</id>
   <content type="html">&lt;p&gt;You most likely already have the minimum tools you need to start coding in JavaScript. You just need a modern browser, a text editor and a good internet connection. Meeting the minimum requirement does not mean it’s ideal for development. I really don’t like prescribing tools because choice of coding weapons tend to be personal in nature, but allow me to risk some recommendations. Please find them below.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;A modern browser&lt;/em&gt;. IE9/10, latest stable build of Chrome, FireFox or Safari. I suppose you would like to write code that is compliant with the current ECMAScript specification. Chances are, modern browsers will be compliant&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Programmer’s editor&lt;/em&gt;. You can get by using Notepad, TextWrangler or GEdit. But do yourself a favor. Get a real programmer’s editor. Something that is capable of chroma coding (syntax highlight), code folding, configurable indents/soft tabs etc.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Reasonably fast internet connection.&lt;/em&gt; You might want to use some of the online code editors for JS like JSFiddle.net or JSBin.com, you will need a fast internet for those&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;NodeJS runtime&lt;/em&gt;. Your background of JavaScript may have been influenced by browser side scripting. NodeJS is something you would use for server side JavaScript. The main reason I am urging you to get Node is because of the runtime. It will be handy if you have access to a CLI environment of JavaScript. It can be downloaded from the &lt;a href=&quot;http://nodejs.org&quot;&gt;nodejs.org&lt;/a&gt; site&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Tools for Development</title>
   <link href="http://thelogbox.com/wordpress/wordpress-tools"/>
   <updated>2013-11-03T00:00:00+08:00</updated>
   <id>http://thelogbox.com/wordpress/wordpress-tools</id>
   <content type="html">
&lt;p&gt;Writing HTML, JavaScript and CSS doesn’t require much. You can get by with the tools you probably already have — an HTML5 compliant browser, a programmer’s editor or any text editor for that matter and a good internet connection.&lt;/p&gt;

&lt;p&gt;Some tools are better than others but tooling is a highly debatable question, at the end of the day go with what you are most comfortable with. Sometimes, you may have not have a say on the tools because they have already been picked for you — by a tech lead, a client or your company standards.
Having said that, here are some suggestions.&lt;/p&gt;

&lt;p&gt;Get Google Chrome and FireFox. IE10 and Safari works too. I cannot specify the versions because a month from now, that will be outdated information. I will encourage you instead to test your browser by going to &lt;a href=&quot;http://html5test.com&quot;&gt;html5test.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Get a decent programmer’s editor. One that supports code folding, syntax coloring and customizable keys. You can get started with NotePad but that was not designed to be a programmer’s editor. There are many reasons but the biggest for me is that it won’t help me manage tab spaces and pairing of curly braces — if you try to code with it long enough I am sure you will have your own reason. NotePad++ is not a bad choice to start with, Sublime Text2 is also a good one. Vim or any of it’s variant (GVim, MacVim etc) are excellent choices. That list should you get started for now until you have developed your own personal preferences for programmer’s editor.&lt;/p&gt;

&lt;p&gt;Try considering some online code editors like &lt;a href=&quot;http://jsfiddle.net&quot;&gt;JSFiddle.net&lt;/a&gt; and &lt;a href=&quot;http://jsbin.com&quot;&gt;JSBin.com&lt;/a&gt;. If you have a reliable internet connection they are excellent coding tools for learning purposes.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Theoretical Minimum</title>
   <link href="http://thelogbox.com/wordpress/wordpress-theoretical-minimum"/>
   <updated>2013-11-03T00:00:00+08:00</updated>
   <id>http://thelogbox.com/wordpress/wordpress-theoretical-minimum</id>
   <content type="html">&lt;p&gt;WordPress is built using a collection of technologies and languages. To build an application using this platform, you need a modicum of skill on &lt;em&gt;HTML, PHP, CSS, JavaScript&lt;/em&gt; and &lt;em&gt;SQL&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;HTML&lt;/em&gt;. Most of the things a CMS needs to do are already taken cared of by the WordPress core files. Things like creating new content, saving them on a data store and retrieving them for display are the kind of things WordPress does. You don’t need to do much. The heavy lifting has been done by WordPress. But you do need to take control of how the information is presented to the user. You need HTML for that&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;PHP&lt;/em&gt;. While the heavy lifting has already been done for you by WordPress, you still need to write a bit of PHP. Don’t worry, you won’t have to write a lot. But you need to know how to read and write basic PHP codes. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;CSS&lt;/em&gt; is responsible for styling. The visual aspects of your application is dictated solely by this styling language. Arguably, you can build web pages without CSS, but I am risking a guess that you need your application to be visually appealing. Hence you need to have skill on styling&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;JavaScript&lt;/em&gt;. HTML, CSS and JavaScript are commonly found on web applications. They are the technologies on the client side — browser side. WordPress uses JS for mainly for plugins. But you may find that you have use for JavaScrip beyond simply plugins. The use of JS alongside CSS and HTML are increasingly becoming prevalent in the age of responsive designs&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;SQL&lt;/em&gt;. You may not use this at all, save for the few occasions like setup. I listed it here just for the sake of completeness and being thorough on the list of competencies. But honestly, I don’t think you will need to interact with MySQL database unless you will do something outside creating and reading posts/pages. SQL skills will become important when you start using WordPress to build something other than a CMS&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Setup</title>
   <link href="http://thelogbox.com/wordpress/wordpress-setup"/>
   <updated>2013-11-03T00:00:00+08:00</updated>
   <id>http://thelogbox.com/wordpress/wordpress-setup</id>
   <content type="html">&lt;p&gt;WordPress needs a web server capable of running PHP and a MySQL database. The more popular choice for the web server is Apache, although many others will suffice just as well. For our purpose we will use Apache. &lt;/p&gt;

&lt;p&gt;MySQL, PHP and Apache are open source software (OSS). They are widely available on popular platforms such as OSX, Linux and Windows. These instructions are for Windows because I think that most of the people who will read this are on that platform. &lt;/p&gt;

&lt;p&gt;There are plenty of ways to install these bunch and make them work together but as this guide is targeted towards people with minimum programming experience, I chose to use &lt;em&gt;WAMP&lt;/em&gt;. Its an acronym for Windows, Apache, MySQL and PHP. It takes care of a lot of things but the most value is that it takes away our need for configuration.&lt;/p&gt;

&lt;p&gt;Installing these software individually affords you the most control over the setup but it comes at a prie — you have to really know what you are doing to make them work together. The configuration part can be tricky at times and it can easily trip up a beginning developer. So, take the guess work out of your workflow for now and just install WAMP. &lt;/p&gt;

&lt;p&gt;WAMP installation involves just a few basic steps. Download it from the Apache site, install, configure and finally test it. &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Download the installer the from the &lt;a href=&quot;http://www.wampserver.com/en/&quot;&gt;WAMP site&lt;/a&gt;. Choose the appropriate installer for your platform. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/wordpress/choose-installer-wamp.png&quot; alt=&quot;WAMP installer&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;WAMP Installer&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;I wish I could be more precise in the details here but the issue is I don’t know what kind of Windows installation you have. It is simply your responsibility to know that detail. You can find out easily though, simply access System Properties from the Windows control panel, then you can ascertain which kind of Windows you have installed.Choose the 64-bit version if you are using 64-bit Windows. &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Double click the the installer. By default, WAMP installer will put your files in &lt;em&gt;C:\wamp&lt;/em&gt; – for Windows XP users, this is not generally a problem, but for Windows 7 or 8 users, it could be a problem because folders outside the Users folder generally needs an elevated privilege before you can access it. If you don’t mind running things as Administrator, then go ahead, install in C:\wamp, otherwise, change the installation folder to *C:\Users\yourname\wamp*. After the installer has finished, WAMP should be sitting in your System Tray.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/wordpress/wamp-system-tray.png&quot; alt=&quot;System Tray&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;WAMP in the System tray&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;The WAMP icon will change color in the course of usage. Initially, it will be red. That means the services (Apache and MySQL) are not running. It turns into green when both Apache and MySQL have already been started and are running without problems. Green is color you are looking for.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Hover your mouse on the system tray, right on top of WAMP icon. Click it to reveal the menu options. You will find options to start, stop and restart services.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/wordpress/wamp-start.png&quot; alt=&quot;Starting WAMP&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Starting WAMP&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;You will not see anything happen (yet) when you start WAMP. They are services after all and not desktop applications. Starting the services only means that the Apache Web Server is now ready to respond to HTTP request (usually browser request) and MySQL database is now ready to respond to SQL commands.&lt;/p&gt;

&lt;p&gt;Launch a browser session (Chrome or Firefox if you have them, if you don’t , get them. IE has some quirks with the WAMP admin panel)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/wordpress/wamp-opening-screen.png&quot; alt=&quot;WAMP Opening Screen&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;WAMP opening screen&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;When you see the opening screen, that means your WAMP server is working properly.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Introduction to HTML</title>
   <link href="http://thelogbox.com/wordpress/wordpress-html"/>
   <updated>2013-11-03T00:00:00+08:00</updated>
   <id>http://thelogbox.com/wordpress/wordpress-html</id>
   <content type="html">&lt;p&gt;I’m hoping and dangerously assuming that you have some knowledge of HTML or at least have a passing appreciation of it — at least what it looks like and what it is used for. That will spare us the dry details of description.&lt;/p&gt;

&lt;p&gt;While we can dodge the academic description of the markup language, a passing appreciation of the language will not do. Not if you are a developer. You will need to know more. Just a bit more.&lt;/p&gt;

&lt;p&gt;HTML is not a programming language. It is a markup language. That is our first fact about HTML.&lt;/p&gt;

&lt;p&gt;Marking up has its roots in the publishing industry, the paper publishing industry that is. Before the age of electronic publishing, a document needs to go through several processes before it lands on your lap either as book or magazine, or what have you. One of these processes is that an editor or somebody in charge of editing will go through a manuscript and scribble some instructions on the paper itself. These instructions could be “underline that word”, “emphasize this”, “make this phrase stand out”. Of course when the document is published the reader will not see those instructions. What they saw was just the resulting published document. Those instruction were meant for somebody to carry out, I suppose the typesetter would have carried them out before the final plates were rolled over and mass-produced.&lt;/p&gt;

&lt;p&gt;Marking up means adding instructions to a document, more specifically adding presentation instructions to a document so that some of its parts are underlined, emphasized or highlighted.&lt;/p&gt;

&lt;p&gt;HTML is a modern way of marking up documents. It was first thought of by Tim Berners Lee during his stay at CERN. The history of HTML, while an interesting read is simply not part of the scope of this document so I will refer you to the trusty Wikipedia page for &lt;a href=&quot;http://en.wikipedia.org/wiki/HTML&quot;&gt;HTML history&lt;/a&gt; for an extended reading session about the origins and evolution of HTML. For our purpose, I would like to address the technical aspects of it and how it will help us build Wordpress apps.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;I need you to remember the folder where you installed WAMP. If you followed the instruction during the setup chapter, that folder would be in &lt;em&gt;C:\Users\yourname\wamp&lt;/em&gt;. Go to that folder. You will find another folder called &lt;em&gt;www&lt;/em&gt; inside it. Go to the www folder. &lt;/p&gt;

&lt;p&gt;Create a folder inside &lt;em&gt;www&lt;/em&gt;, name it &lt;em&gt;practice&lt;/em&gt;. This is where we will store all our practice files. &lt;/p&gt;

&lt;p&gt;Create a file and name it &lt;em&gt;first.html&lt;/em&gt;. Launch a program editor to open first.html for editing. Do not double click first.html. Double clicking will open the file for viewing. Most likely it will launch your default browser and view the file. That is not what we want to do right now. You may right-click on the file to open Window’s context menu, then choose a program editor to open the html file. Edit it and write the following&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;first.html&lt;/div&gt;

&lt;p&gt;Don’t worry about the contents for now. They will be discussed soon enough. We are simply making sure that our tools are working properly. &lt;/p&gt;

&lt;p&gt;Double click first.html. Your browser would have launched. You have just created your first HTML document.&lt;/p&gt;

&lt;h2 id=&quot;structure-and-composition&quot;&gt;Structure and Composition&lt;/h2&gt;

&lt;p&gt;Words inside angle brackets — &lt;em&gt;&amp;lt; like this &amp;gt;&lt;/em&gt;  — are instructions. They are part of the HTML language. They have special meaning to the browser. When the browser reads a pair of angle brackets, it will carry out an instruction. So things inside these brackets are what might you might call special words. Although developers refer to them as &lt;em&gt;tags&lt;/em&gt; or &lt;em&gt;elements&lt;/em&gt;. You better get used to calling them that as well.&lt;/p&gt;

&lt;p&gt;You might have noticed that the instructions come in pairs. They don’t always do — like in the case of the &amp;lt; !doctype &amp;gt;. But most of the time instructions come in pairs.&lt;/p&gt;

&lt;p&gt;Don’t worry about the doctype yet, we won’t get into that right now because its gory details will lead us into the rabbit hole of XML and SGML — don’t worry about those two either. They are not important to you for now. The doctype is basically a declaration of what kind of document the file is. In this case, it says HTML.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The fundamental structure of an html document is as follows&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;basic structure&lt;/div&gt;

&lt;p&gt;Whatever it is that you will write inside an HTML doc has to be inside the paired html tags. It doesn’t make sense to put anything outside of them except DOCTYPE.&lt;/p&gt;

&lt;p&gt;Elements can be nested within other elements. Whatever it is that you will put in between the html root tags will be tags as well.&lt;/p&gt;

&lt;p&gt;There some more structural issues that we need to get out of the way before we can take a look at the presentation semantics of HTML. A more complete structure for an HTML doc looks like the following&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctypehtml&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;First&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;HTML doc structure&lt;/div&gt;

&lt;p&gt;An HTML doc will have two major parts. The HEAD and the BODY.
The BODY part contains most of the things you see on a web page. It has the meat and potatoes of the web content. This is where your headings, footers, videos, paragraph content and others.&lt;/p&gt;

&lt;p&gt;The HEAD part is not entirely visible to the visible. With the exception of title tag, nothing inside the head part can be seen on a web page. The HEAD contains structure and meta information about the page while the BODY has the content.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/wordpress/html-head-body.png&quot; alt=&quot;HTML head and body&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;head and body part&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;If you edited our &lt;em&gt;first.html&lt;/em&gt; practice file and followed along, you can try viewing the result of the edited document so you can see the results in your browser. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Download Accelerator</title>
   <link href="http://thelogbox.com/linux-download-accelerator-cli"/>
   <updated>2013-10-31T00:00:00+08:00</updated>
   <id>http://thelogbox.com/linux-download-accelerator-cli</id>
   <content type="html">&lt;p&gt;Axel is a CLI download accelerator. It’s available on Linux repos. I am using Debian that’s why the package manager is aptitude. Just use your own package manager and look for axel.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install axel 
$ axel -n 10 http://wordpress.org/latest.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-n 10 means you want to use 10 simulateneous threads of download. &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>HTML5 Canvas Programming</title>
   <link href="http://thelogbox.com/training/html5-training"/>
   <updated>2013-10-25T00:00:00+08:00</updated>
   <id>http://thelogbox.com/training/html5-training</id>
   <content type="html">&lt;p&gt;The training covers the new structural elements of HTML5, WebWorkers, WebSockets, GEOLocation etc, but the main thrust of this training will be on Canvas and SVG Programming. This is the part of HTML5 that a lot of people are referring to as the &lt;em&gt;flash killer&lt;/em&gt;. When you see a job advertisement looking for HTML5 developers, most likely they are referring the HTML5 Canvas programmers. &lt;/p&gt;

&lt;p&gt;Knowledge of the structural elements and other goodies of HTML5, important as they are, are eclipsed by knowledge of Canvas programming—simply because this is the skill that is rising in demand.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Structural elements of HTML5 &lt;/li&gt;
  &lt;li&gt;JavaScript review &lt;/li&gt;
  &lt;li&gt;Programming on HTML5 Canvas &lt;/li&gt;
  &lt;li&gt;Introduction to SVG &lt;/li&gt;
  &lt;li&gt;HTML5 audio&lt;/li&gt;
  &lt;li&gt;HTML5 Video 
7 GEOLocation &lt;/li&gt;
  &lt;li&gt;WebWorkers &lt;/li&gt;
  &lt;li&gt;WebSockets &lt;/li&gt;
  &lt;li&gt;Server-Sent events &lt;/li&gt;
  &lt;li&gt;Local Storage&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;mailto:ted@thelogbox.com&quot; class=&quot;button&quot;&gt;Email me for details&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Introduction</title>
   <link href="http://thelogbox.com/java-introduction"/>
   <updated>2013-10-24T00:00:00+08:00</updated>
   <id>http://thelogbox.com/java-introduction</id>
   <content type="html">&lt;p&gt;These are my notes on the Java Programming Language. These notes used to be hosted at &lt;a href=&quot;http://tedhagos.com/java-programming&quot;&gt;tedhagos.com/java-programming&lt;/a&gt;, it was written on a single HTML page. Now, these notes are getting a rewrite. Most probably in tutorial form. There is a navigation bar on the side, please use it as you would a table of contents, I organized these notes as such.&lt;/p&gt;

&lt;p&gt;These notes dates back to the late part of the 1990s. I update them from time to time. These were written primarily as a secondary reference for my students in Asia Pacific College and IBM ACE. It was not meant to be an introduction to computing concepts. It assumes that the reader has some degree of familiarization in basic programming concepts which may have been acquired from experience of another programming language.&lt;/p&gt;

&lt;p&gt;Having said that, what follows will take you through a very quick tour of the Java programming language. This material was not designed to cover all the aspects of the language, as it will be impractical to do so. The breadth and depth of Java, with all the associated technologies have increased drastically since it was first introduced in 1995.&lt;/p&gt;

&lt;p&gt;The code samples and exercises in this material were built using plain editors and the Java Development Kit. The use of simple tools is ideal for learning because there are no magic tricks and convenience facilities (like the case if you use an IDE). As a result, your brain will work harder because you are forced to use primitive tools. In a production environment or consulting environment, this reasoning might not be suitable and hence, the decision for tool selection will be influenced by other factors such as programmer productivity, time schedules and other constraints.&lt;/p&gt;

&lt;p&gt;For the purpose of learning programming in Java — which is the goal of this material — we need our brains and faculties to work harder than usual to maximize learning and understanding.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Coding Process</title>
   <link href="http://thelogbox.com/java-coding-process"/>
   <updated>2013-10-24T00:00:00+08:00</updated>
   <id>http://thelogbox.com/java-coding-process</id>
   <content type="html">&lt;p&gt;Java source files are unicode text files. They have a &lt;em&gt;.java&lt;/em&gt; extension on their file names.  &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Network Connectivity</title>
   <link href="http://thelogbox.com/phonegap-network-connectivity"/>
   <updated>2013-10-20T00:00:00+08:00</updated>
   <id>http://thelogbox.com/phonegap-network-connectivity</id>
   <content type="html">&lt;p&gt;Your ability to detect network connectivity will be valuable. There are lots of use cases where you need to do something that depends on the device being connected or not — there are even times if you need to discriminate further whether the device wifi connected, 3g or LTE connected e.g. iOS devices don’t always pull updates if the connection is less than wifi. &lt;/p&gt;

&lt;p&gt;To detect what kind of connectivity the device has, you need to use &lt;strong&gt;navigator.connection.type&lt;/strong&gt; object. You will need to include the &lt;strong&gt;phonegap.js&lt;/strong&gt; script in your code.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;connection.type&lt;/strong&gt; object requires a plugin installation. You will have to pull some files from the Apache.org repositories.&lt;/p&gt;

&lt;p&gt;Create a new project. For the purpose of this exercise, the project name will be &lt;strong&gt;network&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ phonegap create network --name &quot;NetworkTest&quot; --id com.thelogbox.network
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, we will get the necessary plugins.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cordova plugin add https://git-wip-us.apache.org/repos/asf/cordova-plugin-network-information.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We won’t be needing anything other the &lt;strong&gt;index.html&lt;/strong&gt; file. I have deleted the default html file created by phonegap and replaced it with the one below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;

&amp;lt;html lang=en&amp;gt;
&amp;lt;body&amp;gt;

  &amp;lt;h1&amp;gt;Network exercise&amp;lt;/h1&amp;gt;
  &amp;lt;div id=&quot;watch&quot;&amp;gt;
  &amp;lt;/div&amp;gt;

  &amp;lt;script type=&quot;text/javascript&quot; src=&quot;phonegap.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&amp;gt;
    
  window.onload = function() {
    log(&quot;window onload&quot;);
  }  
    
  document.addEventListener(&quot;deviceready&quot;, function(){
    
    log(&quot;Device is ready&quot;);
    
    // log(&quot;Connection is : &quot; + navigator.connection.type);
    
    var networkstate = navigator.connection.type;
    log(&quot;CONNECTION [raw] : &quot; + networkstate);
    log(&quot;Connection constant test : &quot; + Connection.UNKNOWN);
    
    var states = new Array();
    
    states[Connection.UNKNOWN]  = &#39;Unknown connection&#39;;
    states[Connection.ETHERNET] = &#39;Ethernet connection&#39;;
    states[Connection.WIFI]     = &#39;WiFi connection&#39;;
    states[Connection.CELL_2G]  = &#39;Cell 2G connection&#39;;
    states[Connection.CELL_3G]  = &#39;Cell 3G connection&#39;;
    states[Connection.CELL_4G]  = &#39;Cell 4G connection&#39;;
    states[Connection.CELL]     = &#39;Cell generic connection&#39;;
    states[Connection.NONE]     = &#39;No network connection&#39;;
    
    log(&quot;CONNECTION : &quot; + states[networkstate]);
    
  },false);
  
  function log(message){
    var out = document.getElementById(&quot;watch&quot;);
    var temp = out.innerHTML;
    temp += message + &quot;&amp;lt;br/&amp;gt;&quot;;
    out.innerHTML = temp;
  }
  
  &amp;lt;/script&amp;gt;

  &amp;lt;style type=&quot;text/css&quot; media=&quot;screen&quot;&amp;gt;
  
  * {
    font-family: Arial;
  }
  body {background: #FBFBFB;border: 1px solid #F1F1F1;}
  
  #watch {
    border: 2px solid #CACACA;
    font-size: 20px;
    background: #F1F1F1;
    padding: 5px;
  }
  &amp;lt;/style&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The following command will build and run your app&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ phonegap build ios
$ open platforms/ios/NetworkTest.xcodeproj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That last command will launch &lt;strong&gt;XCode&lt;/strong&gt;. You can then run your app within XCode.&lt;/p&gt;

&lt;p&gt;To run the android emulator, use the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;phonegap run android
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/network-screen.png&quot; class=&quot;small&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Getting Started</title>
   <link href="http://thelogbox.com/phonegap-getting-started"/>
   <updated>2013-10-20T00:00:00+08:00</updated>
   <id>http://thelogbox.com/phonegap-getting-started</id>
   <content type="html">&lt;p&gt;PhoneGap development starts with preparing a project folder. Inside this folder, you will find files and sub folders. This project structure is a collection of specific files that PhoneGap needs to do its work. Inside it are build files, library files, the Apache Cordova middle ware and typical web components/files e.g. HTML, JavaScript, CSS and some image assets. It will be difficult and impractical to assemble them by hand that is why PhoneGap includes a CLI (Command Line Interface) with its SDK. &lt;/p&gt;

&lt;p&gt;The PhoneGap CLI (Command Line Interface) has a set of commands that allows you create, build and install mobile app projects. If you have a proper installation of the PhoneGap development environment, you should be able to execute &lt;em&gt;phonegap&lt;/em&gt; from the command line. In fact, it’s a good idea to test it now before you proceed any further, just to make sure that it really is working. &lt;/p&gt;

&lt;p&gt;Invoking &lt;em&gt;phonegap&lt;/em&gt; from cmd line displays its usage. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/phonegap-cli.png&quot; alt=&quot;The phonegap gap command&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see, there are lots of things we can do with it. We can create, build and install mobile app projects using this command. In this chapter, we will create our first project using the PhoneGap CLI. We won’t do anything with it just yet, we simply want to sample the feel of the  workflow and get acquainted with the process of creating, testing and building PhoneGap projects. Before the chapter is done, we would have created, built and tested a sample project in either an iOS simulator or an Android emulator.&lt;/p&gt;

&lt;p&gt;To create a project, get a terminal window (cmd.exe in Windows, Terminal.app in OSX, xterm in Linux)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/phonegap-create-project-windows.png&quot; alt=&quot;Project Creation. Windows&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Project Creation. Windows&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;If you are using either Linux or OSX, this is the set of command to follow&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/phonegap-create-project-osx.png&quot; alt=&quot;Project Creation. OSX&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Project Creation. OSX&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;The first time you execute the &lt;em&gt;create&lt;/em&gt; command, PhoneGap will try to pull some setup files and libraries from the internet, so you need to be connected while you are doing this.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;create&lt;/em&gt; command will produce a folder named &lt;strong&gt;first&lt;/strong&gt; in the current working directory, that folder contains things that are necessary for you to build a project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/phonegap-project-structure.png&quot; alt=&quot;PhoneGap Project&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Project Structure&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;You will find a folder called WWW on the root project directory. This WWW folder is where you will add HTML files, JavaScript, CSS and Images which will form part of the mobile application. We will take a look at them shortly.&lt;/p&gt;

&lt;p&gt;A this point, We will not introduce any code changes on the project at this point. We will simply compile, build and deploy the project. The default project created a basic HelloWorld app. You can compile and deploy that one right now.&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
$ phonegap build ios
$ open platforms/ios/HelloWorld.xcodeproj
&lt;/pre&gt;
&lt;div id=&quot;lst&quot;&gt; How To Build in OSX&lt;/div&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
$ phonegap run android
&lt;/pre&gt;
&lt;div id=&quot;lst&quot;&gt; How To Build and Run in Android&lt;/div&gt;

&lt;p&gt;I deployed the app quite differently in Android than I did in OSX. I could have used the command &lt;code class=&quot;codeblock&quot;&gt;$ phonegap run ios&lt;/code&gt; just like the process in Android. I did not. The reason is I did not want to use the &lt;em&gt;ios-sim&lt;/em&gt; software to view the application in the iOS simulator. I wanted to open the generated ios project and open it using XCode. I also wanted to use XCode to deploy the app in the simulator that came with XCode and not ios-sim. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/generic-phonegap-app.png&quot; class=&quot;shadow&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Firt App&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;h1 id=&quot;making-changes-to-indexhtml&quot;&gt;MAKING CHANGES TO INDEX.HTML&lt;/h1&gt;

&lt;p&gt;The WWW folder contains a default index.html. This HTML file was generated by the &lt;em&gt;phonegap create&lt;/em&gt; command. This is how it looks like out of the box.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;format-detection&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;telephone=no&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;css/index.css&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;PhoneGap&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;deviceready&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;blink&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;event listening&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Connecting to Device&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;event received&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Device is Ready&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;phonegap.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;js/index.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code above is what you saw on the welcome screen. You may use it as a baseline for your experimentation. But I think the default html file has lots of things we don’t need for now, so we will discard all of it and build a basic HTML file for our experiments.&lt;/p&gt;

&lt;p&gt;Open index.html using any programming editor of your choice. Replace it with a really basic HTML page.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My First App&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Because we made changes on the project source file, we need to go through another compilation and another deployment cycle. &lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
$ phonegap build ios
$ open platforms/ios/HelloWorld.xcodeproj
&lt;/pre&gt;
&lt;div id=&quot;lst&quot;&gt;OSX&lt;/div&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
$ phonegap run android
&lt;/pre&gt;
&lt;div id=&quot;lst&quot;&gt;Android&lt;/div&gt;

&lt;p&gt;You should see you first app after the deployment step. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/programming-workflow.png&quot; alt=&quot;Programming Workflow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/phonegap-empty-project.png&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;PhoneGap Project Folder Structure&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;h2 id=&quot;difference-from-desktop-app-or-web-app-programming&quot;&gt;Difference from Desktop App or Web App Programming&lt;/h2&gt;

&lt;h2 id=&quot;recap&quot;&gt;Recap&lt;/h2&gt;

&lt;p&gt;The basic workflow that you may find your self following is this.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a project using the PhoneGap CLI&lt;/li&gt;
  &lt;li&gt;Inside the project, make the changes to files inside the &lt;strong&gt;WWW&lt;/strong&gt; folder&lt;/li&gt;
  &lt;li&gt;Do a build either in Android, iOS or any platform you like&lt;/li&gt;
  &lt;li&gt;If you are using Android, you can test and deploy using the PhoneGap CLI — &lt;code&gt;phonegap run android&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;If you are on iOS, just build the project using &lt;code&gt;phonegap build ios&lt;/code&gt;, then do the testing, simulation and deployment using XCode&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Regardless of the platform you are targetting, you will make the code changes in the &lt;strong&gt;WWW&lt;/strong&gt; folder of PhoneGap, and the &lt;em&gt;www&lt;/em&gt; of either Android, iOS or WP7/8&lt;/p&gt;

&lt;h2 id=&quot;vocabulary&quot;&gt;VOCABULARY&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;PhoneGap CLI&lt;/li&gt;
  &lt;li&gt;XCode&lt;/li&gt;
  &lt;li&gt;Android Emulator&lt;/li&gt;
  &lt;li&gt;iOS Simulator&lt;/li&gt;
  &lt;li&gt;cmd - short for command, so if you see something like &lt;em&gt;cmd line&lt;/em&gt;, that means command line, which means do it from a terminal window.&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>iOS Setup</title>
   <link href="http://thelogbox.com/phonegap-development-environment-ios"/>
   <updated>2013-10-20T00:00:00+08:00</updated>
   <id>http://thelogbox.com/phonegap-development-environment-ios</id>
   <content type="html">&lt;p&gt;You need a Mac. The Apple® tools needed to build iOS applications runs only on Apple® hardware, lest you violate their TOS. Specifically, to build iOS apps using PhoneGap 3.0, you need an Intel based Mac and at least OSX 10.7 (Lion).&lt;/p&gt;

&lt;p&gt;The second thing you need is XCode®, at least version 4.5. Since OSX 10.7, XCode is no longer bundled on the installation DVD, you need to get it from the App Store. &lt;/p&gt;

&lt;p&gt;Once you have procured XCode, there is one more tiny thing to do. Download  the &lt;strong&gt;Command Line Tools&lt;/strong&gt;. To do that, launch XCode, go to &lt;em&gt;Preferences&lt;/em&gt; then click the &lt;em&gt;Downloads&lt;/em&gt; tab. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/xcode-pref.png&quot; alt=&quot;XCode Preferences&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Download the Command Line Tools. That will take a while. The size of the Command Line tools is quite hefty. Once the download is finished, launch the Terminal.app so we can quickly test if the tools are working. Run &lt;code class=&quot;codeblock&quot;&gt;clang --version&lt;/code&gt; or &lt;code class=&quot;codeblock&quot;&gt;gcc --version&lt;/code&gt;. If you did not get a &lt;em&gt;command not found&lt;/em&gt; error, chances are the tools are working.&lt;/p&gt;

&lt;p&gt;Now the XCode part is over, move on to the PhoneGap tool chain. &lt;/p&gt;

&lt;h1 id=&quot;tool-chain&quot;&gt;Tool Chain&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Node Package Manager&lt;/strong&gt;. You need the node packager manager to proceed. You can download it at the &lt;a href=&quot;http://nodejs.org&quot;&gt;NodeJS site&lt;/a&gt;. Another way of getting &lt;strong&gt;npm&lt;/strong&gt; is either via &lt;a href=&quot;http://brew.sh&quot;&gt;HomeBrew&lt;/a&gt; or &lt;a href=&quot;http://macports.org&quot;&gt;MacPorts&lt;/a&gt;, I personally use BREW. It is a good idea to setup the BREW package manager because you will use it to get other tools that we need for PhoneGap.&lt;/p&gt;

&lt;p&gt;When you are done with the npm installation, you can get the PhoneGap installers.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ npm install -g phonegap
$ npm install -g cordova
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;quick-test&quot;&gt;Quick Test&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir ~/workarea
$ cd ~/workarea
$ phonegap create first
$ cd first
$ phonegap build ios
$ open platforms/ios/first

[phonegap] detecting iOS SDK environment...
[phonegap] using the local environment
[phonegap] adding the iOS platform...
[phonegap] compiling iOS...
[phonegap] successfully compiled iOS app

$ open platforms/ios/HelloWorld.xcodeproj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that last command, XCode will launch and open the ios project generated by PhoneGap.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/xcode-helloworld.png&quot; alt=&quot;iOS HelloWorld&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Android Setup for OSX</title>
   <link href="http://thelogbox.com/phonegap-development-environment-android"/>
   <updated>2013-10-20T00:00:00+08:00</updated>
   <id>http://thelogbox.com/phonegap-development-environment-android</id>
   <content type="html">&lt;p&gt;This chapter will walk through the steps to setup an Android development environment. The Android SDK requires that a Java development environment and Apache Ant are installed. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setup the JDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Download &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/index.html&quot;&gt;the JDK&lt;/a&gt; from the Oracle site. More than likely it will be a &lt;em&gt;.dmg&lt;/em&gt; file. You can install that by simply double clicking.&lt;/p&gt;

&lt;p&gt;The path to Java executables will be taken cared of by the installer. The &lt;em&gt;java compiler&lt;/em&gt; and other command line utilities of the JDK will be automatically added to the system path.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setup Apache Ant&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Download the installer from &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant.apache.org&lt;/a&gt;. Look for the download section. Apache Ant can be downloaded either in source or binary form. We have no use for the source distribution for now. Just download the binary format. At the time of writing, there are three formats for binary distribution — &lt;em&gt;zip, tar.gz&lt;/em&gt; and &lt;em&gt;bz2&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;After the download is finished, choose directory where you will install &lt;em&gt;ant&lt;/em&gt;. For the purpose of this chapter, we will install it in a user directory. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/
$ mkdir progtools
$ cd progtools
$ cp ~/Downloads/apache-ant-1.9.2-bin.zip
$ unzip apache-ant-1.9.2-bin.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your version of ant might not be exactly &lt;em&gt;1.9.2&lt;/em&gt;, so substitute accordingly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setup Android SDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Download the SDK from &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;developer.android.com&lt;/a&gt;. The web page might display the &lt;em&gt;ADT&lt;/em&gt; bundle more prominently. It’s not the ADT we need. Find the link for “Existing IDE” &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/download-android-sdk.png&quot; alt=&quot;other IDE&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Copy the zipped file to your users directory just like what we did with Apache ant.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/progtools
$ cp ~/Downloads/android-sdk_r22.3-macosx.zip
$ unzip android-sdk_r22.3-macosx.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Setup the NodeJS Package Manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Node package manager is part of the &lt;strong&gt;NodeJS&lt;/strong&gt; installation. Download them from &lt;a href=&quot;http://nodejs.org&quot;&gt;nodejs.org&lt;/a&gt;. The downloaded package will most likely be in &lt;em&gt;pkg&lt;/em&gt; format. They can be installed by simply double clicking.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HomeBrew&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have performed the PhoneGap installation for iOS, then you have everything you need to install HomeBrew. Brew is a package management system for OSX, just like MacPorts and Fink. You can find instructions on how to install Brew at their website &lt;a href=&quot;http://brew.sh&quot;&gt;brew.sh&lt;/a&gt;. I’ve pasted the instruction in this section to save you time. To install Brew now, paste the following code in a terminal window&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Update the System Path&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Open your startup script for editing. It’s located at ~/.bash_profile. Add the following entries&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export ANT_HOME=~/progtools/apache-ant-1.9.2
export ANDROID_HOME=~/progtools/android-sdk_r22.3-macosx
export PATH=$PATH:$ANDROID_HOME/platform-tools:.
export PATH=$PATH:$ANDROID_HOME/tools:.
export PATH=$PATH:$ANT_HOME/bin:.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Quit the terminal then re-open it. This gives your startup script a chance to execute. From now on, all these PATH settings are available to you whenever you open a terminal window.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PhoneGap and Cordova Tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The last remaining pieces of the setup is to get both the PhoneGap and Cordova command line utilities. If your terminal window is still open, type these&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo npm install -g phonegap
$ sudo npm install -g cordova
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Android Manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Android SDK setup is not yet complete. You will need to download a lot more software and you will do so using the Android SDK Manager. From a terminal window, type &lt;strong&gt;android&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/android-manager.png&quot; alt=&quot;android manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At a minimum you will need to install the SDK tools, platform tools and a couple of API levels. It depends on what platform of Android you are targeting. If you want to develop for Jellybean, get API level 19, 18,17 and 16. Ice Cream Sandwich is API level 15 and Honeycomb is 13. Get the &lt;em&gt;SDK platform&lt;/em&gt; and the &lt;em&gt;ARM EABI system image&lt;/em&gt; for each API level that you choose. You need the system images for building the &lt;em&gt;android virtual device&lt;/em&gt; which you will use for testing later on.&lt;/p&gt;

&lt;p&gt;Select that packages that you need and click the &lt;em&gt;Install packages&lt;/em&gt; button. That may take a while.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test the Setup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a throw away project, then try to compile it using the PhoneGap CLI tools&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir ~/workarea
$ cd ~/workarea
$ phonegap create first
$ cd first
$ phonegap build android
$ cd platforms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An android project folder should have been created inside the platforms folder. This folder contains the necessary android project structure for testing and deployment.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Database Programming</title>
   <link href="http://thelogbox.com/phonegap-database-programming"/>
   <updated>2013-10-20T00:00:00+08:00</updated>
   <id>http://thelogbox.com/phonegap-database-programming</id>
   <content type="html">&lt;p&gt;There are two ways to persist data on PhoneGap. One is to use &lt;em&gt;local storage&lt;/em&gt; and the other, &lt;em&gt;WebSQL&lt;/em&gt;. Local Storage involves using a data structure that is similar to a dictionary. It has two columns. First column contains the key and the other has the value.  &lt;/p&gt;

&lt;p&gt;The other way to persist data is to use the WebSQL API. This is probably the techmique that most developers would use for providing database functionality in a PhoneGap platform because it is also the more popular. Most programmers have been taught/schooled in database programming using relational databases, that’s why SQL programming is almost a baseline capability for developers.&lt;/p&gt;

&lt;h1 id=&quot;websql&quot;&gt;Websql&lt;/h1&gt;

&lt;p&gt;WebSQL essentially is about issuing SQL commands against a SQLite3 databaseprogramming. If you haven’t used SQLite before, it is a lightweight desktop database. It’s a desktop database because it does not require a dedicated server side process unlike MySQL, Oracle or MS SQL Server — those things are called client-server databases.&lt;/p&gt;

&lt;p&gt;Databases are good for a wide variety of programming tasks, but mainly they excel for information management, specifically structured record management. An introduction to SQL is beyond the scope of this chapter, in fact, I made a very dangerous assumption that you already have a backround in basic database programming. If you feel you need an introduction to SQL or you need a refresher on it, &lt;a href=&quot;http://www.w3schools.com/sql/sql_intro.asp&quot;&gt;the SQL introduction&lt;/a&gt; of W3Schools.com might be a good place to start.&lt;/p&gt;

&lt;p&gt;Most database programs involves boiler plate codes — plumbing codes, so to speak. No matter what the database program is trying to do, it will always have to cover some generic steps e.g.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open a connection to the database&lt;/li&gt;
  &lt;li&gt;Create a database or connect to an existing one&lt;/li&gt;
  &lt;li&gt;Execute SQL statements in order Create, Read, Update or Delete some records&lt;/li&gt;
  &lt;li&gt;Close any connection that you opened&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the next sections, we will cover the syntax for these boiler plate codes and demonstrate their usage. Towards the end of the chapter, we will use the WebSQL API for a simple TODO list app.&lt;/p&gt;

&lt;h1 id=&quot;create-and-open-a-database&quot;&gt;Create and Open a Database&lt;/h1&gt;

&lt;p&gt;We will start with some basic codes that demonstrates how to create a database. We will also take a look at some ways on how we can test and debug our database codes without running the device emulator.&lt;/p&gt;

&lt;p&gt;Best to create a new PhoneGap project so we can try out some database coding. &lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

phonegap create db --name &quot;DbCodes&quot; --id com.thelogbox

&lt;/pre&gt;

&lt;p&gt;Go to the &lt;em&gt;WWW&lt;/em&gt; folder and edit &lt;em&gt;index.html&lt;/em&gt; so it looks like our sample code. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;utf-8&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;onload&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;tasks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbversion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbdisplayname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TasksDatabase&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;openDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dbname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbversion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbdisplayname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;WebSQL API use is okay&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;WebSQL API is not supported&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;theLogBox Code Sample&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Database&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;  
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;index.html&lt;/div&gt;

&lt;p&gt;The above code is a typical usage of the &lt;code class=&quot;codeblock&quot;&gt;openDatabase()&lt;/code&gt; API. The openDatabase function is a member of the &lt;em&gt;window&lt;/em&gt; object, hence you can write the statement as &lt;code class=&quot;codeblock&quot;&gt;window.openDatabase()&lt;/code&gt; — I did not have to do that anymore because the &lt;em&gt;window&lt;/em&gt; object has a global scope. &lt;/p&gt;

&lt;p&gt;There are 4 things you need to pass to the &lt;code&gt;openDatabase&lt;/code&gt; function, the database name, version, display name and size (in bytes). &lt;/p&gt;

&lt;aside&gt;

WebSQL is already part of PhoneGap 3.0. Access to the database feature is no longer via the plugin architecture. This is the reason why you don&#39;t have to put your codes inside the *deviceready* callback. This is also the reason why you can test your database codes using just a simple browser. There is no need to deploy it to a device or run it in an emulator.  

&lt;/aside&gt;

&lt;p&gt;If you are using the Chrome browser, you can use the &lt;strong&gt;Developer Tools&lt;/strong&gt; to inspect the datababase. As a web developer, it is in your best interest to be familiar with debugging and profiling tools — Google Chrome comes with such tools.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/chrome-dev-tools.png&quot; alt=&quot;Chrome Developer Tools&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Launch a browser and open the HTML file where you wrote the sample database code. You won’t see anything interesting just yet, we’ve just created the database, but let’s take a look under the hood. I hope you used Chrome for testing, because these coding and debugging exercises were all done using Google Chrome.  &lt;/p&gt;

&lt;p&gt;Once the page is in view, go to the &lt;em&gt;Developer Tools&lt;/em&gt; of Chrome, on the &lt;em&gt;Console&lt;/em&gt; tab, you should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/database-creation.png&quot; alt=&quot;Database Creation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That is the effect of the &lt;code&gt;console.log()&lt;/code&gt; code.  Anything you pass to the console.log function gets echoed to the &lt;em&gt;Console&lt;/em&gt; tab of the dev tools. This is quite a handy way of debugging. It is also less intrusive than the JavaScript &lt;em&gt;alert()&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now click the &lt;em&gt;Resources&lt;/em&gt; tab. You should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/phonegap/database-creation-resources.png&quot; alt=&quot;Database Creation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Under &lt;em&gt;WebSQL&lt;/em&gt; you can see that there is a newly created &lt;em&gt;tasks&lt;/em&gt; database. This means our code ran as expected. &lt;/p&gt;

&lt;p&gt;You can try to refresh the page or run the JavaScript code over and over, but it won’t create another &lt;em&gt;tasks&lt;/em&gt; database — if that was you were expecting. The &lt;code&gt;openDatabase&lt;/code&gt; command only creates a database file (&lt;em&gt;tasks.db&lt;/em&gt;, in our case) if that file does not exist yet. If the specififed database name does exist, the openDatabase function will simply return an object handle to the database so you can start using it. The &lt;code&gt;openDatabase()&lt;/code&gt; function is used both to create a not yet existing database file and to open an existing one.&lt;/p&gt;

&lt;h1 id=&quot;creating-tables&quot;&gt;Creating Tables&lt;/h1&gt;

&lt;p&gt;After creating a database, you need to create some tables inside it. The tables are the actual data structures that holds structured information. In this section, we will simply create a single table named TODO. This table will hold our todo items. &lt;/p&gt;

&lt;p&gt;You will notice that all of our codes are sequential. The codes to create the database is immediately followed by the table creation, which in turn is immediately followed by some commands that insert data into the table. In practice, this is rarely the case. The routine to create the database and the table will most likely be confined to a special routine that is executed only once. The routine to insert records into the table will most likely be written in a call back function that corresponds to a user-triggered action e.g. a button click. I have written the following example in a rather simplistic and unrealistic way to improve clarity of the code and so that we won’t get bogged down by detailed minutiae of event-handling.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;output&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;onload&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;tasks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbversion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbdisplayname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TasksDatabase&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;openDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dbname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbversion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbdisplayname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createErr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createOkay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;CREATE TABLE IF NOT EXISTS TODO (id INTEGER PRIMARY KEY AUTOINCREMENT, item TEXT UNIQUE)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;INSERT INTO TODO(item) VALUES(?)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Brush your teeth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;INSERT INTO TODO(item) VALUES(?)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Eat Vegetables&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;INSERT INTO TODO(item) VALUES(&amp;#39;Brush your teeth again&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createErr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Err # : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Err : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createOkay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Creation succeeded&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will use the &lt;em&gt;transaction()&lt;/em&gt; function if you want to issue commands to the database. The transaction function takes three parameters and all of them are callbacks. The first parameter is the name of a function that will be executed. This first callback usually contains the series of SQL commands you would like to execute. A database transaction context is passed along as a parameter to this function. You will use that transaction context to invoke the &lt;em&gt;executeSql()&lt;/em&gt; function which in turn contains the actual SQL commands.&lt;/p&gt;

&lt;p&gt;The second parameter is a callback which will only be invoked if an error will be encountered while executing your SQL commands. If and when this second callback is invoked, an &lt;em&gt;error&lt;/em&gt; object is passed along to the function as parameter. You can use this error object to debug and troubleshoot your code.&lt;/p&gt;

&lt;p&gt;The third parameter is called back after all the SQL commands have been executed and no errors have been encountered.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Android Programming Prerequisite</title>
   <link href="http://thelogbox.com/android-how-much-java-do-you-need"/>
   <updated>2013-10-20T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-how-much-java-do-you-need</id>
   <content type="html">&lt;p&gt;Before diving into Android programming, there are a couple of skills you might want to look at. It is possible to simply jump into programming, build some basic screens by copying example codes from the internet or from other programmers. But you cannot go to the deep end. When you find yourself neckdeep in the not-so-trivial parts of Android programming and you feel stuck, that’s probably because you haven’t covered some bases.&lt;/p&gt;

&lt;p&gt;The ideal set of skills to bring into Android development includes experience in AWT/Swing, JDBC, Collections, Network and Thread programming and a couple of others. But not many people will have this. For one reason, AWT and Swing went out of favor a long time ago. Most Java programmers right now have experience on web development but not desktop. &lt;/p&gt;

&lt;h2 id=&quot;object-oriented-concepts&quot;&gt;1. Object Oriented Concepts&lt;/h2&gt;

&lt;p&gt;The Android framework uses OOP heavily. You need to be comfortable with the idiomatic use of things like class/interface inheritance, polymorphism etc. Even the humble Hello World application in most Android textbooks involves the use inheritance. &lt;/p&gt;

&lt;h2 id=&quot;java-fundamentals&quot;&gt;2. Java fundamentals&lt;/h2&gt;

&lt;p&gt;You will need to be familiar with programming fundamentals in Java. Even if Android uses a different VM to run the apps, the language used for native apps development is Java. The more familiarity you have with basic programming concepts in Java, the better. You should at least know the concept of variables, constants, branching and looping, packaging and scope visibility, basic I/O and file persistence.&lt;/p&gt;

&lt;h2 id=&quot;java-collections&quot;&gt;3. Java Collections&lt;/h2&gt;

&lt;p&gt;Beyond simple variables, you will need some skills to handle collections of data. A basic familiarity with rudimentary data structures like arrays, maps and sets will be essential.&lt;/p&gt;

&lt;h2 id=&quot;java-event-model&quot;&gt;4. Java Event model&lt;/h2&gt;

&lt;p&gt;Android applications are heavy on user interaction. For the most basic applications, you might be able to get away by simply knowing how to put the click handler on XML file. But for other gestures like long clicks, swipe etc, you will need to write Java codes to handle the event. The Java event model uses listeners and callbacks quite a lot.&lt;/p&gt;

&lt;h2 id=&quot;xml&quot;&gt;5. XML&lt;/h2&gt;

&lt;p&gt;A passing familiarity wih XML structures and validation rules should take you quite far in Android programming. You don’t need to work much with XML programmatically. Your usual need for XML will arise when you define layouts and when configuring permissions for the app. If you have coded HTML before without using WYSIWYG tools, you should be fine.&lt;/p&gt;

&lt;h2 id=&quot;sql&quot;&gt;6. SQL&lt;/h2&gt;

&lt;p&gt;Some, if not most, of the applications you will make will need to store data. Some data might be simple and can be stored either via the preferences or the SD card. But some might need the facility of a relational database. The Android runtime includes the SQLite database. You will talk to it using the Structured Query Language. SQL is not a difficult language, its quite enjoyable to learn actually because of its declarative nature. It is almost English like.&lt;/p&gt;

&lt;h2 id=&quot;build-tools&quot;&gt;7. Build tools&lt;/h2&gt;

&lt;p&gt;An Android project is a compilation of various files e.g. XML, image resources, compiled byte codes, source codes etc. Getting all these resources to stick and work together cannot be done by hand, well actually it can be, but it will not be practical. That is why even the barebones SDK requires the use Apache Ant to help in compiling, building and deploying your applications. &lt;/p&gt;

&lt;h2 id=&quot;command-line-experience&quot;&gt;8. Command line experience&lt;/h2&gt;

&lt;p&gt;Even if you plan to use a full blown IDE like Eclipse, Android Studio or NetBeans, its not a bad idea to invest some time getting some skills on the command line. They might take a while longer to learn than their GUI counterparts but the effort will pay off. When you run into some problems on the IDE, your CLI skills might save you. You don’t need to be a ninja on the terminal, you can get by with some basics e.g. creating and deleting files, moving around directories, invoking ant scripts, using adb etc.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Database Programming with WebSQL</title>
   <link href="http://thelogbox.com/html5-database-programming"/>
   <updated>2013-10-18T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-database-programming</id>
   <content type="html">&lt;p&gt;There are two ways to persist data on HTML5. One is to use &lt;em&gt;local storage&lt;/em&gt; and the other, &lt;em&gt;WebSQL&lt;/em&gt;. Local Storage involves using a data structure that is similar to a dictionary. It has two columns. First column contains the key and the other has the value.  &lt;/p&gt;

&lt;p&gt;The other way to persist data is to use the WebSQL API. This is probably the technique that most developers would use for providing database functionality because it is also the more popular. Most programmers have been schooled in database programming using relational databases, that’s why SQL is almost a baseline capability for developers.&lt;/p&gt;

&lt;h1 id=&quot;websql&quot;&gt;WEBSQL&lt;/h1&gt;

&lt;p&gt;WebSQL essentially is about issuing SQL commands against a SQLite3 db. If you haven’t used SQLite before, it is a lightweight desktop database. It’s called  a  desktop database because it does not require a dedicated server side process unlike MySQL, Oracle or MS SQL Server — those things are called client-server databases.&lt;/p&gt;

&lt;p&gt;Databases are good for a wide variety of programming tasks, but mainly they excel for information management, specifically structured record management. An introduction to SQL is beyond the scope of this chapter, in fact, I made a very dangerous assumption that you already have a backround in basic database programming. If you feel you need an introduction to SQL or you need a refresher on it, &lt;a href=&quot;http://www.w3schools.com/sql/sql_intro.asp&quot;&gt;the SQL introduction&lt;/a&gt; of W3Schools.com might be a good place to start.&lt;/p&gt;

&lt;p&gt;[Maybe in the future version, I can have an Appendix on basic SQL tutorial]&lt;/p&gt;

&lt;p&gt;Most database programs involves boiler plate codes — plumbing codes, so to speak. No matter what the database program is trying to do, it will always have to cover some generic steps e.g.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open a connection to the database&lt;/li&gt;
  &lt;li&gt;Create a database or connect to an existing one&lt;/li&gt;
  &lt;li&gt;Execute SQL statements in order Create, Read, Update or Delete some records&lt;/li&gt;
  &lt;li&gt;Close any connection that you opened&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the next sections, we will cover the syntax for these boiler plate codes and demonstrate their usage. Towards the end of the chapter, we will use the WebSQL API for a simple TODO list app.&lt;/p&gt;

&lt;h1 id=&quot;create-and-open-a-database&quot;&gt;CREATE AND OPEN A DATABASE&lt;/h1&gt;

&lt;p&gt;You will need to create a practice HTML file to follow the exercises. If you are connected to the internet you can simply use either &lt;a href=&quot;http://jsfiddle.net&quot;&gt;JSFiddle.net&lt;/a&gt; or &lt;a href=&quot;http://jsbin.com&quot;&gt;JSBin.com&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;utf-8&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;onload&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;tasks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbversion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbdisplayname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TasksDatabase&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;openDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dbname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbversion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbdisplayname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;WebSQL API use is okay&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;WebSQL API is not supported&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;theLogBox Code Sample&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Database&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;  
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above code is a typical usage of the &lt;strong&gt;openDatabase()&lt;/strong&gt; function. This function is a member of the &lt;em&gt;window&lt;/em&gt; object, hence you can write the statement as &lt;strong&gt;window.openDatabase()&lt;/strong&gt; and it would have worked as well — I did not have to do that anymore because the &lt;em&gt;window&lt;/em&gt; object has a global scope, hence I don’t need to explicitly reference it anymore. &lt;/p&gt;

&lt;p&gt;There are 4 things you need to pass to the &lt;strong&gt;openDatabase&lt;/strong&gt; function, the database name, version, display name and size (in bytes). &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you are using the Chrome browser, you can use the &lt;strong&gt;Developer Tools&lt;/strong&gt; to inspect the datababase. As a web developer, it is in your best interest to be familiar with debugging and profiling tools — Google Chrome comes with such tools.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/html5/chrome-dev-tools.png&quot; alt=&quot;Chrome Developer Tools&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Launch a browser and open the HTML file where you wrote the sample database code. You won’t see anything interesting just yet, we’ve just created the database, but let’s take a look under the hood. I hope you used Chrome for testing, because these coding and debugging exercises were all done using Google Chrome.  &lt;/p&gt;

&lt;p&gt;Once the page is in view, go to the &lt;em&gt;Developer Tools&lt;/em&gt; of Chrome, on the &lt;em&gt;Console&lt;/em&gt; tab, you should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/html5/database-creation.png&quot; alt=&quot;Database Creation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That is the effect of the &lt;strong&gt;console.log()&lt;/strong&gt; code.  Anything you pass to the console.log function gets echoed to the &lt;em&gt;Console&lt;/em&gt; tab of the dev tools. This is quite a handy way of debugging. It is also less intrusive than the JavaScript &lt;em&gt;alert()&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now click the &lt;em&gt;Resources&lt;/em&gt; tab. You should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/html5/database-creation-resources.png&quot; alt=&quot;Database Creation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Under &lt;em&gt;WebSQL&lt;/em&gt; you can see that there is a newly created &lt;em&gt;tasks&lt;/em&gt; database. This means our code ran as expected. &lt;/p&gt;

&lt;p&gt;You can try to refresh the page or run the JavaScript code over and over, but it won’t create another &lt;em&gt;tasks&lt;/em&gt; database — if that was you were expecting. The &lt;strong&gt;openDatabase&lt;/strong&gt; command only creates a database file (&lt;em&gt;tasks.db&lt;/em&gt;, in our case) if that file does not exist yet. If the specififed database name does exist, the openDatabase function will simply return an object handle to the database so you can start using it. The &lt;strong&gt;openDatabase()&lt;/strong&gt; function is used both to create a not yet existing database file and to open an existing one.&lt;/p&gt;

&lt;h2 id=&quot;creating-tables&quot;&gt;Creating Tables&lt;/h2&gt;

&lt;p&gt;After creating a database, you need to create some tables inside it. The tables are the actual data structures that holds structured information. In this section, we will simply create a single table named TODO. This table will hold our todo items. &lt;/p&gt;

&lt;p&gt;You will notice that all of our codes are sequential. The codes to create the database is immediately followed by the table creation, which in turn is immediately followed by some commands that insert data into the table. In practice, this is rarely the case. The routine to create the database and the table will most likely be confined to a special routine that is executed only once. The routine to insert records into the table will most likely be written in a call back function that corresponds to a user-triggered action e.g. a button click. I have written the following example in a rather simplistic and unrealistic way to improve clarity of the code and so that we won’t get bogged down by detailed minutiae of event-handling.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;output&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;onload&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;tasks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbversion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbdisplayname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TasksDatabase&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;openDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dbname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbversion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbdisplayname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createErr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createOkay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;CREATE TABLE IF NOT EXISTS TODO (id INTEGER PRIMARY KEY AUTOINCREMENT, item TEXT UNIQUE)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;INSERT INTO TODO(item) VALUES(?)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Brush your teeth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;INSERT INTO TODO(item) VALUES(?)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Eat Vegetables&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;INSERT INTO TODO(item) VALUES(&amp;#39;Brush your teeth again&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createErr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Err # : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Err : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createOkay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Creation succeeded&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will use the &lt;em&gt;transaction()&lt;/em&gt; function if you want to issue commands to the database. The transaction function takes three parameters and all of them are callbacks. The first parameter is the name of a function that will be executed. This first callback usually contains the series of SQL commands you would like to execute. A database transaction context is passed along as a parameter to this function. You will use that transaction context to invoke the &lt;em&gt;executeSql()&lt;/em&gt; function which in turn contains the actual SQL commands.&lt;/p&gt;

&lt;p&gt;The second parameter is a callback which will only be invoked if an error will be encountered while executing your SQL commands. If and when this second callback is invoked, an &lt;em&gt;error&lt;/em&gt; object is passed along to the function as parameter. You can use this error object to debug and troubleshoot your code.&lt;/p&gt;

&lt;p&gt;The third parameter is called back after all the SQL commands have been executed and no errors have been encountered.&lt;/p&gt;

&lt;h2 id=&quot;executing-sql-commands&quot;&gt;Executing SQL commands&lt;/h2&gt;

&lt;h2 id=&quot;debugging-and-troubleshooting&quot;&gt;Debugging and Troubleshooting&lt;/h2&gt;

&lt;h2 id=&quot;putting-it-all-together-with-a-ui-example&quot;&gt;Putting it all together with a UI example&lt;/h2&gt;

</content>
 </entry>
 
 <entry>
   <title>Using Android Studio</title>
   <link href="http://thelogbox.com/android-studio"/>
   <updated>2013-07-22T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-studio</id>
   <content type="html">&lt;p&gt;We will use the &lt;em&gt;Android Studio&lt;/em&gt; for these examples. Android Studio is an IDE specifically designed for Android Development. It does the things that Eclipse + ADT does. It basically combined all the tools you use when working on an Android app.&lt;/p&gt;

&lt;p&gt;It is based on IntelliJ, so you know it has pedigree. You don’t need to switch to this IDE if you already are very comfortable with your current tool. Besides, at the time of writing, Android Studio is &lt;em&gt;Early Access&lt;/em&gt; release. Which means it has problems. You can check it out, but you probably won’t want to replace your primary development tool with it.&lt;/p&gt;

&lt;p&gt;You can find the &lt;a href=&quot;http://developer.android.com/sdk/installing/studio.html&quot;&gt;installer for Android Studio here&lt;/a&gt;. Once you have completed the download and ran the installer, you can launch it to create the first project.&lt;/p&gt;

&lt;p&gt;Choose &lt;em&gt;New Project&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/androidstudio-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you change the &lt;em&gt;Application Name&lt;/em&gt;, you will notice that the other fields are adjusted too. If you are happy with the &lt;em&gt;Project Location&lt;/em&gt;, you can keep the default folder setting. &lt;/p&gt;

&lt;p&gt;The &lt;em&gt;minimum required SDK&lt;/em&gt; means that your app is guaranteed to run on that android version. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/androidstudio-2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you checked the &lt;em&gt;Create custom launcher icon&lt;/em&gt; in the last screen, this screen will appear so you can tweak the settings a bit more.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/androidstudio-3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you chose to include an Activity in your project, you can choose which kind of Activity in this screen. For our purpose, choose a blank activity.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/androidstudio-4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The activity name in this screen will be the name of a Java class which &lt;em&gt;extends&lt;/em&gt; the Android Activity. class. The &lt;em&gt;layout_name&lt;/em&gt; is the name of the generated xml in &lt;em&gt;/res/layout/&lt;/em&gt;. You can change the appearance of your main Activity in this XML file.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/androidstudio-5.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you have completed the steps for creating a new project, &lt;em&gt;Gradle&lt;/em&gt; kicks in to high gear to create your project. Gradle is build system, like Maven or ANT. Don’t worry about the build system, this will be mostly invisible to you. You can mess with it later on when you are more familiar with Android Development.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/androidstudio-6.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You need to be connected to the internet when Gradle kicks in. It may download some files it needs to build your Android app. This might also take a while.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/androidstudio-7.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the &lt;em&gt;Project&lt;/em&gt; tab on the left side of the IDE to reveal the project structure. You can see the name of the project on the left side. You can drill down on the node to reveal the Java source file for your first Activity class.&lt;/p&gt;

&lt;p&gt;We are not going to make any modifications on the project for now. We just want to try it out. If you want to see this app on a device, plug an android device in your PC. Make sure that the device is properly setup for development — ensure that &lt;em&gt;USB Debugging&lt;/em&gt; is enabled on it. &lt;/p&gt;

&lt;p&gt;Click the &lt;em&gt;Run&lt;/em&gt; button. It’s the green arrow on the top section of the IDE&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/androidstudio-8.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You should be able to see the connected device in this screen. If you don’t see it, try quitting the Android Studio IDE and unplug/plug the Android device again. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/androidstudio-9.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can see the progress of the compilation and installation on watch window of the IDE&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/androidstudio-10.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can use the built-in Android Device monitor (which includes DDMS) to view all application and system logs.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/first-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At this point, you should see the &lt;em&gt;First&lt;/em&gt; application on your android device&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/first-2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s a very un-exciting, uninspired and beaten down to death &lt;em&gt;Hello World&lt;/em&gt;.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Objects with Different Speeds</title>
   <link href="http://thelogbox.com/html5-canvas-objects-with-different-speeds"/>
   <updated>2013-03-24T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-canvas-objects-with-different-speeds</id>
   <content type="html">&lt;p&gt;Most of the time, you will deal with more than one moving object inside the canvas, they might need to move at different speedss.  You could be tempted to set a different timer (setTimeout) for each box, that will be a mistake. You will mess up the timer of your canvas. The way to approach the problem of moving objects at different speed is to vary the pixel displacement of each individual object, rather than construct a timer for each object. &lt;/p&gt;

&lt;p&gt;The following example draws two boxes. Each box starts to fall from the top of the canvas, one moves at 5 pixels per refresh and the other moves at 8 pixels per refresh.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/tedhagos/gEjMD/embedded/result/&quot; class=&quot;button&quot;&gt;See the Demo&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
	
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;box2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;box2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;box2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt;
      
      &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;400&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Managing Complexity</title>
   <link href="http://thelogbox.com/html5-canvas-managing-complexity"/>
   <updated>2013-03-24T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-canvas-managing-complexity</id>
   <content type="html">&lt;p&gt;When you start working with non-trivial Canvas applications, you will need to deal with multiple objects, having multiple shapes moving at different speeds and having different locations in the canvas. If you try to manage them all procedurally, you will soon run into the problem of very confusing and hard to maintain codes. JavaScript is an object oriented programming language and it has decent data structures built-in, you can use them to tame the complexity of dealing with multiple objects.&lt;/p&gt;

&lt;p&gt;The following code sample allows the user to click inside the canvas. Each click produces a random shape e.g. circle, rectangle and square. The app constructs a random object on each click, which will then fall from the top of the canvas and eventually drops off the border.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/tedhagos/FYbwH/embedded/result/&quot; class=&quot;button&quot;&gt;See the Demo&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;watch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Stage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  
  &lt;span class=&quot;cm&quot;&gt;/* EVENT HANDLERS */&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mshape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mshape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Circle&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mshape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mshape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
  
  &lt;span class=&quot;cm&quot;&gt;/* UTILITY FUNCTION */&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redraw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    OBJECT TEMPLATE DEFINITIONS&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Stage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redraw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addShape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3 pixel displacement per redraw&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// acceleration constant&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;   
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;360&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
     
     &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;   
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The basic approach of the code above to abstract the whole canvas into an object &lt;strong&gt;function Stage()&lt;/strong&gt;, it also abstracts the shapes Box, Rectangle and Circle using the OOP idioms. The basic idea is that each time a shape is created, it is stored and managed inside an array. Each time the timer expires, it is the responsibility of the &lt;strong&gt;Stage&lt;/strong&gt; to process all the objects stored in the array then draw them to the canvas. The logic of drawing to the canvas was coded inside every shape object, so that when the &lt;strong&gt;Stage&lt;/strong&gt; calls the &lt;em&gt;draw()&lt;/em&gt; method against each shape that is processed,  it is oblivious to the details on how each shape should be drawn.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Handling Clicks</title>
   <link href="http://thelogbox.com/html5-canvas-handling-clicks"/>
   <updated>2013-03-24T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-canvas-handling-clicks</id>
   <content type="html">&lt;p&gt;To capture click events on the canvas, you will need to attach an event handler on the canvas itself, not the context. Since the canvas element is just like any other DOM element, attaching a click event to it is very straightforward. It can be done in any number of ways, the simplest is probably&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// SOME CODES&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// CLICK CODES&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The following code sample demonstrates how to trap the click event inside the canvas. It also showcases some capabilities of the canvas which makes the example a bit interesting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/tedhagos/wNxpG/1/embedded/result/&quot; class=&quot;button&quot;&gt;See the Demo&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;#mycanvas&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#CACACA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;#watch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;130%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
	
	&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;watch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mousex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mousey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mousepos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mouseoffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;mousex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;mousey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;mousepos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;X : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mousex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; | Y :&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mousey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mousepos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mousex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mousey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rgb(&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      
      &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mouseoffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mouseoffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;		
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;400&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;300&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		Time to get a new browser
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;watch&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		X: Y:
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The current location of mouse is given by &lt;strong&gt;event.clientX &amp;amp; event.clientY&lt;/strong&gt;. The sample code uses the current location of the mouse to draw the &lt;em&gt;X &amp;amp; Y&lt;/em&gt; of the rectangle. The &lt;em&gt;offset&lt;/em&gt; variable was used simply to reposition the top-left of the rectangle in order to coincide with tip of the mouse cursor.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Handling Collissions</title>
   <link href="http://thelogbox.com/html5-collission-detection-canvas"/>
   <updated>2013-03-23T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-collission-detection-canvas</id>
   <content type="html">&lt;p&gt;Collission detection inside the canvas needs to be managed by you. Everytime you update the location of any object, you will need to provide the programming logic to check if any of your canvas objects is colliding with any other object or if it is colliding with the bounds of the canvas.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
	
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;400&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This code sample basically moves the box object along the &lt;em&gt;y-axis&lt;/em&gt;. Notice that prior to the &lt;em&gt;clear-update-redraw&lt;/em&gt; operation, the bounds of the box is checked against the height of the canvas. If the box’s current &lt;em&gt;y-location&lt;/em&gt; plus the height of the box is less than the value of the canvas’ height, the animation continues, if not, then no action is taken. This gives the appearance that the box stops at the bottom of the canvas.&lt;/p&gt;

&lt;h2 id=&quot;refactor&quot;&gt;Refactor&lt;/h2&gt;

&lt;p&gt;You could make the codes a bit more modular if you move the programming logic of the collission detection away from the drawing logic.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
	
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isInCollission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isInCollission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;  
       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;400&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The function &lt;strong&gt;isInCollission()&lt;/strong&gt; takes a parameter (a box parameter) and checks if either the bottom or the right side of the box is in contact with either the right boundary or the floor of the canvas — of course you make it more robust by including codes that checks for collission on ceiling or the left side of the canvas, but that is left to you as an exercise.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Linear Movement</title>
   <link href="http://thelogbox.com/html5-moving-straight-line"/>
   <updated>2013-01-28T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-moving-straight-line</id>
   <content type="html">&lt;p&gt;The canvas is a basic drawing surface. Making things move in a canvas is very similar in process to &lt;a href=&quot;http://en.wikipedia.org/wiki/Flip_book&quot;&gt;flip-book&lt;/a&gt; or flick-book animation. The three things you will neeed to do in order to animate things are;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Update the location of the objects&lt;/li&gt;
  &lt;li&gt;Erase the canvas&lt;/li&gt;
  &lt;li&gt;Redraw the object&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To illustrate this basic concept, the next coding sample draws a box initially. A simple timer is provided by the &lt;strong&gt;setTimeout&lt;/strong&gt; function. Each time the timer is called, the &lt;em&gt;y&lt;/em&gt; position of the box is increased by 5 pixels. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
	
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;400&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;em&gt;speed&lt;/em&gt; of animation is not affected by number of milliseconds on the setTimeout function, rather, the speed is function of the number of pixels that is displaced on each frame refresh.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Animation, Circular Movement</title>
   <link href="http://thelogbox.com/html5-move-circular-path"/>
   <updated>2013-01-28T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-move-circular-path</id>
   <content type="html">&lt;p&gt;This should be the clock example.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Canvas Basics</title>
   <link href="http://thelogbox.com/html5-canvas-basics"/>
   <updated>2013-01-28T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-canvas-basics</id>
   <content type="html">&lt;p&gt;The canvas is a 2D drawing surface. If you ever used Microsoft Paint before, then you have an idea of what it is. It basically exposes the capability to draw into a surface using pixels — it is bitmapped.&lt;/p&gt;

&lt;p&gt;The idea is to draw a pixel at a specific location and then apply some colors into it. This is as close to the metal as you can get on canvas 2D, you need to manipulate each and every pixel of it in order to achieve some animations or some effects. &lt;/p&gt;

&lt;p&gt;The canvas element is declared as a child of the &lt;em&gt;body&lt;/em&gt; tag, like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ID=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;thecanvas&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;WIDTH=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;300&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;HEIGHT=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;300&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    If you can see this message, your browser does not
    support the HTML5 canvas. Get a new browser    
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If your browser is quite antiquated and not up to standards, you will see the warning message in between the canvas element’s start and end tags.&lt;/p&gt;

&lt;p&gt;For something interesting to happen, we need to do something inside the canvas, specifically we need to draw on its surface. The canvas API defines a lot of things that you can do on the surface e.g. draw some text, draw boxes curves and beziers, change the alpha values of pixel(s) etc. All these capabilities are exposed by HTML5 via JavaScript&lt;/p&gt;

&lt;h2 id=&quot;getting-the-programming-handle&quot;&gt;Getting the programming handle&lt;/h2&gt;

&lt;p&gt;You need to get to the &lt;strong&gt;2d&lt;/strong&gt; context, that is the drawing surface, not the canvas DOM element. The context can be obtained by calling the &lt;em&gt;getContext()&lt;/em&gt; method of canvas element.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;canvasname&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;primitive-drawings&quot;&gt;Primitive drawings&lt;/h2&gt;

&lt;p&gt;The canvas API defines some drawing primitives that you can use as building blocks for your animations. It defines rectangles, arcs, text and lines to name a few.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;context.fillRect(x,y,width,height)&lt;/strong&gt; - draws a rectangle object. The first two parameters are the location of the top and left of the rectangle, respectively; the width and height parameters are quite obvious.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;x &amp;amp; y&lt;/em&gt; location of the object is relative to the top-left location of the canvas and not the web page. The coordinate system of the canvas is similar to the cartesian plane — actually, the fourth quadrant of the cartesian plane. The top-left coordinate of the canvas is at &lt;strong&gt;0,0&lt;/strong&gt;; 1 unit of movement on the canvas is 1 pixel, that is, coordinate &lt;strong&gt;1,1&lt;/strong&gt; means x is 1 pixel down and y is 1 pixel to the right. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;context.fillText(String, x, y)&lt;/strong&gt; - draws a text on the canvas. The first parameter is the text of the string to be drawn. The second and third parameters gives the location on where to draw the text.&lt;/p&gt;

&lt;h3 id=&quot;lines&quot;&gt;Lines&lt;/h3&gt;

&lt;p&gt;Drawing lines is a bit different, you will need to make some extra calls on the context for positioning the line and then finally drawing the line.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;canvasname&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Before you can start drawing into a path, you will need to call the &lt;strong&gt;beginPath()&lt;/strong&gt; method, note that this this is used not only for drawing lines but for others shapes as well like arcs, beziers and quadratic curves. The example above starts the line drawing at 10,10 and and ends at 10,100 — it will draw a vertical line.&lt;/p&gt;

&lt;h3 id=&quot;circles&quot;&gt;Circles&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;canvasname&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;beginAngle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;endAngle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;360&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clockwise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clockwise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There is no drawing primitive for drawing a complete circle, you would have to do that by drawing arcs. Try to experiment by making the &lt;strong&gt;endAngle&lt;/strong&gt; less than 360 degrees.&lt;/p&gt;

&lt;h2 id=&quot;erasing-the-canvas&quot;&gt;Erasing the canvas&lt;/h2&gt;

&lt;p&gt;You can simply overwrite the canvas with a call to &lt;em&gt;fillRect&lt;/em&gt;, that will write over it or you can call &lt;strong&gt;context.clearRect(top,left,height,width)&lt;/strong&gt; &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;canvasname&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// CANVAS OPERATIONS&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You have to clear the canvas starting from the top-left, which is 0,0, then specify the width and height of the canvas. You can get the dimensions of canvas using the canvas DOM element, the height and width are properties of the DOM element.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Acceleration</title>
   <link href="http://thelogbox.com/html5-canvas-acceleration"/>
   <updated>2013-01-28T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-canvas-acceleration</id>
   <content type="html">&lt;p&gt;Making objects fall inside the canvas is pretty straightforward. You simply need to move the object along the &lt;em&gt;y-axis&lt;/em&gt; of the canvas. Each time you redraw the frame, incrase the &lt;em&gt;y position&lt;/em&gt; of the object.&lt;/p&gt;

&lt;p&gt;To make the fall a bit more realistic, you need to add some acceleration. Speed of the object is simply the number of pixels displaced on every refresh. To accelerate the object, you need to increase the speed on every refresh. This code sample demonstrates basic acceleration of a falling object.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/tedhagos/HXsxa/embedded/result/&quot; class=&quot;button&quot;&gt;See the Demo&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
	
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isInCollission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acceleration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isInCollission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;  
       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acceleration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mycanvas&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;400&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Tools and Requisite Knowledge</title>
   <link href="http://thelogbox.com/html5-what-you-will-need"/>
   <updated>2013-01-27T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-what-you-will-need</id>
   <content type="html">&lt;p&gt;Working with HTML5 does not require much. You can get by with the tools you probably already have — an HTML5 compliant browser, a programmer’s editor or any text editor for that matter and a good internet connection.&lt;/p&gt;

&lt;p&gt;Some tools are better than others but tooling is a highly debatable question, at the end of the day go with what you are most comfortable with. Sometimes, you may have not have a say on the tools because they have already been picked for you — by a tech lead, a client or your company standards. &lt;/p&gt;

&lt;p&gt;Having said that, here are some suggestions.&lt;/p&gt;

&lt;p&gt;Get Google Chrome and FireFox. IE10 and Safari works too. I cannot specify the versions because a month from now, that will be outdated information. I will encourage you instead to test your browser by going to &lt;a href=&quot;http://html5test.com/&quot;&gt;HTML5Test.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Get a decent programmer’s editor. One that supports code folding, syntax coloring and customizable keys. You can get started with NotePad but that was not designed to be a programmer’s editor. There are many reasons but the biggest for me is that it won’t help me manage tab spaces and pairing of curly braces — if you try to code with it long enough I am sure you will have your own reason. NotePad++ is not a bad choice to start with, Sublime Text2 is also a good one. Vim or any of it’s variant (GVim, MacVim etc) are excellent choices. That list should you get started for now until you have developed your own personal preferences for programmer’s editor.&lt;/p&gt;

&lt;p&gt;Try considering some online code editors like &lt;a href=&quot;http://jsfiddle.net&quot;&gt;JSFiddle.net&lt;/a&gt; and &lt;a href=&quot;http://jsbin.com&quot;&gt;JSBin.com&lt;/a&gt;. If you have a reliable internet connection they are excellent coding tools for learning purposes.&lt;/p&gt;

&lt;h1 id=&quot;other-things-you-need&quot;&gt;OTHER THINGS YOU NEED&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;A background in earlier versions of HTML.&lt;/strong&gt; If you are attending a training, a workshop or a class, this will most likely be covered in a review session — it’s not terribly difficult&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A willingness to learn JavaScript.&lt;/strong&gt; A lot of features of HTML5 responsible for the noise it is making is its API — you need JavaScript to take advantage of those APIs&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References, lots of it.&lt;/strong&gt; The markup and the new language structure of HTML5 may not be daunting but you might get stuck on the other APIs like WebSocket, Canvas, WebGL, GEOLocation, just to name a few&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A teacher.&lt;/strong&gt; If you can afford to go to a paid session, that is best because (presumably) there is a learning plan laid it for you so you can move in the direction of skill and competence with little delays. You can economise on time which would otherwise be squandered if you tried the experimentations yourself. If you cannot attend classes and are forced to self study, at least try to find a support group where you can throw questions (and hopefully contribute also) and get some programming tips.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;REFERENCES&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.html5rocks.com&quot;&gt;HTML5Rocks&lt;/a&gt; - Online resource. Free tutorials&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3schools.com/html/html5_intro.asp&quot;&gt;W3CSchools&lt;/a&gt; - Online resource. Free tutorials&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Learning HTML5 Game Programming&lt;/strong&gt;, Jamie L. Williams Addison Wesley, 2011&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;JavaScript, the definitive guide&lt;/strong&gt;, David Flanagan, O’Reilly&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Modern JavaScript, Develop and Design&lt;/strong&gt;,  Larry Ullman, O’Reilly&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;JavaScript Patterns&lt;/strong&gt;, Strojan Stephanov, O’Reilly&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;JavaScript, The Good Parts&lt;/strong&gt;,  Douglas Crockford, O’Reilly&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Foundation HTML5 Canvas&lt;/strong&gt;,  Rob Hawkes, O’Reilly&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;HTML5 Canvas&lt;/strong&gt;, O’Reilly&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Markup Basics</title>
   <link href="http://thelogbox.com/html5-markup-basics"/>
   <updated>2013-01-27T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-markup-basics</id>
   <content type="html">&lt;p&gt;A markup is something that you add to plain text to alter its presentation, either on print or on screen. For the older audience, you probably could remember WordStar — when you use CTRL-B to give instruction to the printer to render it in &lt;strong&gt;bold face&lt;/strong&gt;, that was a markup instruction. &lt;/p&gt;

&lt;p&gt;An HTML file is text file, more specifically a marked up text file. The markup instructions are called &lt;em&gt;tags&lt;/em&gt;, sometimes they are also referred to as &lt;em&gt;*HTML elements&lt;/em&gt; or elements for short, so we will start using those terms already. The tags are meant to be understood by web browsers, each tag defined in the HTML standard language means something to the browser. In order to use the markups effectively, you need to know what the tags are supposed to do.&lt;/p&gt;

&lt;p&gt;HTML is a language, but not in a way like JavaScript or Java or C is a language. It is a markup language, it has structures and rules that you need to observe. &lt;/p&gt;

&lt;h1 id=&quot;basic-structure&quot;&gt;Basic structure&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &amp;lt;html&amp;gt; element is the outermost element in a document, there can only be one pair of this element inside an HTML source file. There are two elements that can be nested inside the html tag, the &lt;strong&gt;&amp;lt;head&amp;gt;&lt;/strong&gt; and the &lt;strong&gt;&amp;lt;body&amp;gt;&lt;/strong&gt; elements.&lt;/p&gt;

&lt;p&gt;All the visible things that you want to show on an HTML page goes to the body element. For example, ordered lists, un-ordered lists, headings, paragraphs, tables.&lt;/p&gt;

&lt;p&gt;Things written inside the head element will not be visible on the HTML page. That is not to say they are less important. Some of the things you may find on the head element are script–for embedding Javascript codes, link–for CSS amongst other things, title etc. &lt;/p&gt;

&lt;p&gt;You probably noticed that the tags came in pair. The opening &amp;lt;body&amp;gt; tag is paired with the closing &amp;lt;/body&amp;gt; tag. It is important to remember that HTML markup always (almost) comes in pairs, lest, you will have some unpredictable results.&lt;/p&gt;

&lt;h2 id=&quot;doctype&quot;&gt;DOCTYPE&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/em&gt; is not the same as the other tags, it is an instruction to the processor (the web browser) that contains which version of HTML the document is using. This declaration is necessary because there is more than one version of HTML. The HTML technology has been evolving for the past two decades. The current version of HTML is 5, but it doesn’t mean that all web pages are now using HTML version 5. Some web pages are still coded using previous versions of HTML, that is the reason why the browser needs to know which version it is dealing with. &lt;/p&gt;

&lt;h2 id=&quot;versions-of-html&quot;&gt;Versions of HTML&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;HTML - 1991&lt;/li&gt;
  &lt;li&gt;HTML+ - 1993&lt;/li&gt;
  &lt;li&gt;HTML 2.0 - 1995 &lt;/li&gt;
  &lt;li&gt;HTML 3.2 - 1997 &lt;/li&gt;
  &lt;li&gt;HTML 4.01 - 1999 &lt;/li&gt;
  &lt;li&gt;XHTML 1.0 - 2000&lt;/li&gt;
  &lt;li&gt;HTML5 - 2012&lt;/li&gt;
  &lt;li&gt;XHTML5 - 2013&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.w3schools.com/html/html_intro.asp&quot; title=&quot;HTML Versions&quot;&gt;W3C&lt;/a&gt; site maintains an up to date list of HTML versions.&lt;/p&gt;

&lt;p&gt;The way to declare a DOCTYPE in HTML 5 is &amp;lt;!DOCTYPE html&amp;gt;, you can already use this now. It wasn’t always this simple to declare a DOCTYPE, the previous versions of HTML required some pretty involved and almost cryptic entries for this. Fortunately, current browsers will look at the HTML5 DOCTYPE and switch to standards mode, this method of doctype declaration can already be used. What this means is that the HTML5 pages you will write today can last for a very long time.&lt;/p&gt;

&lt;p&gt;There are other ways to declare DOCTYPE for the other versions of HTML, &lt;a href=&quot;http://www.w3schools.com/tags/tag_doctype.asp&quot; title=&quot;DOCTYPE declarations&quot;&gt;W3C keeps an updated page information on doctypes&lt;/a&gt; if you need some historical reference.&lt;/p&gt;

&lt;h1 id=&quot;common-tags&quot;&gt;Common tags&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&amp;lt;h1&amp;gt; - Heading, the most important and most emphasised of the all heading tags&lt;/li&gt;
  &lt;li&gt;&amp;lt;h2&amp;gt; - another heading, less important than &amp;lt;h1&amp;gt; but more important than;&lt;/li&gt;
  &lt;li&gt;&amp;lt;h3&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;strong&amp;gt; - display something in bold face&lt;/li&gt;
  &lt;li&gt;&amp;lt;em&amp;gt; - display something in italics (emphasised)&lt;/li&gt;
  &lt;li&gt;&amp;lt;ol&amp;gt; - display a list, a numbered (ordered) one&lt;/li&gt;
  &lt;li&gt;&amp;lt;ul&amp;gt; - another list, but an unordered one. It doesn’t have numbers before the items, they just display dots or squares&lt;/li&gt;
  &lt;li&gt;&amp;lt;li&amp;gt; - this is an item on a list. You have to use this inside an ordered list or an unordered list, it will be meaningless if written outside &lt;em&gt;ol&lt;/em&gt; or &lt;em&gt;ul&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;p&amp;gt; - a paragraph break&lt;/li&gt;
  &lt;li&gt;&amp;lt;br&amp;gt; - a line break&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;GOOD TO KNOW&lt;/strong&gt;: HTML is not case sensitive but it’s a good idea to write the tags in lowercase. The World Wide Web Consortium (W3C) &lt;em&gt;recommends&lt;/em&gt; lower in HTML4 and &lt;strong&gt;demands&lt;/strong&gt; lowercase in XHTML.&lt;/p&gt;

&lt;h1 id=&quot;attributes&quot;&gt;Attributes&lt;/h1&gt;

&lt;p&gt;Sometimes tags are not written plainly as a word enclosed in a pair of &amp;lt; &amp;gt; like &amp;lt;h1&amp;gt;. Sometimes they contain some additional information about the HTML element. This additional information is called an attribute. &lt;/p&gt;

&lt;p&gt;For example, in the tag &lt;em&gt;&amp;lt;a href=”http://thelogbox.com”&amp;gt;thelogbox&amp;lt;a&amp;gt;&lt;/em&gt; — &lt;em&gt;*a&lt;/em&gt; is the tag used to denote a hyperlink, it will make you jump to another location.  The jump can to a location on the same document, to a location on a completely new document on the same domain or to a new document on another domain. The &lt;em&gt;href&lt;/em&gt; is the attribute, it tells the hyperlink tag where exactly to jump.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GOOD TO KNOW&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There are lots of elements that can have attributes&lt;/li&gt;
  &lt;li&gt;Attributes are always written on the opening tag&lt;/li&gt;
  &lt;li&gt;Attributes are a dictionary pair, it’s a got a key (href) and a value (http://thelogbox.com), like in our example&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;exercise&quot;&gt;Exercise&lt;/h1&gt;

&lt;p&gt;Create a simple HTML file, like the one below. Name it first.html&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    The quick brown fox
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;jumped&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; over the head of the
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;em&amp;gt;&lt;/span&gt;lazy dog&lt;span class=&quot;nt&quot;&gt;&amp;lt;/em&amp;gt;&lt;/span&gt; near the river bank
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Open the file in your browser. You can simple double click the file in Explorer (Windows) or Finder (OSX). The &lt;em&gt;.html&lt;/em&gt; extension will usually open the file in the default browser.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Omit the ending tag of &lt;em&gt;h1&lt;/em&gt;, refresh the browser. See what happens, then put ending &lt;em&gt;h1&lt;/em&gt; tag again&lt;/li&gt;
  &lt;li&gt;Omit the ending &lt;em&gt;body&lt;/em&gt; tag, see what happens&lt;/li&gt;
  &lt;li&gt;Add an ordered list to your HTML file, place it right before the  closing &lt;em&gt;body&lt;/em&gt; tag &lt;/li&gt;
  &lt;li&gt;Make &lt;strong&gt;Hello World&lt;/strong&gt; a hyperlink to &lt;strong&gt;Google.com&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Introduction</title>
   <link href="http://thelogbox.com/mobile-app-development-phonegap"/>
   <updated>2013-01-25T00:00:00+08:00</updated>
   <id>http://thelogbox.com/mobile-app-development-phonegap</id>
   <content type="html">&lt;p&gt;These notes were lifted from lesson plans. They have undergone quite a few changes chiefly because of the changes from PhoneGap 2.0 to 3.0. &lt;/p&gt;

&lt;p&gt;My name is Ted Hagos. I work for RenditionDigital Inc. It is an outsourcing company that is involved heavily in software development. I hold a technical management position. I also teach. I taught at Asia Pacific College, IBM Advance Career Education and Ateneo ITI. That’s probably what you need to know about the author of this work.&lt;/p&gt;

&lt;p&gt;There is side navigation bar on this mini site. Use them as you would a &lt;strong&gt;table of contents&lt;/strong&gt; in a book. I tried to organize them as such. The side bar is organized sequentially. You can get the most information by following this sequence.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Netbeans development environment</title>
   <link href="http://thelogbox.com/developing-with-netbeans"/>
   <updated>2013-01-21T00:00:00+08:00</updated>
   <id>http://thelogbox.com/developing-with-netbeans</id>
   <content type="html">&lt;h2 id=&quot;environment-setup&quot;&gt;Environment setup&lt;/h2&gt;

&lt;p&gt;Make sure you have already installed the ANDROID SDK and that you have properly configured the PATHs to tools and platform-tools. Make sure also that you have properly installed and configured Apache ANT.&lt;/p&gt;

&lt;p&gt;Download Netbeans from &lt;a href=&quot;http://netbeans.org&quot;&gt;netbeans.org&lt;/a&gt;, install it. The installation is straightforward, just follow the prompts. &lt;/p&gt;

&lt;h3 id=&quot;install-the-nbandroid-plugin&quot;&gt;Install the NBAndroid plugin&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Open Netbeans, go to &lt;strong&gt;Tools&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Go to &lt;strong&gt;Plugins&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Go to &lt;strong&gt;Settings&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Add&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Put whatever you like on &lt;em&gt;Name&lt;/em&gt; field, I suggest NBAndroid&lt;/li&gt;
  &lt;li&gt;Put http://kenai.com/projects/nbandroid/downloads/download/updatecenter/updates.xml on the URL. This URL might change in the future, when that happens, visit the &lt;a href=&quot;http://kenai.com/projects/nbandroid/pages/Install&quot;&gt;Kenai/NBAndroid/Wiki&lt;/a&gt;, I’m sure they will do a better job of keeping URLs updated than I will&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;Android&lt;/strong&gt; option should now be visible from the &lt;em&gt;Available&lt;/em&gt; plugins tab — if it does not show up, try to &lt;em&gt;reload the catalog&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Continue with the installation of the plugin&lt;/li&gt;
  &lt;li&gt;Go to &lt;strong&gt;Tools&lt;/strong&gt; then &lt;strong&gt;Options&lt;/strong&gt;, click the &lt;em&gt;Android&lt;/em&gt; tab. Fill in the location of the folder (dir) where you installed the Android SDK. Click Ok when you’re done&lt;/li&gt;
  &lt;li&gt;You will see the &lt;em&gt;android&lt;/em&gt; option when you create a new project&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;creating-a-project&quot;&gt;Creating a project&lt;/h2&gt;

&lt;p&gt;On the menu bar, click &lt;strong&gt;File&lt;/strong&gt; → &lt;strong&gt;New Project&lt;/strong&gt;, Choose &lt;em&gt;Android&lt;/em&gt; then &lt;em&gt;Android Test project&lt;/em&gt;. Fill in the project name, project location, set it as main project.&lt;/p&gt;

&lt;p&gt;Fill up the package name. The package name is usually a reverse DNS notation of your domain, say &lt;em&gt;com.thelogbox&lt;/em&gt;, it doesn’t have to exist so you can put whatever you want. Fill up also the name of your main activity class. Think of an Activity class as the main(first) user interface that your users will see on your application. Click &lt;strong&gt;Finish&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;p&gt;Compile the project (Build project in netbeans). This is on the &lt;strong&gt;Run&lt;/strong&gt; menu. When the build is successful, run the project (F11 is the key), this is also under the &lt;strong&gt;Run&lt;/strong&gt; menu.&lt;/p&gt;

&lt;p&gt;Netbeans will ask you to setup an AVD (Android Virtual Device), it is an emulator where you can run and test your Android projects. There are more instructions on how to create an manage AVDs on the [developer.android.com/devices] page.&lt;/p&gt;

&lt;h2 id=&quot;testing-with-physical-devices&quot;&gt;Testing with Physical Devices&lt;/h2&gt;

&lt;p&gt;There are two parts to testing the physical devices. First, you must have correctly setup the USB configuration of the Android physical device on your platform. The other part is how to tell Netbeans that you want to use the physical device instead of the AVD.&lt;/p&gt;

&lt;p&gt;If you are using OSX, you don’t have to do anything but to simply enable USB debugging on your physical device then plug it in.If you are using Windows or Linux for development, you need to read &lt;a href=&quot;http://developer.android.com/tools/device.html&quot;&gt;how to setup a device for development&lt;/a&gt; on the Android developer site.  &lt;/p&gt;

&lt;p&gt;Netbeans automatically launches the configured AVD when you click &lt;strong&gt;Run&lt;/strong&gt;, at least on Netbeans 7.1 that is how it behaved. In order to use the android physical device as a target of the build, you need to.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open the Android project you just created&lt;/li&gt;
  &lt;li&gt;From the &lt;em&gt;Projects&lt;/em&gt; tab, right click on the main android project&lt;/li&gt;
  &lt;li&gt;Choose &lt;em&gt;Properties&lt;/em&gt; (there are some pictures below)&lt;/li&gt;
  &lt;li&gt;Choose the &lt;strong&gt;Run&lt;/strong&gt; option (there are some pictures below)&lt;/li&gt;
  &lt;li&gt;The &lt;em&gt;Target Device&lt;/em&gt; is setup to &lt;strong&gt;Automatic&lt;/strong&gt;, you need to change that to &lt;strong&gt;Manual&lt;/strong&gt; so that you can choose the physical device attached when you &lt;em&gt;Build/Run&lt;/em&gt; your project&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want to automatically deploy to the attached physical device &lt;em&gt;always&lt;/em&gt;, then just remove all the AVD definitions on the &lt;em&gt;Android SDK and AVD manager&lt;/em&gt;. After that, you can set the &lt;strong&gt;Target Device&lt;/strong&gt; to Automatic on the Netbeans Run options&lt;/p&gt;

&lt;h3 id=&quot;netbeans-project-properties&quot;&gt;Netbeans Project Properties&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;../img/netbeans-properties.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;netbeans-project-propertiesrun&quot;&gt;Netbeans Project Properties::Run&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;../img/netbeans-project-properties-run.png&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.android.com/tools/devices/managing-avds.html&quot;&gt;developer.android.com/AVD&lt;/a&gt; - Managing AVDs. Google, 2013&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.android.com/tools/device.html&quot;&gt;developer.android.com/tools/device&lt;/a&gt; - Setting up USB devices for Android testing. Google, 2013&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Event Handling</title>
   <link href="http://thelogbox.com/android-event-handling-overview"/>
   <updated>2013-01-18T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-event-handling-overview</id>
   <content type="html">&lt;p&gt;User Interfaces usually contains views e.g. Buttons that users may activate. When these views are triggered, you will need a way to react to this event. This programming skill is called event handling.&lt;/p&gt;

&lt;p&gt;There are two ways to handle events in Android. You can do it from within the XML file, this is called declarative event handling. The second method is programmatic which involves writing callback methods — they are called listeners — then writing codes inside the call backs. &lt;/p&gt;

&lt;p&gt;This chapter explores the two ways of handling event. We will go a bit deeper into each method in the succeeding chapters.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;To follow the examples, it will be best if you create a new Android project. I hope by now you are already proficient in creating projects using the SDK tools, like we did on &lt;a href=&quot;/android-getting-started&quot;&gt;Getting Started Chapter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you already have a project, work on the &lt;em&gt;main.xml&lt;/em&gt;. This file was generated when you created the project. Add a Button view in the main.xml file &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Click me okay&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:onClick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;showMe&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;/res/layout/main.xml&lt;/div&gt;

&lt;p&gt;What’s new in this code is &lt;em&gt;onClick&lt;/em&gt; attribute. When you add this to a view element, it adds event handling capability to your app. The value of the attribute in our example is &lt;strong&gt;showMe&lt;/strong&gt;. This the method that the app will invoke when the user clicks on the button. It is your responsibility to implement this method.&lt;/p&gt;

&lt;p&gt;To implement the &lt;strong&gt;showMe&lt;/strong&gt; callback, you need to add a method inside the Activity class — the one associated with &lt;em&gt;main.xml&lt;/em&gt; where the Button is defined. This method has to be &lt;em&gt;void&lt;/em&gt; and must accept a &lt;em&gt;View&lt;/em&gt; object as a parameter.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;showMe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// your code for the click&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// event here&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;/src/com/thelogbox/MyActivity.java&lt;/div&gt;

&lt;p&gt;This is called &lt;em&gt;declarative&lt;/em&gt; event handling in Android because you use the XML to declare the handler (the showMe method) for the button. This works well and is quite friendly for beginning Android programmers. &lt;/p&gt;

&lt;p&gt;This approach to event handling does have one shortcoming, it can only handle the &lt;em&gt;click&lt;/em&gt; event. Other Android such as long-clicks, context-menus, touch etc, cannot be handled declaratively. To do those, you need to know how to handle events programmatically.&lt;/p&gt;

&lt;p&gt;You will need to learn how to work with &lt;em&gt;Listeners&lt;/em&gt;. &lt;/p&gt;

&lt;h2 id=&quot;input-events&quot;&gt;Input Events&lt;/h2&gt;

&lt;p&gt;Input events from the user are triggered when he touches widgets like Buttons and TextViews. A lot of Android widgets inherits the &lt;em&gt;android.view.View&lt;/em&gt; class either directly or indirectly. This is a good reason to be aware of the View’s built-in listeners.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;Listener&lt;/em&gt; is a special object designated by Android. It contains callback methods which the Android runtime invokes when a specific event happens. &lt;/p&gt;

&lt;p&gt;To intercept the &lt;em&gt;click&lt;/em&gt; event for example, you need to create a &lt;em&gt;Listener&lt;/em&gt; object that was specifically designed to listen for click events. That would be the &lt;em&gt;android.view.View.OnClickListener&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;The OnClickListener is implemented as a nested class inside android.view.View. There are many Listener interfaces that nested inside the View class, you can refer to the &lt;a href=&quot;http://developer.android.com/reference/android/view/package-summary.html&quot;&gt;android.developer/documentation&lt;/a&gt; for the details. &lt;/p&gt;

&lt;p&gt;User input like a long-click, should be handled using the &lt;strong&gt;android.view.View.OnLongClickListener&lt;/strong&gt;, if the user pops up the keyboard and you want to intercept the keystrokes – you use the  &lt;em&gt;OnKeyListener&lt;/em&gt;; you get the idea by now. Go through the official documentation that was pointed earlier if you need to go through deeper details of the API. &lt;/p&gt;

&lt;h2 id=&quot;programmatic-event-handling&quot;&gt;Programmatic Event Handling&lt;/h2&gt;

&lt;p&gt;To handle a click event, you need to create a listener object (View.OnClickListener) then register the widget of interest (a Button probably) to the listener. This is how the Android runtime will know that when a click happens to the Button, the runtime needs to invoke  the &lt;strong&gt;public void onClick()&lt;/strong&gt; method.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View.OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// other setup codes here &lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sinstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sinstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; 
  
    &lt;span class=&quot;n&quot;&gt;OnClickListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
  
      &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;// your code for click here&lt;/span&gt;
  
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The example code above is not the only way to create listener. You can implement the &lt;em&gt;Listener&lt;/em&gt; on the Activity as well, it may be more efficient that way because you can avoid the performance hit of the extra class loading which was caused by the inner class implementation.&lt;/p&gt;

&lt;p&gt;The samples above should get you started on event programming, but let’s take on another sample, this time, the long-click event.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;HOW TO HANDLE THE LONG CLICK&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View.OnLongClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnLongClickListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnLongClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onLongClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// your code when user long clicks&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The long click &lt;em&gt;Listener’s&lt;/em&gt; method is not identical to the void signature of the &lt;em&gt;click&lt;/em&gt; event. It requires that you return a boolean value so Android runtime knows if the long click has already been handled (consumed) or not. Read and study the definitions of the events on the API documentation carefully. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>TUTORIALS</title>
   <link href="http://thelogbox.com/notice/tutorials"/>
   <updated>2013-01-02T00:00:00+08:00</updated>
   <id>http://thelogbox.com/notice/tutorials</id>
   <content type="html">&lt;p&gt;We’re reconstituting these pages. It won’t be long now. Sorry for the mess. In the meantime, here are the links for the tutorials&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/android-programming-tutorial&quot;&gt;ANDROID PROGRAMMING&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;HTML5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;JAVASCRIPT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Check for Network Connectivity</title>
   <link href="http://thelogbox.com/android-check-connectivity"/>
   <updated>2012-12-16T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-check-connectivity</id>
   <content type="html">&lt;p&gt;Finding out the state of connectivity of an Android device is a fundamental technique. You need to know which type of connectivity the device has before you perform any activity that requires data transfer. You may encounter situations where you want to send data e.g. picture files,  maps or any other sizeable data through the wire, only when WIFI connectivity is up.&lt;/p&gt;

&lt;p&gt;There are two classes in android.net package that can be used to determine connectivity; The ConnectivityManager and NetworkInfo&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use a ConnectivityManager object, get the System Service information — getSystemService(Context.CONNECTIVITY_SERVICE)&lt;/li&gt;
  &lt;li&gt;Get the network information from the ConnectivityManager object, the getActiveNetworkInfo() returns an android.net.NetworkInfo object, this contains some detailed information about connectivity&lt;/li&gt;
  &lt;li&gt;Call the getType() method against the NetworkInfo object, it will return an int value, check it against the CONSTANTS defined in the ConnectivityManager class&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Before you compile and install on the device, you need to set additional permissions on the Manifest file&lt;/p&gt;

&lt;h3 id=&quot;the-manifest-file&quot;&gt;The Manifest file&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../img/android-manifest-conntest.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;BSD License: Copyright (c) 2009-2012 Ted Hagos&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;All rights reserved.&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;License text: http://thelogbox.com/source-docs/software-license.txt&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;filename: ConnTest.java&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thelogbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.app.Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.LinearLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.TextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View.OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.net.ConnectivityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.net.NetworkInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ViewConnnTest&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinearLayout&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnClickListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ConnectivityManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connman&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;NetworkInfo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;netinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ViewConnnTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;addView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;connman&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConnectivityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONNECTIVITY_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;netinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connman&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getActiveNetworkInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 

    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;netinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConnectivityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_MOBILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\nMobile data OK.&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConnectivityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_WIFI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\nWIFI OK.&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConnectivityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_WIMAX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\nWIMAX OK.&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConnectivityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_ETHERNET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\nOn Ethernet.&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConnectivityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_BLUETOOTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\nBluetooth OK.&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\nNot connected. Not OK.&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\nState= &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;netinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ConnTest&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ViewConnnTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Location API</title>
   <link href="http://thelogbox.com/android-location-api"/>
   <updated>2012-12-12T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-location-api</id>
   <content type="html">&lt;p&gt;GEOLocation is a major fuctionality of a mobile device. There are plenty of practical uses for this nifty feature, apart from stamping where you were when you took that photo. &lt;/p&gt;

&lt;p&gt;This feature makes it possible to know where you are during those situations when you are lost. A powerful enough app can tell you how far you are from an intended destination. These are just a few use cases for this feature. This is the reason why you need to know how to code with it.&lt;/p&gt;

&lt;h1 id=&quot;current-location&quot;&gt;CURRENT LOCATION&lt;/h1&gt;

&lt;p&gt;To get information on the current location, you need to do the following;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Allow the use Location based service on the device. The user has to do this,  there is no way to enable the service programatically&lt;/li&gt;
  &lt;li&gt;Add permissions on the Manifest file&lt;/li&gt;
  &lt;li&gt;Use the LocationManager and other related classes on the android.location.* package&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;To allow the use of **Location Based Service on the device&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to settings&lt;/li&gt;
  &lt;li&gt;Go to Location and Security&lt;/li&gt;
  &lt;li&gt;Choose the appropriate settings (use wireless networks and/or use gps sattelites)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that this needs to be performed by the user. This means you, as a developer, cannot stealthily perform these activities without the user permission. Your application needs to be explicit about this fact on the terms of service.&lt;/p&gt;

&lt;p&gt;On the application side, you need to make some changes on *AndroidManifest.xml**. The changes you need to make are highlighted.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/android-manifest-xml-gps-permission.png&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sample-code&quot;&gt;SAMPLE CODE&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt; BSD License: Copyright (c) 2009-2012 Ted Hagos&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; All rights reserved.&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt; License text: http://thelogbox.com/source-docs/software-license.txt&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// GPSView.java&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thelogbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.app.Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.LinearLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.TextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View.OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.location.LocationManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.location.LocationListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.location.Location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.location.Criteria&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.location.Geocoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.location.Address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.util.Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GPSView&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinearLayout&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocationListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LocationManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Geocoder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Address&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GPSView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;addView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;locm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LocationManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LOCATION_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLastKnownLocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBestProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Criteria&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;geo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Geocoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Got Location&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLongitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLatitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFromLocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;got Lat and Lon and geocode&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;LAT: &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; | LON: &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; | Country:  &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCountryName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLocality&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPostalCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMaxAddressLineIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAddressLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;No location&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;No Location&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onLocationChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;location changed&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onStatusChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;status changed&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onProviderEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; is enabled&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onProviderDisabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;is disabled&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleGPS&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GPSView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;code-walk-through&quot;&gt;CODE WALK THROUGH&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Get an instance of a LocationManager object, this can be done by calling the getSystemService() method of the Application Context&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Call the getLastKnownLocation() method of the location manager object to get a Location object&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;From the location object, you can extract the longitude and latitude information, both these methods will return a double data type. At this point, you already have latitude and longitude info—you can stop here if that is all you need. If on the other hand, you need to get a human readable address, like Country, Locality etc. Use the Geocoder class and do a reverse geocoding—continue to &lt;em&gt;step 4&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create an instance of Geocoder&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Call the getFromLocation(latitude, longitude, 1) of the geocoder object. The third parameter is the maximum number of results (addresses) that you wish to extract. In the example, we are only interested in 1 address, hence the third parameter is an an int value 1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;getFromLocation() will return a java.util.List object, it will have only 1 element (because the third parameter that was passed instructed it to return only 1 value). Extract that element, it will be an android.location.Address object&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Extract the members of the Address object to get the address lines, country name and locality. There are a lot more information on the address object, just look up the API if you need to extract more information&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The LocationListener interface is not necessary if you simply want to get the current GPS information on the device. You will need the the callbacks of the LocationListener if you want something to happen in response to the following;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When the location has changed – onLocationChanged()&lt;/li&gt;
  &lt;li&gt;When there is change on status of the GPS provider – onStatusChanged()&lt;/li&gt;
  &lt;li&gt;When the GPS provider is disabled – onProviderDisabled()&lt;/li&gt;
  &lt;li&gt;When the GPS provider is enabled – onProviderEnabled()&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Setting Up an Eclipse Development Environment</title>
   <link href="http://thelogbox.com/developing-with-eclipse"/>
   <updated>2012-12-11T00:00:00+08:00</updated>
   <id>http://thelogbox.com/developing-with-eclipse</id>
   <content type="html">&lt;p&gt;Make sure you have already installed the ANDROID SDK and that you have properly configured the PATHs to tools and platform-tools. Make sure also that you have properly installed and configured Apache ANT.&lt;/p&gt;

&lt;p&gt;Download Eclipse from &lt;a href=&quot;http://eclipse.org&quot;&gt;eclipse.org&lt;/a&gt;, This is usually zipped or tgz’ed file. You will need to extract eclipse to a folder of your choice and setup the correct links/PATH&lt;/p&gt;

&lt;h2 id=&quot;get-the-adt&quot;&gt;Get the ADT&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Launch Eclipse&lt;/li&gt;
  &lt;li&gt;Go to &lt;strong&gt;Help&lt;/strong&gt; → &lt;strong&gt;Install new software&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click the &lt;strong&gt;Add&lt;/strong&gt; button&lt;/li&gt;
  &lt;li&gt;On the &lt;em&gt;Location&lt;/em&gt; text field, type https://dl-ssl.google.com/android/eclipse/, you can type whatever you want on the &lt;em&gt;Name&lt;/em&gt; textfield, but I suggest that you name it “Android DT” or something descriptive&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Ok&lt;/strong&gt; then follow the prompts, it is straightforward from there.&lt;/li&gt;
  &lt;li&gt;Eclipse will restart after the plugin has been completely downloaded&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;create-a-project&quot;&gt;Create a project&lt;/h2&gt;

&lt;p&gt;Go to &lt;strong&gt;File&lt;/strong&gt; → &lt;strong&gt;New Project&lt;/strong&gt; → &lt;em&gt;Android&lt;/em&gt; → &lt;em&gt;Android application project&lt;/em&gt;. It will be a series of dialog screens, but what you need to remember are the following;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;Application Name&lt;/em&gt; - Choose a name for this. This is an Eclipse construct, it needs it to manage projects&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Project name&lt;/em&gt; - Put whatever you like&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Package name&lt;/em&gt; - this is usually a reverse DNS notation of your domain name. The domain does not have to exist, so you can put whatever you like e.g. com.thelogbox.HelloWorld&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Minimum required SDK&lt;/em&gt; - The lowest version of Android that your application is guaranteeing to run on; be careful here, the older release of Android is not guaranteed to be compatible with the newer versions of Android. Unless you absolutely know what you are doing, put exactly the same values on all the SDK fields in this dialog screen&lt;/li&gt;
  &lt;li&gt;On the next screen, you will have an option to &lt;em&gt;create an Activity&lt;/em&gt;, leave it on if you want to have a default Activity class when the project is created&lt;/li&gt;
  &lt;li&gt;Follow the prompts to fill out some more project details&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;test&quot;&gt;Test&lt;/h2&gt;

&lt;p&gt;If you don’t have a physical Android device, you can use the AVD (Android Virtual Device) but I strongly suggest that you get a physical device because the AVD is painfully slow. You need to get the AVD setup first before you can run anything, there are detailed instructions and information about the AVD on &lt;a href=&quot;http://developer.android.com/tools/devices/managing-avds.html&quot;&gt;android developer site&lt;/a&gt;. You will need either the AVD or a physical device because Android applications are meant to run on an environment that is very different from your PC, that is why you need at least an emulator. &lt;/p&gt;

&lt;p&gt;If you have a physical Android device, there are somethings you need to note before you can use it. &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You need to enable the &lt;strong&gt;USB Debugging&lt;/strong&gt; option on the physical device itself. This procedure will differ from one device brand to another, so you really need to know how to work this for your specific device brand&lt;/li&gt;
  &lt;li&gt;If you are using OSX, then you can stop here, you all setup. All you’ve got to do is to plug your device into the USB of the PC, and off you go. If you are using Windows or Linux, read on to step no. 3&lt;/li&gt;
  &lt;li&gt;You need to properly configure the USB settings on your machine before you can plug in your Android device and use it for development. There are detailed instructions on the &lt;a href=&quot;http://developer.android.com/tools/device.html&quot;&gt;android developer site&lt;/a&gt;, read through it and follow it&lt;/li&gt;
  &lt;li&gt;Once the setup is done, as soon as you click &lt;strong&gt;Run&lt;/strong&gt; on the eclipse menu (CTRLF11), the new android project will be deployed to the physical machine — as if you ran &lt;strong&gt;ant debug install&lt;/strong&gt; from the command line&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.android.com/tools/devices/managing-avds.html&quot;&gt;developer.android.com/AVD&lt;/a&gt; - Managing AVDs. Google, 2012&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.android.com/tools/device.html&quot;&gt;developer.android.com/tools/device&lt;/a&gt; - Setting up USB devices for Android testing. Google, 2012&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Prepare an LG Optimus Phone for Android Development</title>
   <link href="http://thelogbox.com/android/lg-optimus-enable-debugging"/>
   <updated>2012-12-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android/lg-optimus-enable-debugging</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;Go to settings&lt;/li&gt;
  &lt;li&gt;Then connections&lt;/li&gt;
  &lt;li&gt;Tap on the &lt;strong&gt;USB connection&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Choose &lt;strong&gt;Charge only&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Go back to the Settings screen&lt;/li&gt;
  &lt;li&gt;Enable &lt;strong&gt;USB Debugging&lt;/strong&gt;. You need to do this while the device is not yet connected to the PC (it will be greyed out if the device is connected when you do this)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Run a simple &lt;strong&gt;adb&lt;/strong&gt; or &lt;strong&gt;logcat&lt;/strong&gt; command to see if it’s working. If it’s not, the terminal will say &lt;em&gt;waiting for device…&lt;/em&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Using the Camera</title>
   <link href="http://thelogbox.com/simple-camera-code"/>
   <updated>2012-11-27T00:00:00+08:00</updated>
   <id>http://thelogbox.com/simple-camera-code</id>
   <content type="html">&lt;p&gt;Android comes with a Camera application. You can call that from your code with a little help from Android Intents. This section is &lt;strong&gt;NOT&lt;/strong&gt; about that. The code example in this chapter uses the camera at an API level. &lt;/p&gt;

&lt;p&gt;Here’s a rundown of what we need to do to accomplish the task.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;import some classes from android.hardware.Camera, specifically the PictureCallback and shutterCallback classes&lt;/li&gt;
  &lt;li&gt;Get an instance of the Camera by calling the static &lt;em&gt;open() method&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Create a SurfaceView object. A necessary step in the Android camera operation is to call &lt;em&gt;setPreview()&lt;/em&gt; method, this method requires a SurfaceView object. A dummy SurfaceView object can be constructed for applications that do not require taking a preview before capturing an image&lt;/li&gt;
  &lt;li&gt;Call the &lt;em&gt;takePicture()&lt;/em&gt; method. This method requires three parameters, each of them a callback (a callback in Java can be achieved by using anonymous classes. The first parameter is a shutterCallback, you don’t need to do anything here, but this is a good place to start if you want to say, silence the shutter clicking sound. The second parameter is the rawCallback, we will not use this for this example. I really am interested only in capturing JPEGs, hence the only thing to override is the jpgCallback–this is where we extract the actual picture taken by the camera. The &lt;em&gt;onPictureTaken()&lt;/em&gt; method contains a byte array data which contains the image file. What is left to do is to serialize this byte array into a stream and save it into the file system&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;code-sample&quot;&gt;CODE SAMPLE&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thelogbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.app.Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View.OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.LinearLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.hardware.Camera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.hardware.Camera.ShutterCallback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.hardware.Camera.PictureCallback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.SurfaceView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.util.Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.FileOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.FileNotFoundException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VSimpleCamera&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinearLayout&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnClickListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SurfaceView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surfaceview&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Camera&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;camera&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FileOutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;VSimpleCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;surfaceview&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SurfaceView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;camera&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Camera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;


    &lt;span class=&quot;n&quot;&gt;Handler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;postDelayed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Runnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Runnable is running&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//You can put the camera hooba jub here&lt;/span&gt;
        
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cameratest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camera&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Clicked&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;camera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPreviewDisplay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surfaceview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;camera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startPreview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;camera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;takePicture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shutterCallBack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawCallBack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jpgCallBack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Exception &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;ShutterCallback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shutterCallBack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShutterCallback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onShutter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;shutter call&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;PictureCallback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawCallBack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PictureCallback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onPictureTaken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Camera&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;raw Call back&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;PictureCallback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jpgCallBack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PictureCallback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onPictureTaken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Camera&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FileOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/sdcard/%d.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileNotFoundException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ioe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ioe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;jpg Call Back&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleCamera&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;VSimpleCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;SimpleCamera.java&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Debugging with LogCat</title>
   <link href="http://thelogbox.com/logcat"/>
   <updated>2012-11-24T00:00:00+08:00</updated>
   <id>http://thelogbox.com/logcat</id>
   <content type="html">&lt;p&gt;This section is not about some spiffy tool that lets put breakpoints in your IDE or something that allows you to step through your code line-by-line. Nothing like that. This is about  how to use a crude and old technique of debugging. Outputting something into your screen at specific points in the code. &lt;/p&gt;

&lt;p&gt;In Core Java, you can simply use the &lt;code class=&quot;codeblock&quot;&gt;println()&lt;/code&gt; method of &lt;em&gt;System.out&lt;/em&gt;. — well, that works a little differently in Android. &lt;/p&gt;

&lt;p&gt;You can still write &lt;code class=&quot;codeblock&quot;&gt;System.out.println&lt;/code&gt; in your code but it won’t show up on the Android screen. The target of &lt;em&gt;println&lt;/em&gt; is the stdout, hence it will show up on your &lt;em&gt;android debugger session (adb)&lt;/em&gt; and not the Android device or emulator. Also, instead of using &lt;em&gt;println&lt;/em&gt;, use the &lt;strong&gt;Log&lt;/strong&gt; class instead if you need to insert some debugging info on your app.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// HOW TO USE THE LOG CLASS&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.util.Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyAndroidApp&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;o&quot;&gt;....&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;someCallBack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;string to log&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;someMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;string to log&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;On a terminal window, run &lt;code class=&quot;codeblock&quot;&gt;adb logcat&lt;/code&gt;. The logcat utility supports a couple of flags. Here’s how you might use them&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;codeblock&quot;&gt;adb logcat&lt;/code&gt; — Prints everything that happens to the device, on the screen. You probably don’t want this&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;codeblock&quot;&gt;adb logcat * -S&lt;/code&gt; — Direct opposite of adb logcat, this is very silent, you won’t see anything (meaningful)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;codeblock&quot;&gt;adb logcat -s &lt;filter&gt;&amp;lt;/code&amp;gt; &amp;mdash; filters the output messages that matches the TAG name&lt;/filter&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Okay. Now lets try them on using the  &lt;em&gt;callbacks&lt;/em&gt; of the Activity class.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// CALL BACKS OF THE ACTIVITY CLASS&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thelogbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.app.Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.util.Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.LinearLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LCycleView&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinearLayout&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;LCycleView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Clicked&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LCycle&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** Called when the activity is first created. */&lt;/span&gt;
    
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LCycleView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;onCreate&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;onResume&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;    
  
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onRestart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onRestart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Restart&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Paused&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Stoppped&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; 
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onDestroy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onDestroy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Destroy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above code is one of the few examples an Android developer might spike while beginning to explore Android programming. After reading all about lifecycle of the Activity class, of course you want to know when the events will actually be fired. &lt;/p&gt;

&lt;p&gt;If you simply type &lt;code class=&quot;codeblock&quot;&gt;adb logcat&lt;/code&gt;, everything that an application does (and the operating system) will be displayed on the screen, it will also scroll very fast because there are lots of things that the Android operating system is doing. &lt;/p&gt;

&lt;p&gt;If you want to see only the logs associated with your app, type &lt;code class=&quot;codeblock&quot;&gt;adb logcat -s com.thelogbox.LCycle&lt;/code&gt;. &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Sign an App</title>
   <link href="http://thelogbox.com/signing-an-android-app"/>
   <updated>2012-11-23T00:00:00+08:00</updated>
   <id>http://thelogbox.com/signing-an-android-app</id>
   <content type="html">&lt;p&gt;You have to sign your app before you can sell them and before other people can install them on their devices. Follow the steps below to sign your app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Generate a key&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;You will need a key to sign your app. This can be generated using the &lt;strong&gt;keytool&lt;/strong&gt; command. The keytool is part the Java SDK. If &lt;java_home&gt;/bin folder is part of your system path, you should be able to invoke the keytool command from a terminal window&lt;/java_home&gt;&lt;/p&gt;

&lt;p&gt;To generate a key, run the following command from a terminal window&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keytool -genkey -v -keystore thelogbox_key.keystore -alias thelogbox_key_alias -keyalg RSA -keysize 2048 -validity 10000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2. Use the jarsigner&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore my-release-key.keystore my_application.apk alias_name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Substitute the actual name of your application in place of &lt;strong&gt;my_application&lt;/strong&gt; above. The &lt;strong&gt;jarsigner&lt;/strong&gt; prompts you to provide passwords for the keystore and key. It then modifies the apk in-place and signs it accordignly. Note that you can sign an APK multiple times with different keys.&lt;/p&gt;

&lt;p&gt;One thing to note is that as of JDK 7, the default signing algorithim has changed, requiring you to specify the signature and digest algorithims, &lt;strong&gt;-sigalg&lt;/strong&gt; and &lt;strong&gt;-digestalg&lt;/strong&gt;, when you sign an APK.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Verify that your apk is signed&lt;/strong&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jarsigner -verify my_signed.apk 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also use the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jarsigner -verify -verbose my_application.apk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or this command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jarsigner -verify -verbose -certs my_application.apk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;4. Align the package&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use the &lt;strong&gt;zipalign&lt;/strong&gt; command on your apk file after you have signed it with your private key. This command ensures that all uncompressed data starts with a particular byte alignment relative to the start of the file, zipalign is part of Android SDK, not the Java SDK.&lt;/p&gt;

&lt;p&gt;Ensuring the alignment at 4 byte boundaries has a positive effect on application performance when installed on a device.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zipalign -v 4 your_project_name-unaligned.apk your_project_name.apk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When aligned, the Android system is able to read files with mmap(), even if they contain binary data with alignment restrictions, rather than copying all of the data from the package. The benefit is a reduction in the amount of RAM consumed by the running application.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Project Workflow</title>
   <link href="http://thelogbox.com/android-project-workflow"/>
   <updated>2012-11-23T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-project-workflow</id>
   <content type="html">&lt;h1 id=&quot;create-the-project&quot;&gt;CREATE THE PROJECT&lt;/h1&gt;

&lt;p&gt;*android create project –path &lt;project folder=&quot;&quot;&gt; --target &lt;api level=&quot;&quot;&gt; --package &lt;package name=&quot;&quot;&gt; --Activity &lt;activity name=&quot;&quot;&gt;*&lt;/activity&gt;&lt;/package&gt;&lt;/api&gt;&lt;/project&gt;&lt;/p&gt;

&lt;h1 id=&quot;work-the-manifest&quot;&gt;WORK THE MANIFEST&lt;/h1&gt;

&lt;p&gt;If necessary, modify the &lt;em&gt;*AndroidManifest.xml&lt;/em&gt;. There will be certain applications that will require explicit permissions to be declared on manifest e.g. use of camera, use of the MIC for media recording etc&lt;/p&gt;

&lt;h1 id=&quot;source-control&quot;&gt;SOURCE CONTROL&lt;/h1&gt;

&lt;p&gt;This is for bitbucket.org, adjust the url accordingly for github.com&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

$ cd /path/to/your/project
$ git init
$ git remote add origin https://yourname@bitbucket.org/yourname/yourproject.git

&lt;/pre&gt;

&lt;h1 id=&quot;add-gitignore-and-readme-file&quot;&gt;ADD .gitignore and README file&lt;/h1&gt;

&lt;p&gt;cd to project folder, create a .gitignore file. You don’t want all of the files to be under source control e.g. location of the build.xml and the android-SDK, these information are specific to developer workstation and may not be true for all developers. Also, you don’t want generated files to be part of source control&lt;/p&gt;

&lt;p&gt;A sample content of .gitignore&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
  bin/
  gen/
  ant.properties
  local.properties
  build.properties
  project.properties  
&lt;/pre&gt;

&lt;p&gt;Don’t forget the README.txt. Even if you are working alone, it can’t hurt to write down your thoughts why you were trying to write that piece of code in the first place, put it in the README.txt&lt;/p&gt;

&lt;h1 id=&quot;commit-regularly&quot;&gt;COMMIT REGULARLY&lt;/h1&gt;

&lt;p&gt;Keep adding files to the project, keep modifying files. At the end of the day, commit your changes. Now, the frequency of the commit is usually decided as a group. There are projects where you cannot until certain number of unit tests have been performed (and passed) etc. Know your project practices and adhere to them, but the last thing you want is losing a days worth of coding/unit testing, so commit to the repo religiously&lt;/p&gt;

&lt;h1 id=&quot;license-the-source-file&quot;&gt;LICENSE THE SOURCE FILE&lt;/h1&gt;

&lt;p&gt;You need to decide which license you will use. Remember, if there is no explicit license on the source file, it means its a full copyright. No one can use your code, they will have to contact you and ask for express permissions — not that everybody abides by that, but still, if you intend other people to benefit from your creation, then license it either using a permissive license (like MIT or BSD) or the GPL or what have you.&lt;/p&gt;

&lt;h1 id=&quot;debug-observe-inspect-adjust&quot;&gt;DEBUG, OBSERVE, INSPECT, ADJUST&lt;/h1&gt;

&lt;p&gt;Learn how to type ant debug install really quickly, better yet, use a text expander so you have a fighting chance against carpal tunnel syndrome&lt;/p&gt;

&lt;h1 id=&quot;beta-test&quot;&gt;BETA TEST&lt;/h1&gt;

&lt;p&gt;Send the app to friends, relatives, colleagues etc, look for feedback. Go back to the app, refine. Let your thoughts germinate some more. You need to iterate a bit on the app before you release to the wild&lt;/p&gt;

&lt;h1 id=&quot;sign-the-app&quot;&gt;SIGN THE APP&lt;/h1&gt;

&lt;p&gt;ant debug install was fine for testing and development, but it cannot be consumed by other people without the developer signature. You need to &lt;a href=&quot;/signing-an-android-app&quot;&gt;digitally sign your app&lt;/a&gt; before you release it to the public &lt;/p&gt;

&lt;h1 id=&quot;get-to-google-play&quot;&gt;GET TO GOOGLE PLAY&lt;/h1&gt;

&lt;p&gt;You can make the app available from your website as a downloadable apk (android package) or you could pay Google Play so you can sell the app at the Google Market Place (its like iTunes or the Apple App Store for Android apps)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>BLOG</title>
   <link href="http://thelogbox.com/notice/blog-archives"/>
   <updated>2012-11-11T00:00:00+08:00</updated>
   <id>http://thelogbox.com/notice/blog-archives</id>
   <content type="html">&lt;p&gt;Sorry about this mess. If you are looking for the old &lt;strong&gt;BLOG&lt;/strong&gt; index, I moved it to a more appropriate place. It’s still here, don’t worry about it. I just needed to consolidate and reorganize a bit. Click the button below to view the blog archives.&lt;/p&gt;

&lt;div id=&quot;feature-button&quot;&gt;
  &lt;a href=&quot;/archives&quot; class=&quot;button&quot;&gt;All Contents are Here&lt;a&gt;
 
&lt;/a&gt;&lt;/a&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Use the Mic for Recording</title>
   <link href="http://thelogbox.com/android-java-recording-voice"/>
   <updated>2012-11-05T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-java-recording-voice</id>
   <content type="html">&lt;p&gt;Voice capture and voice playback in Android is handled by two classes; &lt;em&gt;android.media.MediaRecorder&lt;/em&gt; and &lt;em&gt;android.media.MediaPlayer&lt;/em&gt;, for recording and playback respectively. &lt;/p&gt;

&lt;p&gt;They are very straightforward to use. The usual sequence in using MediaRecoder and MediaPlayer is;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an instance of MediaRecorder&lt;/li&gt;
  &lt;li&gt;Set its audiosource to &lt;em&gt;MIC&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Set the filename where the audio file will be stored&lt;/li&gt;
  &lt;li&gt;Set the encoding&lt;/li&gt;
  &lt;li&gt;Call the &lt;em&gt;prepare()&lt;/em&gt; method (this is a necessary step, otherwise you will get some IllegalStateException). This method throws an IOException, so you need to handle it appropriately with either a try-cath or throws mechanism&lt;/li&gt;
  &lt;li&gt;Call the &lt;em&gt;start()&lt;/em&gt; method to begin recording&lt;/li&gt;
  &lt;li&gt;Call the &lt;em&gt;stop()&lt;/em&gt;, then &lt;em&gt;release()&lt;/em&gt; methods when you want to stop recording&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Audio playback follows a similar pattern;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an instance of  &lt;em&gt;android.media.MediaPlayer&lt;/em&gt; &lt;/li&gt;
  &lt;li&gt;set the datasource for the MediaPlayer. This is the audio file that you recorded in steps 1-8&lt;/li&gt;
  &lt;li&gt;Call the &lt;em&gt;prepare()&lt;/em&gt; method of the MediaPlayer object—this too can throw an IOException, so it needs to be handled using either try-catch or throws mechanism as well&lt;/li&gt;
  &lt;li&gt;Call the &lt;em&gt;start()&lt;/em&gt; method to start playing the audio file&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The source for this exercise is below. There is no main.xml because the UI was built programatically, instead of declaratively&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
package com.thelogbox;

import android.app.Activity;
import android.os.Bundle;
import android.os.Environment;
import android.widget.LinearLayout;
import android.widget.Button;
import android.content.Context;
import android.view.View;
import android.view.View.OnClickListener;
import android.media.MediaRecorder;
import android.media.MediaPlayer;
import java.io.IOException;


public class Recorder extends Activity {
  /** Called when the activity is first created. */
  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(new RView(this));
  }
}

class RView extends LinearLayout implements OnClickListener {

  Button btnstart = null;
  Button btnstop = null;
  MediaPlayer mp = null;
  MediaRecorder mr = null;
  String filename = null;

  RView(Context ctx) {
    super(ctx);

    filename = Environment.getExternalStorageDirectory().getAbsolutePath();
    filename += &quot;/test.3gp&quot;;

    mr = new MediaRecorder();
    mp = new MediaPlayer();

    btnstart = new Button(ctx);
    btnstop = new Button(ctx);

    btnstart.setText(&quot;start&quot;);
    btnstop.setText(&quot;stop&quot;);

    btnstart.setOnClickListener(this);
    btnstop.setOnClickListener(this);

    btnstart.setId(1);
    btnstop.setId(2);

    setOrientation(LinearLayout.VERTICAL);

    addView(btnstart);
    addView(btnstop);

  }

  public void onClick(View view){
    if(view.getId() == 1) {
      // START BUTTON
      btnstart.setText(&quot;Holding ...&quot;);
      btnstop.setClickable(true);
      btnstart.setClickable(false);
      startRec();
    }
    else if(view.getId() == 2) {
      // STOP BUTTON
      btnstart.setClickable(true);
      btnstart.setText(&quot;start&quot;);
      btnstop.setClickable(false);
      stopRec();
    }
  }

  void startRec() {
   
    mr.setAudioSource(MediaRecorder.AudioSource.MIC);
    mr.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
    mr.setOutputFile(filename);
    mr.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);

    try {
     mr.prepare();
    }
    catch(IOException ioe){
     // Some Logcat here
    }
    mr.start();
  }

  void stopRec() {
    mr.stop();
    mr.release();

    try {
     mp.setDataSource(filename);
     mp.prepare();
   }
   catch(IOException ioe) {
     // some Logcat here
   }
   mp.start();

  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 class=&quot;section&quot;&gt;PERMISSIONS&lt;/h2&gt;

&lt;p&gt;The code above will already compile (and run). If you do the first testing, it will run for a while but will immediately crash when you press the &lt;em&gt;Start&lt;/em&gt; button. The &lt;em&gt;MediaRecorder&lt;/em&gt; will not initialize properly and hence will hit an &lt;em&gt;IllegalStateException&lt;/em&gt; when you start invoking the MediaRecorder methods. The Android runtime needs to allow your application to capture and record audio. App permissions are declared on the &lt;em&gt;AndroidManifest.xml&lt;/em&gt; file, you will need to add the entry &lt;em&gt;&amp;lt;uses-permission android:name=”android.permission.RECORD_AUDIO” /&amp;gt;&lt;/em&gt; to the manifest. Make sure also that you add the permissions entry out the &amp;lt;application …/&amp;gt; node. Here is the full entry of the &lt;em&gt;AndroidManifest.xml&lt;/em&gt; for this exercise.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;package=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;com.thelogbox&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;android:versionCode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;android:versionName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android.permission.RECORD_AUDIO&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;application&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@string/app_name&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;activity&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Recorder&amp;quot;&lt;/span&gt;
                  &lt;span class=&quot;na&quot;&gt;android:label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@string/app_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android.intent.action.MAIN&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;category&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android.intent.category.LAUNCHER&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/application&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Core Java Programming</title>
   <link href="http://thelogbox.com/training/training-java-core"/>
   <updated>2012-10-26T00:00:00+08:00</updated>
   <id>http://thelogbox.com/training/training-java-core</id>
   <content type="html">&lt;div id=&quot;training-sidebar&quot;&gt;
&lt;h4&gt;Dates&lt;/h4&gt;
31.March.2014 - 11.April.2014 &lt;br /&gt;
14.April.2014 - 25.April.2014

&lt;h4&gt;Delivery method&lt;/h4&gt;

There are 10 sessions in this course, each session is one hour. Each of these sessions will be delivered online e.g. gotomeeting or join.me. &lt;br /&gt;
&lt;p /&gt;
Homeworks, assigned reading and machine problems will be given to the participants. These off-session activities were designed to reinforce the learnings during the live sessions with the facilitator.

&lt;h4&gt;Who should attend&lt;/h4&gt;
Those who are new to the Java language. You may have dabbled with the Java language before or any other language, a previous background in the language certainly is helpful but not required.

&lt;h4&gt;Cost&lt;/h4&gt;
200 USD per participant

&lt;p /&gt;
&lt;h4&gt;What you will get&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Recorded videos of the sessions&lt;/li&gt;
&lt;li&gt;Video learning materials&lt;/li&gt;
&lt;li&gt;Electronic version of the learning materials&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;To sign up&lt;/h4&gt;
You can email &lt;a href=&quot;mailto:ted@thelogbox.com&quot;&gt;ted@thelogbox.com&lt;/a&gt; for details on signing up.
&lt;/div&gt;

&lt;h2 id=&quot;program-overview&quot;&gt;Program Overview&lt;/h2&gt;

&lt;p&gt;In this training, the participants will obtain practical skills and insights on how to build programs using the Standard Edition of Java. The JSE or Java Standard Edition is a fundamental building block for programming in the large (Enterprise and Web applications) and in the small (mobile devices like Android)&lt;/p&gt;

&lt;p&gt;After the course, the participant will learn to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Set up a proper Java development environment using both the barebones JDK and some popular IDE &lt;/li&gt;
  &lt;li&gt;Write, compile, run and debug Java programs&lt;/li&gt;
  &lt;li&gt;Learn the basics of Object Oriented Programming&lt;/li&gt;
  &lt;li&gt;Learn fundamental concepts and techniques of concurrency and apply them by using Java threads&lt;/li&gt;
  &lt;li&gt;Write programs that use I/O&lt;/li&gt;
  &lt;li&gt;Use databases in your applications&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;course-content&quot;&gt;Course Content&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Setting up a proper development environment&lt;/li&gt;
  &lt;li&gt;Language fundamentals&lt;/li&gt;
  &lt;li&gt;Object Oriented Programming&lt;/li&gt;
  &lt;li&gt;Memory, Garbage collection and Object lifecycle&lt;/li&gt;
  &lt;li&gt;Data types, Primitives and Reference types&lt;/li&gt;
  &lt;li&gt;Control structures&lt;/li&gt;
  &lt;li&gt;Exception handling&lt;/li&gt;
  &lt;li&gt;Java methods&lt;/li&gt;
  &lt;li&gt;java.util and java.lang&lt;/li&gt;
  &lt;li&gt;I/O&lt;/li&gt;
  &lt;li&gt;Multi threaded programs&lt;/li&gt;
  &lt;li&gt;Graphical Desktop User Interfaces (javax.swing)&lt;/li&gt;
  &lt;li&gt;Event driven programming&lt;/li&gt;
  &lt;li&gt;Database programming&lt;/li&gt;
  &lt;li&gt;Network programming&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;training-highlights&quot;&gt;Training highlights&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The sessions will be recorded and will be available to the participants for download&lt;/li&gt;
  &lt;li&gt;Other video reference materials related to the course will also be made available to the participants&lt;/li&gt;
  &lt;li&gt;An electronic copy of the learning materials used in the training&lt;/li&gt;
  &lt;li&gt;Expert facilitator&lt;/li&gt;
  &lt;li&gt;Interactive and structured learning&lt;/li&gt;
  &lt;li&gt;Up to date information. The course covers the most recent version of Java (Java 7) and touches on the anticipated features of the upcoming Java 8&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From live interaction to workbooks, the training is an instructor led course with a combination of presentation modules and live coding. Thus giving the participants the advantage of tapping the facilitators experience to address technical pain points and solve practical problems.&lt;/p&gt;

&lt;h2 id=&quot;trainers-profile&quot;&gt;Trainers profile&lt;/h2&gt;

&lt;p&gt;The trainer is currently heading the software development group of A Dublin based software development company. He is a certified Java programmer and enterprise architect. He has over 15 years of software development experience.&lt;/p&gt;

&lt;p&gt;He also has many years of experience in corporate training. He held a post as instructor in IBM Advanced Career Education, Ateneo ITI and Asia Pacific College. He has already trained hundreds of programmers in various languages and platforms.&lt;/p&gt;

&lt;h2 id=&quot;reference-material&quot;&gt;Reference material&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/javalessons&quot;&gt;&lt;img src=&quot;/img/javalessons.png&quot; class=&quot;thumbnail&quot; /&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p /&gt;

&lt;p&gt;The course will use the book &lt;a href=&quot;https://leanpub.com/javalessons&quot;&gt;Java Lessons for Beginners&lt;/a&gt;. Written by the trainer. The book is part of the fee. You do not need to purchase it if you attend the course.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Programming</title>
   <link href="http://thelogbox.com/training/training-android-programming"/>
   <updated>2012-10-26T00:00:00+08:00</updated>
   <id>http://thelogbox.com/training/training-android-programming</id>
   <content type="html">&lt;p&gt;The job market for mobile applications is already huge and is growing at an enormous pace. People are using their mobile devices more than they are using their notebook or desktop computers, and Android based devices are being launched frequently.&lt;/p&gt;

&lt;p&gt;As of May 2012, the number of apps that have been created and released for the android platform is over 500,000 (source: &lt;a href=&quot;http://www.distimo.com/appstores/app-store/19-Google_Android_Market&quot;&gt;DISTIMO: Google Android Market&lt;/a&gt;). Considering that the Google Playstore started late in 2008, in a little over four years, there has been an explosion of mobile apps.&lt;/p&gt;

&lt;p&gt;While IOS enjoyed an early lead in terms of number of apps, the IOS dominance is no longer secured (source: &lt;a href=&quot;http://techcrunch.com/2012/02/23/android-overtakes-ios-in-app-downloads-in-uk-germany-russia-u-s-to-follow-next-month/&quot;&gt;TechCrunch: Android overtakes IOS …&lt;/a&gt;). It is plain to see that the momentum of mobile apps development is rapidly increasing. This creates a demand for programmers on the android platform. Excellent opportunities await those who are early and ready into this growing market.&lt;/p&gt;

&lt;p&gt;There are many ways to learn android, you can read lots of books voraciously then practice; you can keep on reading tutorials available on the internet then practice; you can attend meetings of the local user groups, then practice; you can sign-up for workshops (hopefully this one) then practice some more. A combination of one, some or all of these things will ramp up your skills on android development but the fastest way is to attend a workshop because the materials have been prepared coherently and designed thoughtfully so that you can progress in a methodical and time-efficient way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WHAT WILL BE COVERED&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Key concepts&lt;/li&gt;
  &lt;li&gt;Tools&lt;/li&gt;
  &lt;li&gt;Creating UIs with Activity&lt;/li&gt;
  &lt;li&gt;Event driven programming&lt;/li&gt;
  &lt;li&gt;Activity lifecyle&lt;/li&gt;
  &lt;li&gt;Tabs and TabsActivity&lt;/li&gt;
  &lt;li&gt;Intents&lt;/li&gt;
  &lt;li&gt;Screen rotations&lt;/li&gt;
  &lt;li&gt;Building menus&lt;/li&gt;
  &lt;li&gt;Database programming&lt;/li&gt;
  &lt;li&gt;Logcat and adb&lt;/li&gt;
  &lt;li&gt;Multithreaded programming&lt;/li&gt;
  &lt;li&gt;Alerts&lt;/li&gt;
  &lt;li&gt;Network programming&lt;/li&gt;
  &lt;li&gt;2D animations&lt;/li&gt;
  &lt;li&gt;Linkify&lt;/li&gt;
  &lt;li&gt;Using Preferences&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Who should attend&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The workshop is for people who already know the Java programming language and are comfotable with it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On the day of the training, you will need&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A notebook computer (Windows, Mac or Linux)&lt;/li&gt;
  &lt;li&gt;A properly setup android development environment&lt;/li&gt;
  &lt;li&gt;A physical android device (optional, but highly recommended)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;mailto:ted@thelogbox.com&quot; class=&quot;button&quot;&gt;PLEASE EMAIL FOR TRAINING DETAILS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is available as a person-led training (if you are in Metro Manila, Philippines)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Java &amp; Android Programming</title>
   <link href="http://thelogbox.com/training/training-android-java"/>
   <updated>2012-10-26T00:00:00+08:00</updated>
   <id>http://thelogbox.com/training/training-android-java</id>
   <content type="html">&lt;h1 id=&quot;what-will-be-covered&quot;&gt;WHAT WILL BE COVERED&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;CORE JAVA&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Setting up a proper development environment&lt;/li&gt;
  &lt;li&gt;Language fundamentals&lt;/li&gt;
  &lt;li&gt;Object Oriented Programming&lt;/li&gt;
  &lt;li&gt;Memory, Garbage collection and Object lifecycle&lt;/li&gt;
  &lt;li&gt;Data types, Primitives and Reference types&lt;/li&gt;
  &lt;li&gt;Control structures&lt;/li&gt;
  &lt;li&gt;Exception handling&lt;/li&gt;
  &lt;li&gt;Java methods&lt;/li&gt;
  &lt;li&gt;java.util and java.lang&lt;/li&gt;
  &lt;li&gt;I/O&lt;/li&gt;
  &lt;li&gt;Multi threaded programs&lt;/li&gt;
  &lt;li&gt;Graphical Desktop User Interfaces (javax.swing)&lt;/li&gt;
  &lt;li&gt;Event driven programming&lt;/li&gt;
  &lt;li&gt;Database programming&lt;/li&gt;
  &lt;li&gt;Network programming&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;ANDRROID&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Key concepts&lt;/li&gt;
  &lt;li&gt;Tools&lt;/li&gt;
  &lt;li&gt;Creating UIs with Activity&lt;/li&gt;
  &lt;li&gt;Event driven programming&lt;/li&gt;
  &lt;li&gt;Activity lifecyle&lt;/li&gt;
  &lt;li&gt;Tabs and TabsActivity&lt;/li&gt;
  &lt;li&gt;Intents&lt;/li&gt;
  &lt;li&gt;Screen rotations&lt;/li&gt;
  &lt;li&gt;Building menus&lt;/li&gt;
  &lt;li&gt;Database programming&lt;/li&gt;
  &lt;li&gt;Logcat and adb&lt;/li&gt;
  &lt;li&gt;Multithreaded programming&lt;/li&gt;
  &lt;li&gt;Alerts&lt;/li&gt;
  &lt;li&gt;Network programming&lt;/li&gt;
  &lt;li&gt;2D animations&lt;/li&gt;
  &lt;li&gt;Linkify&lt;/li&gt;
  &lt;li&gt;Using Preferences&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;WHO SHOULD ATTEND&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Those completely new to Java and Android but not completely new to programming. If you have experience using other programming languages in the past, that is ideal. The course does not assume that you have OOP, Java or Mobile App programming background.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ON THE DAY OF THE TRAINING You will need the following:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A notebook computer (Windows, Mac or Linux)&lt;/li&gt;
  &lt;li&gt;A properly setup android development environment&lt;/li&gt;
  &lt;li&gt;A physical android device (optional, but highly recommended)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;mailto:ted@thelogbox.com&quot; class=&quot;button&quot;&gt;PLEASE SEND AN EMAIL FOR TRAINING DETAILS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is available as a person-led training (if you are in Metro Manila, Philippines)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Training Courses</title>
   <link href="http://thelogbox.com/notice/courses"/>
   <updated>2012-10-26T00:00:00+08:00</updated>
   <id>http://thelogbox.com/notice/courses</id>
   <content type="html">&lt;div class=&quot;feature-article&quot;&gt;

  We used to publish the training courses and their details on this page. As it turns out, nobody read it. On the off chance that you bookmarked this page sometime ago and trying to return to it, my apologies.&lt;p /&gt;
  
  The more popular training courses in theLogBox are &lt;strong&gt;HTML5 Canvas Programming, Mobile Apps Development with PhoneGap&lt;/strong&gt; and of course, &lt;strong&gt;Android Programming&lt;/strong&gt;. 
  
  &lt;p /&gt;
  There are other courses that are offered e.g. &lt;strong&gt;NodeJS&lt;/strong&gt; and &lt;strong&gt;iOS Development&lt;/strong&gt; among other stuff. We can send you the details of those courses if you really are interested. You can click the button below, it will fire up your email client. Please do send me a note on which training course you are interested in. We will happilly get back to you.

&lt;/div&gt;

&lt;div id=&quot;feature-button&quot;&gt;
  &lt;a href=&quot;mailto:ted@thelogbox.com&quot; class=&quot;button icon mail&quot;&gt;Drop me a note&lt;/a&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>BLOG</title>
   <link href="http://thelogbox.com/notice/blog"/>
   <updated>2012-10-26T00:00:00+08:00</updated>
   <id>http://thelogbox.com/notice/blog</id>
   <content type="html">&lt;p&gt;Sorry about this mess. If you are looking for the old &lt;strong&gt;BLOG&lt;/strong&gt; index, I moved it to a more appropriate place. It’s still here, don’t worry about it. I just needed to consolidate and reorganize a bit. Click the button below to view the blog archives.&lt;/p&gt;

&lt;div id=&quot;feature-button&quot;&gt;
  &lt;a href=&quot;/archives&quot; class=&quot;button&quot;&gt;All Contents are Here&lt;a&gt;
 
&lt;/a&gt;&lt;/a&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>About</title>
   <link href="http://thelogbox.com/about"/>
   <updated>2012-10-26T00:00:00+08:00</updated>
   <id>http://thelogbox.com/about</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;theLogBox&lt;/strong&gt; is a learning resource for beginning and practicing devs. it contains notes, tutorials and offers tech training on select topics such as mobile, web &amp;amp; cloud computing.&lt;/p&gt;

&lt;div id=&quot;feature-button&quot;&gt;
  &lt;a href=&quot;/&quot; class=&quot;button&quot;&gt;Home Page&lt;a&gt;
 
&lt;/a&gt;&lt;/a&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Introduction</title>
   <link href="http://thelogbox.com/working-with-html5"/>
   <updated>2012-10-18T00:00:00+08:00</updated>
   <id>http://thelogbox.com/working-with-html5</id>
   <content type="html">&lt;p&gt;Welcome to HTML5 tutorial. This is a mini site. It contains howto’s and lots of code examples about HTML5 programming.&lt;/p&gt;

&lt;p&gt;There is a nav bar on the right. Use it as you would a &lt;em&gt;table of contents&lt;/em&gt;. I tried to organize them as such. &lt;/p&gt;

&lt;p&gt;These were compiled from training sessions I have conducted and from projects I have done. My name is Ted Hagos, I am the CTO of RenditionDigital Inc. It’s software company with headquarters in Dublin, Ireland and and office in Manila, Philippines. I have also, at another life, been a programming instructor at Asia Pacific College, Ateneo ITI and IBM Advance Career Education.&lt;/p&gt;

&lt;p&gt;I hope you find something useful in these pages.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Ted&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>HTML5 Canvas Programming</title>
   <link href="http://thelogbox.com/html5-canvas-programming"/>
   <updated>2012-10-18T00:00:00+08:00</updated>
   <id>http://thelogbox.com/html5-canvas-programming</id>
   <content type="html">&lt;div id=&quot;feature-button&quot;&gt;

This content has moved. You can view it using the link below
&lt;p /&gt;
    &lt;a href=&quot;/html5-canvas-basics&quot; class=&quot;button&quot;&gt;HTML5 Canvas Basics&lt;a&gt;
    
&lt;/a&gt;&lt;/a&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Mirah and Pindah</title>
   <link href="http://thelogbox.com/android-programming-mirah-pindah"/>
   <updated>2012-10-18T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-programming-mirah-pindah</id>
   <content type="html">&lt;p&gt;Mirah is a relatively young language (v.08 when I got wind of it, and at the time of writing). It compiles to Java (it emits Java code), it has no runtime library and its syntax is borrowed from Ruby. See &lt;a href=&quot;http://www.mirah.org&quot;&gt;official Mirah site&lt;/a&gt; for more info about the language.&lt;/p&gt;

&lt;p&gt;To use Mirah for Android programming, we will tap another tool to handle the android project creations and build mechanism — we will use &lt;a href=&quot;https://github.com/mirah/pindah&quot;&gt;pindah&lt;/a&gt;. Pindah works great as a replacement for the &lt;em&gt;android create project  …&lt;/em&gt; CLI, it is also a great replacement for the &lt;em&gt;ant&lt;/em&gt; build scripts, it uses &lt;em&gt;rake&lt;/em&gt; &lt;/p&gt;

&lt;h1 id=&quot;setup&quot;&gt;SETUP&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Get ruby and rubygems&lt;/li&gt;
  &lt;li&gt;Get RVM (Ruby Version Manager)&lt;/li&gt;
  &lt;li&gt;Get JRuby — &lt;em&gt;rvm install jruby&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Get mirah — &lt;em&gt;gem install mirah&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Get pindah — &lt;em&gt;gem install pindah&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Make sure you have a really good source code editor&lt;/li&gt;
  &lt;li&gt;Brush up on Ruby, because mirah’s syntax is ruby, just keep in mind that mirah is not ruby, it just looks and feel a lot like it&lt;/li&gt;
  &lt;li&gt;Brush up on the android SDK and API, best source of information on the APIs is &lt;a href=&quot;http://developer.android.com/develop/index.html&quot;&gt;developer.android.com&lt;/a&gt;. There are lots of tutorials you can follow on Android development.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;event-handling-and-notification&quot;&gt;EVENT HANDLING AND NOTIFICATION&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;pindah create com.thelogbox toastcode ToastCode&lt;/em&gt; to create the project&lt;/li&gt;
  &lt;li&gt;cd toastcode&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;android update project -p . —target 8&lt;/strong&gt; to set the target API to level 8 (Froyo)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;pindah&lt;/strong&gt; will produce exactly the same project layout as would &lt;em&gt;android create project&lt;/em&gt;, so go the &lt;em&gt;src&lt;/em&gt; folder and work on the generated &lt;em&gt;ToastCode.mirah&lt;/em&gt; source file&lt;/li&gt;
  &lt;li&gt;Connect and android device (preferred) or create an AVD to emulate an physical device (really slow)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;pindah&lt;/strong&gt; generated a rake file, so use it &lt;strong&gt;rake debug install&lt;/strong&gt;; use the debug option of rake so you won’t have to deal with signing the .apk before you can test the code&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thelogbox&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LinearLayout&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ToastView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LinearLayout&lt;/span&gt;
    
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;vi&quot;&gt;@ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; 
    
    &lt;span class=&quot;vi&quot;&gt;@button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setText&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Toast me!&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setOnClickListener&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;notification&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ToastCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Yo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;notification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
       
    &lt;span class=&quot;n&quot;&gt;setOrientation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LinearLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERTICAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;addView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ToastCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Activity&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;    
    &lt;span class=&quot;vi&quot;&gt;@view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ToastView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
    &lt;span class=&quot;vc&quot;&gt;@@ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@view&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ctx&lt;/span&gt;
    &lt;span class=&quot;vc&quot;&gt;@@ctx&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The generated &lt;strong&gt;R.layout.main&lt;/strong&gt; is completely ignored by this code, the UI is defined entirely in this single source file. The LinearLayout class is a descendant of android.view.View, which means you set the content view of an Activity class to an instance of a custom LinearLayout, hence the class &lt;strong&gt;ToastCode&lt;/strong&gt; extending the LinearLayout class.&lt;/p&gt;

&lt;p&gt;To handle the onClick of the button, usually you will need an &lt;strong&gt;OnClickListener&lt;/strong&gt;
object. This is usually accomplished using an anonymous class. In the sample code, the callback function was achieved using a code block&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# ANONYMOUS METHOD&lt;/span&gt;

&lt;span class=&quot;vi&quot;&gt;@button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setOnClickListener&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# code here ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is good if the code you need to write during click events are short. If the functionality gets a bit more involved, setting up proper &lt;em&gt;OnClickListener&lt;/em&gt; objects might be a cleaner approach&lt;/p&gt;

&lt;p&gt;To setup OnClickListeners, just implement the View.OnClickListener interface in the View class (LinearLayout is subclass of View)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# handling click event using OnClickListener&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LinearLayout&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ViewGroup&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnClickListener&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LinearLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LayoutParams&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnClickListener&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ToastView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LinearLayout&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OnClickListener&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;
    
    &lt;span class=&quot;vi&quot;&gt;@btnsave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;       
    &lt;span class=&quot;vi&quot;&gt;@btnsave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setLayoutParams&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getLayoutParams&lt;/span&gt;    
    &lt;span class=&quot;vi&quot;&gt;@btnsave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setText&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Save&amp;quot;&lt;/span&gt;    
    &lt;span class=&quot;vi&quot;&gt;@btnsave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# ADD the widgets to the MainView&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;addView&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@btnsave&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setOrientation&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LinearLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERTICAL&lt;/span&gt;    
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getLayoutParams&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:LayoutParams&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ViewGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LayoutParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FILL_PARENT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ViewGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LayoutParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WRAP_CONTENT&lt;/span&gt;    
    &lt;span class=&quot;no&quot;&gt;LayoutParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ... code when button is clicked&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;detecting-event-source&quot;&gt;DETECTING EVENT SOURCE&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thelogbox&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LinearLayout&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnClickListener&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ButtonsView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LinearLayout&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OnClickListener&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;
    
    &lt;span class=&quot;vi&quot;&gt;@one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@two&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@three&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;
    
    &lt;span class=&quot;vi&quot;&gt;@one&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setText&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;One&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@two&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setText&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Two&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@three&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setText&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Three&amp;quot;&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# need to set the Id  of each Button obj because this is&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# is what we will use to determine which of them was clicked&lt;/span&gt;
    
    &lt;span class=&quot;vi&quot;&gt;@one&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setId&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@two&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setId&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@three&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setId&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
    
    &lt;span class=&quot;vi&quot;&gt;@one&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setOnClickListener&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@two&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setOnClickListener&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@three&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setOnClickListener&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;addView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;addView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;addView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@three&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;setOrientation&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LinearLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERTICAL&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# v.getId will return an integer. If you defined the view declaratively, the AAPT&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# (android asset packaging tool) would have kicked in and generated an R.layout.xxx&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# java class, we could use that id to determine which button was clicked.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# But since the view was done programmatically, the aapt did not kick in, hence&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# we need to define our own ids for each button&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;toast&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Buttons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getAppContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Buttons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Activity&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;
    &lt;span class=&quot;vc&quot;&gt;@@ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ButtonsView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getAppContext&lt;/span&gt;
    &lt;span class=&quot;vc&quot;&gt;@@ctx&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Web Development Tools</title>
   <link href="http://thelogbox.com/web-development-tools"/>
   <updated>2012-10-15T00:00:00+08:00</updated>
   <id>http://thelogbox.com/web-development-tools</id>
   <content type="html">&lt;h1 id=&quot;haml-for-templating&quot;&gt;HAML FOR TEMPLATING&lt;/h1&gt;

&lt;p&gt;Can be used stand alone or integrated into frameworks like Sinatra, Rails etc. It can be downloaded form the Haml Site or simply via rubygem—gem install haml. If you use it stand alone, it is an HTML generator, if you use within a framework, it can be a filter or a template &lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

/ filename: first.haml
/ forward slash is an inline comment

-# a minus sign followed by hash char is also another way
-# comment. This kind of haml comemnt, this won&#39;t be emitted to html

!!!5  / &amp;lt;!DOCTYPE html&amp;gt;
%html
  %head

    %title First haml
    %link{:rel =&amp;gt; &quot;stylesheet&quot;, :href=&amp;gt;&quot;stylesheet.css&quot;}
    %script{:src =&amp;gt; &quot;one.js&quot;}
    
  %body
        
    %div{:id=&amp;gt;&quot;canvas&quot;} / this a way to define a div

    #hello Hi there / shorter way to define a div with id
    .content Output a div with class attribute

    %a{:href =&amp;gt; &quot;http://haml.info/docs/yardoc/file.REFERENCE.html&quot;} Haml Site - Reference

    %something-else{:class =&amp;gt; &quot;define-this-in-css&quot;} Inside something else

&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;$ haml first.html&lt;/strong&gt; emits the resulting HTML file into stdout (screen).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;$ haml first.haml first.html&lt;/strong&gt; emits the output to &lt;em&gt;first.html&lt;/em&gt;. The syntax reference can be found at &lt;a href=&quot;http://haml.info/docs/yardoc/file.REFERENCE.html&quot;&gt;Haml Ref Site&lt;/a&gt;. Haml syntax is sensitive to indentation, so be careful, a really good editor will be very helpful here.&lt;/p&gt;

&lt;h1 id=&quot;sass-syntactically-awesome-style-sheets&quot;&gt;2. SaSS (Syntactically Awesome Style Sheets)&lt;/h1&gt;

&lt;h1 id=&quot;sass-syntactically-awesome-style-sheets-1&quot;&gt;SASS (SYNTACTICALLY AWESOME STYLE SHEETS)&lt;/h1&gt;

&lt;p&gt;Install using ruby gems — &lt;code class=&quot;codeblock&quot;&gt;gem install sass&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;23px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;list-style-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When processed using the &lt;strong&gt;saas&lt;/strong&gt; command, it will emit the following;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;23px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;list-style-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;saas&lt;/strong&gt; command line tool has a &lt;strong&gt;–watch&lt;/strong&gt; option, it runs continuosly and watches the scss that you created, everytime you change the scss file, it will automatically emit the resulting CSS file&lt;/p&gt;

&lt;p&gt;SAAS is a superset of CSS3, the extra syntax are syntactic sugar to enable cleaner nestings, provide modular approach to CSS source file management using @import, string interpolations, mixins (for inheritance), use of variables inside the CSS etc. Head over to &lt;a href=&quot;http://sass-lang.com/tutorial.html&quot;&gt;SasS lang site tutorial&lt;/a&gt; for more info.&lt;/p&gt;

&lt;h1 id=&quot;web-server&quot;&gt;WEB SERVER&lt;/h1&gt;

&lt;p&gt;For quick and dirty serving up of static files without server-side processing, here are my favorites&lt;/p&gt;

&lt;h3 id=&quot;python&quot;&gt;PYTHON&lt;/h3&gt;

&lt;p&gt;invoke &lt;em&gt;python -m SimpleHTTPServer&lt;/em&gt; on any directory or folder, the contents of the folder will be served up on &lt;strong&gt;http://localhost:8000&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;node&quot;&gt;NODE&lt;/h3&gt;

&lt;p&gt;Get a terminal window,&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

$ sudo npm -g install http-server
$ cd /path/to/your/web/files
$ http-server

&lt;/pre&gt;

&lt;p&gt;This will serve the contents of the dir to http://localhost:8080&lt;/p&gt;

&lt;h3 id=&quot;php-standalone-server&quot;&gt;PHP STANDALONE SERVER&lt;/h3&gt;

&lt;p&gt;Since PHP 5.4, you can use the stand alone server. There is no need for Apache anymore — provided that you have installed PHP CLI as well.&lt;/p&gt;

&lt;p&gt;From a terminal window type &lt;code class=&quot;codeblock&quot;&gt;php -S localhost:8080&lt;/code&gt;. It will start serving the files of the current directory.&lt;/p&gt;

&lt;h1 id=&quot;quick-restful-endpoints&quot;&gt;QUICK RESTFUL ENDPOINTS&lt;/h1&gt;

&lt;h3 id=&quot;sinatra&quot;&gt;SINATRA&lt;/h3&gt;

&lt;p&gt;Sinatra a small ruby DSL (Domain Specific Language), it’s often referred to as a microframework. There are other microframeworks e.g. &lt;a href=&quot;http://www.sparkjava.com/&quot;&gt;Spark (Java)&lt;/a&gt;, &lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask (Python)&lt;/a&gt;, &lt;a href=&quot;http://www.cherrypy.org/&quot;&gt;CherryPy (Python)&lt;/a&gt;, Limonade (PHP), &lt;a href=&quot;http://www.slimframework.com/&quot;&gt;Slim (PHP)&lt;/a&gt; and many others.&lt;/p&gt;

&lt;p&gt;You need &lt;strong&gt;ruby &amp;amp; rubygems&lt;/strong&gt; before you can install sinatra. Install instructions for Ruby are on the ruby site&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

# install sinatra

$ gem install sinatra
$ gem install sinatra-contrib
$ gem install thin

&lt;/pre&gt;

&lt;p&gt;You actually don’t need thin, but might as well install, it seems to be the favored setup of programmers using Sinatra. You will need to install sinatra-contrib if you will use the hot-reloading of Sinatra (and you will really need to hot-reload, lest you want to be very proficient pressing CTRL-C to stop the server then start it all over again)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# quick (but not dirty) and simple&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# restful web endpoint&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# this app will listen on http://localhost:4567&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# filename: first.rb &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# how to run : $ ruby first.rb &lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;return something&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/somethingelse&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;return something else&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;http://localhost:4567&lt;/em&gt; displays “return something”; &lt;em&gt;http://localhost:4567/somethingelse&lt;/em&gt; displays “return something else” in the browser.&lt;/p&gt;

&lt;p&gt;Each get in the sinatra source file is a method call, a route actually. You don’t have to write literal ruby strings, it can be function calls, expressions etc, as long as it resolves to a string. This is handy when (quickly) mocking up server end points for AJAX clients. There are some &lt;a href=&quot;/sinatra/&quot;&gt;Sinatra notes here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;node-1&quot;&gt;NODE&lt;/h3&gt;

&lt;p&gt;Node is JavaScript on the server side. You need to understand JavaScript core language (pretty well, cut and paste JavaScript experience won’t cut it here).&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://nodejs.org/&quot;&gt;NodeJS site&lt;/a&gt; has the install instructions, head over there to download, install npm too (Node Package Manager). It can also be instlled via brew on OSX (brew install node)&lt;/p&gt;

&lt;p&gt;The simplest node program from the (NodeJS website)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// server.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello World\n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1337&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Server running at http://127.0.0.1:1337/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run the code using &lt;code class=&quot;codeblock&quot;&gt;node server.js&lt;/code&gt;. Get a browser and open &lt;em&gt;http://localhost:1337&lt;/em&gt;. You can already use this to mock REST endpoints, just replace the string inside res.end(‘Hello World’);&lt;/p&gt;

&lt;p&gt;A more involved node server code sample is below&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Landing page&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;about&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;About&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Yeah Foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Yeah Goo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;xoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callxoo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callxoo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;empname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Ted Hagos&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;tedhagos@gmail.com&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// I cannot return the bare JS object because&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// the HTTP object of node will throw an error.&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// First type argument must be a string or buffer&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lookup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;decodeURI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thedata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// Check first if we are looking for an HTML file&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lookup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lookup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;woops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filecontent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;woops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;c1&quot;&gt;//console.log(filecontent);&lt;/span&gt;
						&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
						&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filecontent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;				
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;inside the else&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
				
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lookup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;inside pages&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lookup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;						
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will listen on &lt;em&gt;locahost:8080&lt;/em&gt;, if you want to change the port of the webserver, just replace the port number, it’s the line .&lt;strong&gt;listen(8080)&lt;/strong&gt;, remember not to pick port numbers lower than 1024, they are privileged ports.&lt;/p&gt;

&lt;p&gt;The routes here are inside the pages object literal, replace them with your own RESTful endpoints&lt;/p&gt;

&lt;h1 id=&quot;oop-frameworks-for-javascript&quot;&gt;OOP FRAMEWORKS FOR JAVASCRIPT&lt;/h1&gt;

&lt;p&gt;You can just tough it out, do not pay attention to OO abstractions for HTML5 Canvas, SVG or WebGL programming; just code it on the fly, really up to you, but it can get very hairy (it will, and pretty quickly too). &lt;/p&gt;

&lt;p&gt;A coarse grained abstractions of the animation objects goes a long way. JavaScript is equipped with Prototypal inheritance and Functions are pretty much object factories; You can use them to achieve coarse grained abstractions of the problem domain.&lt;/p&gt;

&lt;p&gt;To use a more classical OO approach in JavaScript there are plenty of extensions to the JavaScript language, a &lt;a href=&quot;https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS&quot;&gt;list of things that compile or extend JavaScript is here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;debugging-testing--profiling-tools&quot;&gt;6. DEBUGGING, TESTING &amp;amp; PROFILING TOOLS&lt;/h1&gt;

&lt;p&gt;Developing in JavaScript is painful without debug and watch tools. Webkit browsers (Safari and Chrome) have Developer tools, they can very useful during development. Another tool to use is &lt;a href=&quot;http://getfirebug.com/&quot;&gt;FireBug&lt;/a&gt; of Mozilla FireFox browser.&lt;/p&gt;

&lt;p&gt;You’ve got to do unit-testing, you just got to—this shouldn’t be up for debate anymore. Things to use are;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://pivotal.github.com/jasmine/&quot;&gt;Jasmine&lt;/a&gt; - A BDD (Behavior Driven Development) test framework&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://qunitjs.com/&quot;&gt;QUnit&lt;/a&gt; - Used by JQuery, JQueryUI and JQuery Mobile projects. A unit test framework.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://funcunit.com/&quot;&gt;FuncUnit&lt;/a&gt; - uses JQuery syntax&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.yahoo.com/yui/yuitest/&quot;&gt;YUITest&lt;/a&gt; - by Yahoo&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Sinatra</title>
   <link href="http://thelogbox.com/ruby/sinatra/sinatra"/>
   <updated>2012-10-12T00:00:00+08:00</updated>
   <id>http://thelogbox.com/ruby/sinatra/sinatra</id>
   <content type="html">&lt;h2 id=&quot;get-up-and-running&quot;&gt;GET UP AND RUNNING&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Switch your ruby version &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Install Sinatra &lt;code class=&quot;codeblock&quot;&gt;sudo gem install sinatra&lt;/code&gt;. While you are it, install the &lt;em&gt;thin&lt;/em&gt; package as well &lt;code class=&quot;codeblock&quot;&gt;sudo gem install thin&lt;/code&gt;. Sinatra apps will run without thin&lt;/li&gt;
  &lt;li&gt;Make sure it’s running, do the HelloWorld app &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# helloworld.rb&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run the web program using &lt;code class=&quot;codeblock&quot;&gt;ruby helloworld.rb&lt;/code&gt;. Open a web browser, if you can you see “Hello World” on http://localhost:4567, then Sinatra is up and running and you did not make a mess of the sample code &lt;/p&gt;

&lt;h2 id=&quot;structure-and-abstraction&quot;&gt;STRUCTURE AND ABSTRACTION&lt;/h2&gt;

&lt;p&gt;It doesn’t hurt to enclose the Sinatra routes in classes&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# helloworld.rb&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
   		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;run it again using &lt;code class=&quot;codeblock&quot;&gt;ruby helloworld.rb&lt;/code&gt;, you may need to stop the currently running web server install on the terminal (CTRL-C)&lt;/p&gt;

&lt;h2 id=&quot;rackup&quot;&gt;RACKUP&lt;/h2&gt;

&lt;p&gt;Create a config.ru file&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# config.ru&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;helloworld&amp;#39;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;First.new&lt;/em&gt;  would have worked as well. Creating a new instance of a &lt;em&gt;Sinatra::Base&lt;/em&gt; class will also run the web app&lt;/p&gt;

&lt;p&gt;You can put lots of things inside the config.ru, but we’ll get to that later on&lt;/p&gt;

&lt;h2 id=&quot;routes&quot;&gt;Routes&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt; 

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Landing page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/client&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Client page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Contact page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;get&lt;/strong&gt; is a method call, its not a method definition, this is one of the reasons why Sinatra is DSL (Domain Specific Language), its domain is RESTful web apps&lt;/p&gt;

&lt;h2 id=&quot;querystring-parameters&quot;&gt;4.1 QueryString parameters&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt; 

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Landing page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/client/:clientname&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	
		&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:clientname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;You searched for &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Contact page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;QueryString parameters can be accessed using the &lt;strong&gt;params&lt;/strong&gt; array, make sure that querystring arguments is a ruby symbol. The get/client call has two lines inside it, but only the last line (which is a string) will be returned by the HTTP request&lt;/p&gt;

&lt;h2 id=&quot;optional-trailing-slash&quot;&gt;Optional trailing slash&lt;/h2&gt;

&lt;p&gt;Make the trailing slash optional in QueryString by adding &lt;strong&gt;/?&lt;/strong&gt; in the get method&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra/reloader&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;development?&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt; 

	&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;register&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Reloader&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Landing page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/client/:clientname/?&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	
		&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:clientname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;You searched for &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Contact page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;hot-reloading&quot;&gt;HOT RELOADING&lt;/h2&gt;

&lt;p&gt;The default setup of Sinatra will not detect any changes in your source file, which means everytime you make a change in the source, you need to stop (CTRL-C) the web server, then start it again. The Sinatra Reloader can help with this. &lt;/p&gt;

&lt;p&gt;Before you can use the Sinatra::Reloader, you need to get the gem first. &lt;strong&gt;gem install sintra-contrib&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra/reloader&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;development?&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt; 

	&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;register&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Reloader&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;# APP methods&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Landing page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/client/:clientname&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	
		&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:clientname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;You searched for &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Contact page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Just &lt;em&gt;require&lt;/em&gt; the sinatra/reloader and register it inside your app, like the code above. Now, there is no need to restart the web server when changes occur in the source file. Use this only for development, not in production. There are other ways to achieve hot-reloading, go to the &lt;a href=&quot;http://www.sinatrarb.com/faq.html&quot;&gt;Sinatra FAQ&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Sinatra</title>
   <link href="http://thelogbox.com/sinatra/sinatra"/>
   <updated>2012-10-12T00:00:00+08:00</updated>
   <id>http://thelogbox.com/sinatra/sinatra</id>
   <content type="html">&lt;h2 id=&quot;get-up-and-running&quot;&gt;GET UP AND RUNNING&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Switch your ruby version &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Install Sinatra &lt;code class=&quot;codeblock&quot;&gt;sudo gem install sinatra&lt;/code&gt;. While you are it, install the &lt;em&gt;thin&lt;/em&gt; package as well &lt;code class=&quot;codeblock&quot;&gt;sudo gem install thin&lt;/code&gt;. Sinatra apps will run without thin&lt;/li&gt;
  &lt;li&gt;Make sure it’s running, do the HelloWorld app &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# helloworld.rb&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run the web program using &lt;code class=&quot;codeblock&quot;&gt;ruby helloworld.rb&lt;/code&gt;. Open a web browser, if you can you see “Hello World” on http://localhost:4567, then Sinatra is up and running and you did not make a mess of the sample code &lt;/p&gt;

&lt;h2 id=&quot;structure-and-abstraction&quot;&gt;STRUCTURE AND ABSTRACTION&lt;/h2&gt;

&lt;p&gt;It doesn’t hurt to enclose the Sinatra routes in classes&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# helloworld.rb&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
   		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;run it again using &lt;code class=&quot;codeblock&quot;&gt;ruby helloworld.rb&lt;/code&gt;, you may need to stop the currently running web server install on the terminal (CTRL-C)&lt;/p&gt;

&lt;h2 id=&quot;rackup&quot;&gt;RACKUP&lt;/h2&gt;

&lt;p&gt;Create a config.ru file&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# config.ru&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;helloworld&amp;#39;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;First.new&lt;/em&gt;  would have worked as well. Creating a new instance of a &lt;em&gt;Sinatra::Base&lt;/em&gt; class will also run the web app&lt;/p&gt;

&lt;p&gt;You can put lots of things inside the config.ru, but we’ll get to that later on&lt;/p&gt;

&lt;h2 id=&quot;routes&quot;&gt;Routes&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt; 

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Landing page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/client&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Client page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Contact page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;get&lt;/strong&gt; is a method call, its not a method definition, this is one of the reasons why Sinatra is DSL (Domain Specific Language), its domain is RESTful web apps&lt;/p&gt;

&lt;h2 id=&quot;querystring-parameters&quot;&gt;4.1 QueryString parameters&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt; 

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Landing page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/client/:clientname&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	
		&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:clientname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;You searched for &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Contact page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;QueryString parameters can be accessed using the &lt;strong&gt;params&lt;/strong&gt; array, make sure that querystring arguments is a ruby symbol. The get/client call has two lines inside it, but only the last line (which is a string) will be returned by the HTTP request&lt;/p&gt;

&lt;h2 id=&quot;optional-trailing-slash&quot;&gt;Optional trailing slash&lt;/h2&gt;

&lt;p&gt;Make the trailing slash optional in QueryString by adding &lt;strong&gt;/?&lt;/strong&gt; in the get method&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra/reloader&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;development?&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt; 

	&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;register&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Reloader&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Landing page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/client/:clientname/?&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	
		&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:clientname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;You searched for &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Contact page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;hot-reloading&quot;&gt;HOT RELOADING&lt;/h2&gt;

&lt;p&gt;The default setup of Sinatra will not detect any changes in your source file, which means everytime you make a change in the source, you need to stop (CTRL-C) the web server, then start it again. The Sinatra Reloader can help with this. &lt;/p&gt;

&lt;p&gt;Before you can use the Sinatra::Reloader, you need to get the gem first. &lt;strong&gt;gem install sintra-contrib&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1.9&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra/reloader&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;development?&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt; 

	&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;register&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Reloader&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;# APP methods&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Landing page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/client/:clientname&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	
		&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:clientname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;You searched for &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&amp;quot;Contact page&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Just &lt;em&gt;require&lt;/em&gt; the sinatra/reloader and register it inside your app, like the code above. Now, there is no need to restart the web server when changes occur in the source file. Use this only for development, not in production. There are other ways to achieve hot-reloading, go to the &lt;a href=&quot;http://www.sinatrarb.com/faq.html&quot;&gt;Sinatra FAQ&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>galaxy tab, android development</title>
   <link href="http://thelogbox.com/galaxy-tab-prepare-for-dev"/>
   <updated>2012-10-12T00:00:00+08:00</updated>
   <id>http://thelogbox.com/galaxy-tab-prepare-for-dev</id>
   <content type="html">&lt;p&gt;To use the galaxy tab as a testing device;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to &lt;em&gt;Settings&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Then &lt;em&gt;Applications&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Enable &lt;strong&gt;USB Debugging&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Do the above steps while the device is not yet connected to the PC, otherwise, the USB debugging options will be greyed out.&lt;/p&gt;

&lt;p&gt;Connect the device, test it by running either &lt;strong&gt;adb&lt;/strong&gt; or &lt;strong&gt;logcat&lt;/strong&gt; on Terminal window. &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Line Graphing in HTML5 Canvas</title>
   <link href="http://thelogbox.com/typescript-html5-canvas-cartesian"/>
   <updated>2012-10-10T00:00:00+08:00</updated>
   <id>http://thelogbox.com/typescript-html5-canvas-cartesian</id>
   <content type="html">&lt;p&gt;This is an exercise on the HTML5 canvas, so it will use canvas. Admittedly, this would (probably) be a lot simpler if this was done in SVG, because repositioning the vertices and the lines could be handled in a more straightforward way—each vertex and line is a DOM element, which means they can easily be bound to events such as click or mousedown. Anyway, it still a good coding calesthenics, so canvas it is.  &lt;/p&gt;

&lt;p&gt;The exercise has lots of parts. The cartesian plane needs to be drawn, a way to remember what has been drawn on canvas is also needed and the canvas needs a little bit of state management (counting the number of clicks)—one click means that we are about to draw a line, two clicks means we have chosen the second vertex and we need to do three things 1) complete the data of the line 2) store the information of the newly created line and then 3) redraw all of the previous lines we have created. It could be an ardous task if we won’t try apply some form of abstractions on all of these things—a procedural-ish code might cut it, will cut it, but an OO style programming I think is warranted, even on this trivial exercise. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/typescript-first-notes/&quot;&gt;TypeScript&lt;/a&gt; came out just recently, even at its early stages, its OO and static type checking could be useful to this exercise, hence, TypeScript it is&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/cartesian-canvas.png&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-to-do-it&quot;&gt;How to do it&lt;/h1&gt;

&lt;h2 id=&quot;create-the-html-part-filename--line-drawhtml&quot;&gt;1. Create the HTML part (filename = line-draw.html)&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		
		
		&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/title&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;noscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;demo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
		&lt;span class=&quot;nx&quot;&gt;Please&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;again&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
		&lt;span class=&quot;nx&quot;&gt;Thanks&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/noscript&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;MathE.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;default-canvas&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;capable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;displaying&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HTML5&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;components&lt;/span&gt;		
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/canvas&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The default-canvas html element is not important to the actual code, it is just a quick and dirty way to check if the browser being used does not support the canvas element, you could use Modernizr.JS for a more proper way of checking for HTML5 capability of the browser. The NOSCRIPT tag is also a quick and dirty way of detecting if JavaScript is disabled in the browser—I just don’t see how this can kind of exercise can degrade gracefully if JavaScript is diabled, so its an all or nothing deal; No JavaScript, no demo.&lt;/p&gt;

&lt;h2 id=&quot;the-typescript-file&quot;&gt;2. The TypeScript file&lt;/h2&gt;

&lt;p&gt;Create a TypeScript source file on the same directory as &lt;em&gt;line-draw.html&lt;/em&gt;, for the exercise, I named it &lt;em&gt;MathE.ts&lt;/em&gt;, this will later emit a file called &lt;em&gt;MathE.js&lt;/em&gt; which is the &lt;strong&gt;src&lt;/strong&gt; of our script tag on the HTML file &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// filename : MathE.js &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// An example of using HTML5 canvas to do primitive lines on a cartesian plane.&lt;/span&gt;


&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isDirty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clickcount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cartesian&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cartesian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vertices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vertices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pname1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pname2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// setup the canvas&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HTMLCanvasElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;canvas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;border&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1px solid gray&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// BEGIN events&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// this gave me a problem, when I am using idiomatic JS to assign &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// a function to onclick, there are weird problems, the number is resulting&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// to isNan, I should investigate why TypeScript is behaving this way.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// I had to use the arrow functions for closures&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmousedown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmousemove&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvMouseMove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// END events&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cartesian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vertices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vertices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HTMLElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;div&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//this.output.style.border = &amp;quot;1px solid #fafafa&amp;quot;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//this.output.style.padding = &amp;quot;15px&amp;quot;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//this.output.style.font-size = &amp;quot;11px&amp;quot;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;READY&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//this.output = &amp;lt;HTMLElement&amp;gt;document.getElementById(&amp;#39;output&amp;#39;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//this.output.innerHTML = &amp;quot;I am ready&amp;quot;;&lt;/span&gt;



  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearPaper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;READY&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvMouseMove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDirty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redraw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//this.ctx.closePath();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;//this.redraw();           &lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//this.output.innerHTML = &amp;quot;MouseMove&amp;quot;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clickcount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vertices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;markPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clickcount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDirty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDirty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vertices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;pname1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;pname2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redraw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;markPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clickcount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//I don&amp;#39;t know what to do with this one&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;markPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tempstyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDirty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tempstyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;redraw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tempStrokeStyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tempFillStyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tempLineWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deleteme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrlength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;templine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


    &lt;span class=&quot;c1&quot;&gt;// temporary code, because the mousemove erases the first vertex drawn&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// end temporary code&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tempStrokeStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tempFillStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tempLineWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Vertices class&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// A simple stack of vertex names&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// currently, it is only from A - Z&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vertices&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;varr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;varr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;printAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;varr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;varr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// get the next available vertex name&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;getNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;varr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cartesian&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cartesian_unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 40 pixels per cartesian unit&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ax_tick_count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ay_tick_count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ax_tick_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian_unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ay_tick_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian_unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// this is not working as expected ;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getCartesianUnits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian_unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drawX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tickcount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian_unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian_unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tickcount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//c.height /2;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tickcount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//cx.beginPath();&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//cx.moveTo(0,c.height/2);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//cx.lineTo(c.width, c.height/2);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//cx.stroke();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// draw the tick marks&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tickcount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian_unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drawY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tickcount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian_unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian_unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tickcount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//c.width/2;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tickcount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// draw the tick marks&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tickcount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_coord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;y_coord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartesian_unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;pname1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;pname2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Lines&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;CU&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// cartesian units, this needs to be refactored&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;linearr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;currpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;addLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linearr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linearr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linearr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linearr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linearr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; : &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CU&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; , &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CU&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; | &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CU&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; , &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CU&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;br/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Compile the TypeScript source; &lt;strong&gt;$ tsc -c MathE.ts&lt;/strong&gt;. The -c flag is there so that even the comments in the TypeScript source file will be emitted in resulting JavaScript file. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>TypeScript</title>
   <link href="http://thelogbox.com/typescript-first-notes"/>
   <updated>2012-10-03T00:00:00+08:00</updated>
   <id>http://thelogbox.com/typescript-first-notes</id>
   <content type="html">&lt;p&gt;Official website is at &lt;a href=&quot;http://www.typescriptlang.org&quot;&gt;TypeScriptLang.org&lt;/a&gt;. The language was borne out of Microsoft. It looks a lot like JavaScript, because it is a superset of JavaScript;  This means all existing, valid and native JavaScript codes are already valid TypeScript codes. &lt;/p&gt;

&lt;h1 id=&quot;info&quot;&gt;INFO&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;licensed under Apache 2.0&lt;/li&gt;
  &lt;li&gt;Anders Hejlsberg is responsible for it. He gave us C#, before that he wrote Pascal compilers which got him hitched with Borland (Turbo Pascal) &lt;/li&gt;
  &lt;li&gt;typescript an be installed in lots of ways - via &lt;strong&gt;npm -g install typescript&lt;/strong&gt;, or as a Visual Studio plugin. You can also get the source via &lt;strong&gt;git clone https://git01.codeplex.com/typescript&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;the anguage specification (currently v .08) is only 97 pages (in PDF). There is no excuse not to read it &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;workflow&quot;&gt;WORKFLOW&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Create a source file with a &lt;em&gt;.ts&lt;/em&gt; file extension&lt;/li&gt;
  &lt;li&gt;Compile the .ts file using &lt;em&gt;tsc&lt;/em&gt; (typescript compiler)&lt;/li&gt;
  &lt;li&gt;Use the emitted JavaScript code any which way you need&lt;/li&gt;
  &lt;li&gt;Go through your testing motions&lt;/li&gt;
  &lt;li&gt;Rinse, repeat &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;setup&quot;&gt;SETUP&lt;/h1&gt;

&lt;p&gt;Get the compiler, either via npm (Node Package Manager) or Visual Studio Plugin or via sourcecode&lt;/p&gt;

&lt;p&gt;Make sure your environment is setup properly. Try out the &lt;strong&gt;tsc&lt;/strong&gt; command on a terminal window (cmd.exe in Windows, Terminal.app in OSX or xterm, gnome-terminal on Linux); you should get something like this;&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

$ tsc
Syntax:   tsc [options] [file ..]

Examples: tsc hello.ts
          tsc --out foo.js foo.ts
          tsc @args.txt

Options:
  -c, --comments  Emit comments to output
  --declarations  Generates corresponding .d.ts file
  -e, --exec      Execute the script after compilation
  -h, --help      Print this message
  --module KIND   Specify module code generation: &quot;commonjs&quot; (default) or &quot;amd&quot;
  --nolib         Do not include a default lib.d.ts with global declarations
  --out FILE      Concatenate and emit output to single file
  --target VER    Specify ECMAScript target version: &quot;ES3&quot; (default), or &quot;ES5&quot;
  -w, --watch     Watch output files
  @&lt;file&gt;         Insert command line options and files from a file.




Try out the **greeter.ts** sample in [typelang.org/tutorial](http://www.typescriptlang.org/Tutorial/) 

If you are using TextMate in OSX, it won&#39;t know how to handle .ts files, so when you see the &quot;Recommended Grammars&quot; dialog box, just use JavaScript.  

***

The &quot;Hello World&quot; test


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// filename: Hello.ts&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;John&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


Compile it using **tsc Hello.ts**, it will emit exactly the same code in JavaScript. It&#39;s supposed to happen because TypeScript is a superset of JavaScript. A (valid) existing JavaScript code should compile cleanly using TypeScript compiler.


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;John&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


You can run the resulting **.js** code either via *node Hello.js* or ***js Hello.js** if you have it setup on your machine.

To test the syntactic sugar, add a bit of type checking, modify Hello.ts like this


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;John&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


If you try **tsc Hello.ts** again, you will get and error like *Function declared a non-void return type, but has no return expression*. The reason for that is because we added a type-checking information on both the *args* variable and the our function itself. **args : string** means that args needs to be a string and that function Hello should return a number. The type checking is done on compile time, not runtime. 


# CODING NOTES


## CLASS CONSTRUCTION

Trying out the class and interface facilities of TypeScript


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//BoxSample.ts&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IBox&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setDim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;compile using;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;	tsc BoxSample.ts&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;outputs;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;	BoxSample.js&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//BoxSample.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


The TypeScript version does look a lot cleaner, looks like it really has potential. Just a bunch of things to remember initially;

**1.** TS adds static type checking, so the general form is **variable name [ : type ]**. It seems I can use **string, bool and number** for static type checking. In the language spec of TypeScript, there was also a mention of the **any** type, which can stand for either *bool, string, number and undefined**. If I use the **any** type though, I lose the static type checking that TS performs, I probably should not do it, since I like type checking. 

**2.** There is an **implements** keyword supported for class constructs, so I could have written the example as


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IBox&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// …&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// class body&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


It doesn&#39;t seem like I needed it though (note to self =&amp;gt; read the spec over and over again to find out why). 

## INHERITANCE AND POLYMORPHISM


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;mname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;default name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
	&lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;drawing Shape&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Drawing Circle&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;the circle&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


Inheritance works as expected, no big surprises. TypeScript uses the **extends** keyword to denote both class and interface inheritance. One thing I noticed though is that if you replace the *extends** keyword with a colon (pretty much like in CSharp), it seems to have the same effect as **extends** too&amp;mdash;but better stick with *extends*, that is what the lang spec specifies for inheritance anyway.

The rule is pretty basic on inheritance. Everything that on the base class that is defined to have **public** access is automatically inherited on the derived class. That is why the *Circle* type has a **setName() and getName()** method, they were inherited from *Shape*.  

Override works as expected also, just redefine the method on the the derived class and the method becomes polymorphic 

## SUPER

**super** refers to an instance of the super class or the parent class. Old hands of Java, CSharp, C++ should not be surprised, the super behaves as expected. 


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;base::foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;base::ctor&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Derived&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;derived::foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;derived::ctor&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Derived&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


## OPTIONAL ARGUMENTS TO FUNCTIONS

Two ways to do optional parameters/arguments. 1) You can add a question mark right after the argument name, or 2) you can provide a default value for the argument. The constructor of class Square below uses method #2 and class Circle uses method #1 


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;pname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;pcolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mcolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pcolor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pcolor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Circle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;pname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;pcolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;def name&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mcolor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pcolor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;new square&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



## Overloading

Don&#39;t get too excited yet about overloading, it&#39;s not like C# or Java (yet, I hope)


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	
	&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;	this does not work, if you vary the number of arguments on the overload&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;	declarations, it throws a compile error&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;	constructor();&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;	constructor(x:number, y:number);&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;	*/&lt;/span&gt;


	&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}){&lt;/span&gt;
	
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;	The overloaded forms of foo() is accepted because I only varied the type of x.		&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;	*/&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


You can have multiple declarations of method, but only one of them can have an implmentation. Also, you cannot vary the number of arguments in the method.


## ARROW EXPRESSIONS

This looks purely like syntactic sugar, but just the same, note it. The **() =&amp;gt; {}** notation was added so that you don&#39;t have to say **function() {}** &amp;mdash; this reminds me of CoffeeScript though. 


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;mname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello Box&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello Goo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




1. TS looks usable if you want to add some OO organization to your code; CoffeeScript will do that for you too, so it comes down to a choice whether you like the Ruby syntax or JavaScript 
2. TS is not a replacement for JavaScript. You need to know JavaScript first before you can move conveniently in TypeScript &amp;mdash; after all, TypeScript is a superset of JavaScript
3. You need a basic understanding of classical OO (Object Oriented) concepts before you can use the class abstractions of TypeScript. C#, Java and C++ programmers should be right at home
4. Classical JavaScript and TypeScript syntax can be mashup-ed, it&#39;s up to you &amp;mdash; but I found it confusing, I think this is where coding practices and conventions can help a lot
5. Type checking is a relief, I like that a lot &amp;mdash; this is probably due to my experience bias (statically typed languages) 



















&lt;/file&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>C# Fundamentals</title>
   <link href="http://thelogbox.com/csharp-programming-notes"/>
   <updated>2012-09-23T00:00:00+08:00</updated>
   <id>http://thelogbox.com/csharp-programming-notes</id>
   <content type="html">&lt;h2 id=&quot;variables&quot;&gt;1 Variables&lt;/h2&gt;

&lt;p&gt;Think of variables as if they are shoe boxes. You can put things inside a shoe box like a ball or paper etc. The box functions basically as a storage mechanism. And variables are exactly like that. They store things inside them so you can get them out for later use.  &lt;/p&gt;

&lt;p&gt;At one time you can put a red ball on the shoe box. You can take it out at a later time and probably put something new, perhaps a green ball. But it has to be a ball. It can’t be anything else, you can’t put a pen to a box that previously held a ball. The technical reason for this constraint is called strict typing. If defined a variable to be of a specific type, it can only hold that type and nothing else.&lt;/p&gt;

&lt;p&gt;C# variables are created by specifying the &lt;strong&gt;type&lt;/strong&gt; of data you want it to hold, giving the variable a &lt;strong&gt;name&lt;/strong&gt; and optionally setting it to an initial value. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int x = 10;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code sample above has all the elements for a proper definition of a variable. The type is &lt;strong&gt;int&lt;/strong&gt;, the name of the variable is &lt;strong&gt;x&lt;/strong&gt; and we gave it an initial value of &lt;strong&gt;10&lt;/strong&gt;. The int word has a special meaning in C#. It is a keyword or a reserved word. I did not make that up. The name &lt;strong&gt;x&lt;/strong&gt; is made up. It could have been any other word like thisvar or thisnumber or mynumber. We can freely choose names for our variables. There are some simple rules we need to follow when naming variables, which we will discuss later.&lt;/p&gt;

&lt;h3 id=&quot;basic-data-types&quot;&gt;1.1 Basic Data Types&lt;/h3&gt;

&lt;p&gt;You can work with a variety of data in C#. You can work with numbers, booleans and words or &lt;strong&gt;Strings&lt;/strong&gt; just to name a few. The following table lists the available types of data in C#&lt;/p&gt;

&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col class=&quot;left&quot; /&gt;

&lt;col class=&quot;left&quot; /&gt;

&lt;col class=&quot;left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;left&quot;&gt;Type&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;left&quot;&gt;Description&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;left&quot;&gt;Range of values&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;bool&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;Truthyness&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;true or false&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;byte&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;8 bit unsigned integer&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;0 to 255&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;char&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;16 bit Unicode character&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;U +0000 to U + FFFF&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;decimal&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;128 bit precise decimal value&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;double&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;64 bit double precision float point type&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;float&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;32 bit single precision float point type&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;int&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;32 bit signed integer&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;long&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;64 bit signed integer&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;sbyte&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;8 bit signed integer&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;short&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;16 bit signed integer&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;uint&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;32 bit unsigned integer&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;ulong&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;64 bit unsigned integer&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;ushort&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;16 bit unsigned integer&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The code snippet below shows how to declare variables of these types&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bool a = true;
byte b = 1;
char c = &#39;a&#39;;
decimal d = 1.0m;
double e = 1.0;
float f = 1.0f;
int g = 1;
long h = 1;
sbyte i = 1;
short j = 1;
uint k = 1;
ulong l = 1;
ushort m = 1;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Most of code sample above looks straightforward except for the declarations of &lt;strong&gt;decimal&lt;/strong&gt; and &lt;strong&gt;float&lt;/strong&gt;. The literal value “1.0” is actually a &lt;strong&gt;double&lt;/strong&gt; literal hence you cannot assign a double value to a float variable because the float type is a smaller container than a double type. You will lose some data and .NET will prevent you from making silly mistakes like that. It will throw you an error if you try to assign a double value to a float variable. Hence, we needed to suffix our literal value with &lt;strong&gt;f&lt;/strong&gt;, which means float. Does this mean we can assign a float value to a variable of type double? Yes.  &lt;/p&gt;

&lt;p&gt;If float is smaller than a double and double is smaller than decimal, then we should be able to assign a double value to a variable of type decimal. Not quite. It is quite convenient to remember the heuristics that a small fish can be eaten by a bigger fish which can be eaten by a yet bigger fish, but unfortunately this does not always hold true, generally it does but not always. When working with values of different data types, the final arbitter is the language specification. Numeric conversions or type coercions are are predefined by C#. &lt;strong&gt;This is way to deep to discuss here. Need to keep it simple&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Explicit conversions: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/yht2cx7b.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/yht2cx7b.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Implicit conversions: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/y5b434w4%28v=vs.80%29.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/y5b434w4%28v=vs.80%29.aspx&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;strict-and-static-typing&quot;&gt;1.2 Strict and Static Typing&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;TODO Additional notes&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;dynamic type&lt;/li&gt;
      &lt;li&gt;String type and the @ literal&lt;/li&gt;
      &lt;li&gt;and pointer types&lt;/li&gt;
      &lt;li&gt;sizeof&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;variable-naming-rules&quot;&gt;1.3 Variable naming rules&lt;/h3&gt;

&lt;p&gt;When naming your variables, just keep the following in mind. Do not:
1.  Start the name with a number
2.  Include special characters or the white space
3.  Use a word that is special or reserved&lt;/p&gt;

&lt;p&gt;You can use the underscore or the the @ symbol as the first letter of the variable name.&lt;/p&gt;

&lt;h3 id=&quot;keywords&quot;&gt;1.4 Keywords&lt;/h3&gt;

&lt;p&gt;You don’t have to memorize this right now, but in time maybe you will. For now, just don’t use any of these when naming your variables&lt;/p&gt;

&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col class=&quot;left&quot; /&gt;

&lt;col class=&quot;left&quot; /&gt;

&lt;col class=&quot;left&quot; /&gt;

&lt;col class=&quot;left&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;abstract&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;as&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;base&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;bool&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;break&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;byte&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;case&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;catch&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;char&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;checked&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;class&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;const&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;continue&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;decimal&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;default&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;delegate&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;do&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;double&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;else&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;enum&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;event&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;explicit&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;extern&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;false&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;finally&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;fixed&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;float&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;for&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;foreach&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;goto&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;if&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;implicit&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;in&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;in(generic modifier&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;int&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;interface&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;internal&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;is&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;lock&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;long&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;namespace&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;new&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;null&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;object&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;operator&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;out&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;out (generic modifier)&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;override&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;params&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;private&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;protected&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;public&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;readonly&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;ref&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;return&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;sbyte&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;sealed&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;short&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;sizeof&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;stackalloc&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;static&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;string&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;struct&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;switch&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;this&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;throw&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;true&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;try&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;typeof&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;uint&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;ulong&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;unchecked&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;unsafe&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;ushort&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;using&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;virtual&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;void&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;volatile&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;while&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The list of keywords are maintained at this page &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/x53a06bb.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/x53a06bb.aspx&lt;/a&gt;. Microsoft’s MSDN team does a decent job of keeping these pages updated.&lt;/p&gt;

&lt;h2 id=&quot;constants&quot;&gt;2 Constants&lt;/h2&gt;

&lt;p&gt;Constants are placeholders, pretty much like variables, but once you define a constant, you cannot change their values at a later time. &lt;/p&gt;

&lt;p&gt;To declare a constant, use the &lt;strong&gt;const&lt;/strong&gt; keyword&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;const double PI = 3.14159;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;literals&quot;&gt;2.1 Literals&lt;/h3&gt;

&lt;p&gt;Literals are fixed values which do not change. In that way, they seem a lot like constants&lt;/p&gt;

&lt;h2 id=&quot;data-types&quot;&gt;3 Data Types&lt;/h2&gt;

&lt;h2 id=&quot;operators&quot;&gt;4 Operators&lt;/h2&gt;

&lt;h2 id=&quot;control-flow&quot;&gt;5 Control Flow&lt;/h2&gt;

&lt;p&gt;Beyond the most basic programs, you will need more control in taming program flow. Non trivial programs require program flows that are beyond mere sequencing of statements. Sometimes we need to repeat some statements and sometimes we need to side step or avoid some statements. &lt;/p&gt;

&lt;h3 id=&quot;compound-statements&quot;&gt;5.1 Compound statements&lt;/h3&gt;

&lt;p&gt;Whenever you see a pair of curly braces, you will usually find a group of statements inside them. That is precisely their purpose, to group statements.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  /*
    Statements inside a block are executed in linear fashion.
    Start from the first statement on the top, and work
    your way down until there are no more statements
    to execute
  */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A compound statement is a statement itself, you can use it whenever you can use a statement. Although you will usually see compound statements alongside flow-control keywords such as if, while, for etc.&lt;/p&gt;

&lt;h3 id=&quot;if-statement&quot;&gt;5.2 If statement&lt;/h3&gt;

&lt;p&gt;Use the &lt;strong&gt;if&lt;/strong&gt; statement when you need to execute a group of statements if a certain condition is met. This is useful in side stepping some statements in response to a certain condition that is happening in your program. The general form of the &lt;strong&gt;if&lt;/strong&gt; statement is as follows.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if (condition) {
  // statment to execute
  // if the condition is true
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;strong&gt;condition&lt;/strong&gt; part on the code above comes in the form of equivalence expression, equality or inequality tests. Just like the ones you encountered in basic Aritmetic.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a &amp;gt; 50
b == 10
c &amp;lt; 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;else-and-else-if&quot;&gt;5.2.1  Else and Else If&lt;/h4&gt;

&lt;p&gt;The if statement actually includes some optional forms, like the else if and else branches. The complete form of the if statement is as follows;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// statement&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;another&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// statement&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;another&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// statement&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition_n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// statement  &lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// statement  &lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can write as many else ifs as you need. The way this works is that, the first condition will be tested (the first if condition), if that is true, the statements inside the first if block will be performed and then the if block is exited. The other conditions stated on else ifs and else will not be executed.&lt;/p&gt;

&lt;p&gt;On the other hand, if the condition stated on the first if is not true, the program flow will trickle down to the else ifs and will test each condition specified in them. If one of the conditions evaluates to true, then that else if block will be executed.&lt;/p&gt;

&lt;p&gt;If none of the conditions on the if and else ifs return true, then the group of statements inside the else branch will be executed. If you did not have an else block, then none of the statements will be executed if none of the specified conditions evaluates to true.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    using System;
    
    class If {
      public static void Main(){
       int a = 101;
       if(a == 1){
         Console.WriteLine(&quot;One&quot;);
       }
       else if(a == 2){
         Console.WriteLine(&quot;Two&quot;);
       }
       else if(a == 101){
         Console.WriteLine(&quot;One Hundred and One&quot;);
       }
       else {
         Console.WriteLine(&quot;Clueless&quot;);
       }
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this example, “One hundred and One” will be printed.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    using System;
    
    class If {
      public static void Main(){
        int a = 101;
        if(a == 1){
          Console.WriteLine(&quot;One&quot;);
        }
        else if(a == 2){
          Console.WriteLine(&quot;Two&quot;);
        }
        else {
          Console.WriteLine(&quot;Clueless&quot;);
        }
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code snippet above will print “Clueless” because there are no conditions that evaluate to true.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    using System;
    
    class If {
      
      public static void Main(){
        
        int a = 101;
        
        if(a == 1){
          Console.WriteLine(&quot;One&quot;);
        }
        else if(a == 2){
          Console.WriteLine(&quot;Two&quot;);
        }
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code snippet above will not do anything. It will not print anything because none of the conditions evaluated to true, and there is no else branch.&lt;/p&gt;

&lt;h3 id=&quot;switch-statement&quot;&gt;5.3 Switch statement&lt;/h3&gt;

&lt;p&gt;The switch statement is another branching mechanism. It passes control though each case statement inside the switch block. The case statement expects a constant value, so you cannot do something like case == 1. See the example code for more info.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using System;

class Switch {  
  public static void Main(){
    int a = 3;
    switch(a){
      case 1:
        Console.WriteLine(&quot;One&quot;);
        break;
      case 2:
        Console.WriteLine(&quot;Two&quot;);
        break;
      case 3:
        Console.WriteLine(&quot;Three&quot;);
        break;
      default:
        Console.WriteLine(&quot;Default&quot;);
        break;
    } 
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Why is there a break statement inside each case–because withou the break statement, the flow of control will cascade to the next case or default statement–that is not what you want. As a matter of exercise, try removing the break on the case statements and see what happens.&lt;/p&gt;

&lt;p&gt;The switch can also handle string arguments, not only integers.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using System;

class Switch {
  public static void Main(){    
    string a = &quot;1&quot;;
    
    switch(a){
      case &quot;1&quot;:
        Console.WriteLine(&quot;One&quot;);
        break;
      case &quot;2&quot;:
        Console.WriteLine(&quot;Two&quot;);
        break;
      case &quot;3&quot;:
        Console.WriteLine(&quot;Three&quot;);
        break;
      default:
        Console.WriteLine(&quot;Default&quot;);
        break;
    } 
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;while-statement&quot;&gt;5.4 While statement&lt;/h3&gt;

&lt;p&gt;A looping mechanism. Use this if you would like to perform a group of statements repeatedly. General format is while(expression) statement – if you need to execute more than one statmeent, use the curly braces to group the statements.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using System;

class While {
  
  public static void Main(){
    
    int a = 0;
    
    while(a &amp;lt; 10){
      Console.WriteLine(&quot;Value of a = &quot; + a++);
    }
    
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The expression a++ is syntactically equivalent to a = a + 1, it simply adds one to current value of &lt;strong&gt;a&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;for-statement&quot;&gt;5.5 For statement&lt;/h3&gt;

&lt;p&gt;The for loop is doing what the while loop is doing as well, it executes a group of statement repeatedly. The format of the for loop is a bit more involved though. The for loop has three (optional) arguments inside it. The arguments, if you provide it, changes the behavior of the for loop.&lt;/p&gt;

&lt;p&gt;Let’s rewrite the while loop example using the for loop.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using System;

class ForLoop {

  public static void Main(){
    for(int a = 0; a &amp;lt; 10 ; a++){
      Console.WriteLine(&quot;Value of a = &quot; + a);
    }   
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Take a closer look at the form of the for-loop, it is actually like this; for(initializer ; condition ; iterator) statement.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;initializer&lt;/strong&gt; - sets the initial value of a counter, in our sample, this counter is the variable a&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;condition&lt;/strong&gt; - you have to stop somewhere, other wise you will have a loop that doesn’t terminate. This is an expresion that evaluates to a boolean value. While this expression evaluates to true, the statement inside the body for-loop will keep on executing. When this expression evaluates to false, the loop terminates.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;iterator&lt;/strong&gt; - this expression defines what happens after each iteration of the loop, this is typically used to either increment or decrement a counter variable, but you can get creative with it&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;strong&gt;initializer&lt;/strong&gt; and &lt;strong&gt;iterator&lt;/strong&gt; arguments of the for loop takes more than one value, you just need to separate them with commas. As a beginning programmer though, you probably would have a less easy time making sense of convoluted codes like that, but just to show what else you can do with for-loops, take a look at the following code.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using System;

class ForLoop {
  public static void Main(){
    for(int a = 0, b = 10; a &amp;lt; 10 ; a++, b--, foo()){
      Console.WriteLine(&quot;Value of a, b = &quot; + a + &quot; , &quot; + b);
      }   
    }
  
  static void foo(){
    Console.WriteLine(&quot;Foo&quot;);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this sample code, two variables (a and b) were initialized. Variable a was set to 0 and variable b was set to 10, they are just separated by commas (not semi colon). In the iterator part of the loop, variable a is incremented by 1 and variable b is decremented by 1—not only that, you can also insert function calls in the iterator section, just like what we did in this sample code. Each time the for-loop iterates, function foo() is called.&lt;/p&gt;

&lt;h3 id=&quot;nesting&quot;&gt;5.6 Nesting&lt;/h3&gt;

&lt;p&gt;You can write loops inside other loops, ifs inside other ifs, switches inside ifs or whatever combination you can imagine (or need). Here is an example of a for-loop nested inside a for-loop.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using System;

class ForLoop {

  public static void Main(){

    for(int i = 1; i &amp;lt;= 5; i++){
      for(int j = 1; j &amp;lt;= 5; j++){
        Console.WriteLine(&quot;values of i and j are {0} {1}&quot;, i,j);
      }
    }   
  }
    
}

/*

the above code produces the output

values of i and j are 1 1
values of i and j are 1 2
values of i and j are 1 3
values of i and j are 1 4
values of i and j are 1 5
values of i and j are 2 1
values of i and j are 2 2
values of i and j are 2 3
values of i and j are 2 4
values of i and j are 2 5
values of i and j are 3 1
values of i and j are 3 2
values of i and j are 3 3
values of i and j are 3 4
values of i and j are 3 5
values of i and j are 4 1
values of i and j are 4 2
values of i and j are 4 3
values of i and j are 4 4
values of i and j are 4 5
values of i and j are 5 1
values of i and j are 5 2
values of i and j are 5 3
values of i and j are 5 4
values of i and j are 5 5

*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The outer loop counts from 1 to 5 using the iterator (variable) i, the inner loop counts from 1 to 5 also. This kind of program produces what you might call a cartesian product. Notice how the variable i is printed 5 times–i is printed for each iteration of j. That is the reason why you have 25 rows of output; i iterates up to 5 and j iterates up to 5 also (5 * 5 = 25).&lt;/p&gt;

&lt;p&gt;NOTE : - The curly braces inside the string is called a formatter, it is somewhat similar to the sprintf of the C language—but you haven’t coded in C, which means you will need some more explanation and examples;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int a = 10;
int b = 20;

Console.WriteLine(&quot;The value of a is {0}&quot;, a);
// the actual value of the variable a will be substituted to {0}

Console.WriteLine(&quot;a is {0} and b is {1}&quot;,a,b);
//value of a will be substituted to {0}, and value of b will be subsituted to {1}
//0 corresponds to the first actual number right after the string, and 1 to next, so on
// and so forth. 0 and 1 are actually positional values of the arguments that follow
// string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can generate the multiplication table using nested loops, like the code snippet below&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using System;

class ForLoop {

  public static void Main(){

    for(int i = 1; i &amp;lt;= 5; i++){
      for(int j = 1; j &amp;lt;= 5; j++){
        Console.Write(i * j + &quot;\t&quot;);
      }
      Console.WriteLine();
    }   
  }
    
}

/*

1 2 3 4 5 
2 4 6 8 10  
3 6 9 12  15  
4 8 12  16  20  
5 10  15  20  25

*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;strong&gt;\t&lt;/strong&gt; escape sequence is to simply add a tab in between the numbers. I used Console.Write so that the line won’t add a carriage return/line feed after every number. I needed the CRLF at the end of the row, that is the reason why there is an empty WriteLine outside the inner loop.&lt;/p&gt;

&lt;h2 id=&quot;bibliography&quot;&gt;Bibliography&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Title: Inside C#. Author: Tom Archer, Publisher: Microsoft Press 2001&lt;/li&gt;
  &lt;li&gt;Title: Real World Functional Programming with examples in F# and C#. Authors: Thomas Petricek with John Skeet, Publisher: Manning Publications 2010&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Ruby Notes</title>
   <link href="http://thelogbox.com/ruby-programming-notes"/>
   <updated>2012-09-21T00:00:00+08:00</updated>
   <id>http://thelogbox.com/ruby-programming-notes</id>
   <content type="html">&lt;h1 id=&quot;use-the-ruby-version-manager-rvm&quot;&gt;1. Use the Ruby Version Manager (rvm)&lt;/h1&gt;

&lt;p&gt;Don’t incur technical debt on this one, you will be sorry if you skip this step — that is for sure. Ruby has crept in lots development areas e.g. web programming, desktop and mobile programming. It has also made its way into lots of other runtimes e.g. JVM (JRuby, Mirah) and the CLR (IronRuby). The variety of these targets will require you to work with very specific versions of Ruby (1.9.x, 1.8.x, JRuby etc). It is impractical (and quite masochistic) to manage all these environments on your own and by hand. So just get the RVM &lt;/p&gt;

&lt;p&gt;OSX already ships with Ruby. In Linux (Debian specifically) I had to get it from a repo (&lt;em&gt;sudo apt-get install ruby&lt;/em&gt;). For Windows, go to the &lt;a href=&quot;http://www.ruby-lang.org/en/downloads/&quot;&gt;ruby-lang&lt;/a&gt; site, there are instructions on how to get the rubyinstaller for Windows. &lt;/p&gt;

&lt;p&gt;Open up a terminal. &lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

$ curl -L https://get.rvm.io | bash -s stable --ruby

# to see a list of things you can install
$ rvm list known

# to install ruby 1.9.3
$ rvm install 1.9.3

# to use ruby 1.9.3 instead of 
# the default 1.8.7
$ rvm use 1.9.3

# to use the default 1.8.7
$ rvm use system --default

# install a gem, no need for extra syntax
# just check the version of ruby you are using
# before doing anything 

$ ruby -v
$ rvm use 1.9.3
# ensure that the gems are updated before installing 
# anything
$ gem update --system
$ gem install &lt;gemname&gt; 

# will install the name and will associate it with ruby 1.9.3

$ rvm use system --default
$ ruby -v
$ gem update --system
$ gem install &lt;gemname&gt; 

# will install the gemname and associate it with the default
# ruby version for your system



**NOTE:** You will not need *sudo* when installing gems with the rvm.

# 2. pry

A replacement for the ageing *irb* (interactive ruby interpreter). Get it via gem &amp;mdash; **gem install pry**

&lt;pre class=&quot;codeblock&quot;&gt;

$ rvm use 1.9.3
Using /Users/ted/.rvm/gems/ruby-1.9.3-p286
$ ruby -v
ruby 1.9.3p286 (2012-10-12 revision 37165) [x86_64-darwin12.2.0]

$ pry
[1] pry(main)&amp;gt; class Foo
[1] pry(main)*   def initialize(name)
[1] pry(main)*     @thename = name
[1] pry(main)*   end 
[1] pry(main)* end 
=&amp;gt; nil
[2] pry(main)&amp;gt; foo = Foo.new &quot;Ted&quot;
=&amp;gt; #&amp;lt;Foo:0x007febd4a83a50 @thename=&quot;Ted&quot;&amp;gt;
[3] pry(main)&amp;gt; quit

&lt;/pre&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

$ irb
1.9.3p286 :001 &amp;gt; class Foo
1.9.3p286 :002?&amp;gt;   def initialize(name)
1.9.3p286 :003?&amp;gt;     @thename = name
1.9.3p286 :004?&amp;gt;     end
1.9.3p286 :005?&amp;gt;   end
 =&amp;gt; nil 
1.9.3p286 :006 &amp;gt; foo = Foo.new &quot;Ted&quot;
 =&amp;gt; #&amp;lt;Foo:0x007fcd83088b50 @thename=&quot;Ted&quot;&amp;gt; 
1.9.3p286 :007 &amp;gt; 

&lt;/pre&gt;

Pry indents better than irb, it also colorizes the code too. Color and indentation are minor stuff, pry has a lot more tricks like context switching








&lt;/gemname&gt;&lt;/gemname&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Activity Life Cycle</title>
   <link href="http://thelogbox.com/android-activity-lifecycle"/>
   <updated>2012-09-01T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-activity-lifecycle</id>
   <content type="html">&lt;p&gt;As an (Activity-based) application is started up until it is discarded, it will go through several states; namely, created, started, paused, resumed then eventually destroyed. &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;onCreate() - When an Activity is first created. Typically this is place for setup of data sources, UI and other layouts. You cannot display anything during this period though. This is not a place for initializing widgets&lt;/li&gt;
  &lt;li&gt;onStart() - It is only during this time that you can really draw something on the screen. This is why I initialized the TextView on this callback. It doesn’t make sense to initialize it during &lt;em&gt;onCreate()&lt;/em&gt;, in fact you cannot, you will encounter a runtime error if you do so.&lt;/li&gt;
  &lt;li&gt;onResume() - This method will be called the first time the Activity is about to run. It will be subsequently called if the application loses focus, say when a call came in and your application got interrupted, then the application got the focus back again&lt;/li&gt;
  &lt;li&gt;on Pause() - If another application grabs the focus away from your application, but the application is still visible, it will be paused&lt;/li&gt;
  &lt;li&gt;onDestroy() - When the application exits, or forcibly shutdown by the Android runtime (for some reason)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img class=&quot;default&quot; src=&quot;/img/activity_lifecycle.png&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Logging and adb logcat</title>
   <link href="http://thelogbox.com/android-logging-and-adb-logcat"/>
   <updated>2012-08-30T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-logging-and-adb-logcat</id>
   <content type="html">&lt;p&gt;Debugging is a crucial skill in development. It has been made more crucial because of the rise of mobile platforms. Debugging on an emulated or simulated environment presents additional challenges — your runtime environment is different than the development environment. &lt;/p&gt;

&lt;p&gt;This chapter deals with more than just debugging. The example code demonstrates not only debugging techniques but also the the basic life cycle of an Activity class.  Before we are done, we intend to take away the following.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Validate the Activity life cycle. See for ourselves when the Activity call-backs are fired&lt;/li&gt;
  &lt;li&gt;Use the android.util.Log for logging messages&lt;/li&gt;
  &lt;li&gt;View the logged messages using adb logcat  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To follow this exercise, it will be best to create a new project.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ android create project --path lifecycle target --8 --package com.thelogbox --activity LifeCycle 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A Froyo target (API level 8) is what I used. Use whatever API level you need or works for you. I used Froyo because this is what is installed on my physical testing device. If you need to find out which API levels are installed on your machine, type &lt;strong&gt;android list targets&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next, add some UI elements and some event methods. Edit the &lt;strong&gt;/res/layout/main.xml&lt;/strong&gt; and follow the code sample&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
  android:orientation=&quot;vertical&quot;
  android:layout_width=&quot;fill_parent&quot;
  android:layout_height=&quot;fill_parent&quot;
  &amp;gt;

  &amp;lt;ScrollView
    android:layout_width=&quot;fill_parent&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_weight=&quot;9&quot;&amp;gt;

     &amp;lt;TextView  
      android:layout_width=&quot;fill_parent&quot; 
      android:layout_height=&quot;wrap_content&quot;
	  android:id=&quot;@+id/displaytext&quot; 
      android:text=&quot;Hello World, LifeCycle&quot;
      /&amp;gt;
  &amp;lt;/ScrollView&amp;gt;

    &amp;lt;Button
	  android:layout_width=&quot;fill_parent&quot;
	  android:layout_height=&quot;wrap_content&quot;
	  android:layout_weight=&quot;0&quot;
	  android:text=&quot;Click me&quot;
	  android:onClick=&quot;btnClick&quot;	
	/&amp;gt;
&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The TextView will be used to provide some sort of proxy to STDOUT of our little app. While we will use logcat to view the call-backs, we will also print it out on the screen of the device. The TextView is wrapped inside a ScrollView because we will append  new messages on top of older messages, it will spill over the height of the viewport. &lt;/p&gt;

&lt;p&gt;A Button is also included in the UI. After the application hits the onResume callback, our app now has focus, it is ready to accept input and respond to the user, the Button is a simple mechanism to demonstrate the actual life of the application — when it is interacting with the user. &lt;/p&gt;

&lt;p&gt;You will need to override some call back functions in the main Activity class. Go the file &lt;strong&gt;src/com/thelogbox/LifeCycle.java&lt;/strong&gt; and follow the sample code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.thelogbox;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;
import android.view.View;

public class LifeCycle extends Activity {
	
    private final String TAG = getClass().getName();
	
    TextView tview;
	
	
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
				
		System.out.println(&quot;HELLO THERE&quot;);
		Log.v(TAG, &quot;inside onCreate&quot;);
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
    }
	
	@Override
	public void onStart() {
		tview = (TextView) findViewById(R.id.displaytext);
		super.onStart();
		log(&quot;inside onStart&quot;);
	}
	
	@Override
	protected void onResume() {
		super.onResume();
		log(&quot;inside onResume&quot;);
	}
	
	@Override
	protected void onPause() {
		super.onPause();
		log(&quot;inside onPause&quot;);
	}
	
	@Override
	protected void onStop() {
		super.onStop();
		log(&quot;inside onStop&quot;);
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
		log(&quot;inside onDestroy&quot;);
	}
	
	private void log(String message) {		
		String temp = (String) tview.getText();
		Log.v(TAG, message);
		tview.setText(temp +  &quot;\n&quot; + message);
	}
	
	public void btnClick(View v){
		log(&quot;Button was clicked&quot;);
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;test&quot;&gt;Test&lt;/h1&gt;

&lt;p&gt;Inspect the logged activity using the built-in android debugger &lt;strong&gt;adb logcat com.thelogbox.LifeCycle *:S&lt;/strong&gt;. If I didn’t do this, I would have been inundated with a lot of android messages. &lt;/p&gt;

&lt;p&gt;Where is the System.out.println?  Well, this was re-routed to logcat, because there is no STDOUT in android. If you really want to see it, you need to run &lt;strong&gt;adb logcat System.out *:S&lt;/strong&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Windows setup</title>
   <link href="http://thelogbox.com/android-install-sdk-windows"/>
   <updated>2012-08-18T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-install-sdk-windows</id>
   <content type="html">&lt;p&gt;This chapter will guide you through the setup process of an Android development environment.  There are a few things that you must have before you proceed any further. I am assuming that you already have setup JDK 1.5 or 1.6 and Apache Ant.&lt;/p&gt;

&lt;p&gt;I’m assuming further that these tools are properly resolvable from any terminal window. That means the executable files are already part of the system path.&lt;/p&gt;

&lt;p&gt;If you have JDK and Apache ANT already, you can proceed with the android sdk setup.&lt;/p&gt;

&lt;p&gt;The android sdk setup requires that you download, install and configure from setup files. The configuration is where it sometimes gets messy and confusing especially for beginners. But these things are easily managed by simply following instructions. When the instructions on these pages fail you, I’m sure you will Google for them. The official site of android can be found &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;If that is still not clear enough, you can look at the &lt;a href=&quot;https://docs.google.com/document/d/1AS8OoJJnRIIyEvi8lG6I8iF0PEt1-UolvQGtVevrJg4/edit?usp=sharing&quot;&gt;setup instructions I wrote for my students here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download&lt;/strong&gt; the installer from &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;Android SDK from android.developer.com&lt;/a&gt;. Choose your platform. The Windows platform offers two options, a zipped file and an .EXE file (which is recommended). If you know where the EXE installer will place the Android executables, go ahead and get the EXE version. If you want to control the location of the Android files&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unzip&lt;/strong&gt; the downloaded file to a user directory (so that you will not need elevated privileges to use the executable files). The user directories are usually inside &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\User\yourname\ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Try to remember the full path of the directory where you unzipped the Android SDK, from hereon forward, we will refer to that directory as &lt;strong&gt;ANDROID_HOME&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get a terminal window&lt;/strong&gt;, launch cmd.exe. Go to the &lt;strong&gt;ANDROID-HOME&lt;/strong&gt;/tools directory, then run the &lt;strong&gt;android&lt;/strong&gt; command. This will launch the Android SDK Manager windows. &lt;/p&gt;

&lt;p&gt;The SDK manager needs an internet connection. It connects to the android.developer.com website and checks which SDK levels are installed in your machine. Naturally, if you have installed the SDK just now, there won’t be much. Choose the API levels that you would like to install in your machine.&lt;/p&gt;

&lt;p&gt;Each version or platform of Android (Froyo, Gingerbread etc) is a numbered API level. If you want to install the Froyo SDK, for example, then check the box next to API level 8 (Android version 2.2). If you have really fast internet connection and you are not sure which API to check, check them all. This will take some time to complete. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update your system path&lt;/strong&gt;. Include the &lt;strong&gt;ANDROID_HOME&lt;/strong&gt;/android tools and &lt;strong&gt;ANDROID_HOME&lt;/strong&gt;/platform-tools folders in the system path. You will need it if you want to work with android using the command line.&lt;/p&gt;

&lt;p&gt;There are two ways to set the PATH in Windows. The first method is via the command line (cmd.exe).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SET ANDROID_HOME=c:\&amp;gt;path\where\you\installed\android\
SET PATH=%PATH%;%ANDROID_HOME%\bin;%ANDROID_HOME%\platform-tools;%ANDROID_HOME%\tools;.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will run these commands each time you will open a new terminal window. Those settings are not remembered by the shell.&lt;/p&gt;

&lt;p&gt;If you want to permanently set the PATH to android tools, you need to do it in the System Properties dialog box. &lt;/p&gt;

&lt;p&gt;First, open Control Panel, go to System Properties, then Advanced System Settings then click the button &lt;strong&gt;Environment variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/windows-environment-variables.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you have local admin rights on the machine, click the &lt;strong&gt;New&lt;/strong&gt; button on &lt;strong&gt;System variables&lt;/strong&gt; section. On the variable name, type &lt;em&gt;ANDROID_HOME&lt;/em&gt;. On the value textbox, type the full path where you installed the Android SDK. Close the dialog box. Next, scroll down the values on System variables, try to find &lt;strong&gt;PATH&lt;/strong&gt;, then click the &lt;strong&gt;Edit&lt;/strong&gt; button. Go to the last character of the existing entry, then append the following&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%ANDROID_HOME%\bin;%ANDROID_HOME%\platform-tools;%ANDROID_HOME%\tools;.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Close the dialog window. To test if all the PATH is working as expected, get another cmd.exe window, then type “android”, it should launch the SDK manager&lt;/p&gt;

&lt;p&gt;Before you can deploy and test your apps, you need to setup either an android physical device or virtual device.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Introduction</title>
   <link href="http://thelogbox.com/javascript-core-tutorial"/>
   <updated>2012-08-07T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-core-tutorial</id>
   <content type="html">&lt;h2 id=&quot;notice&quot;&gt;Notice&lt;/h2&gt;

&lt;p&gt;This content was moved to &lt;a href=&quot;/javascript/javascript-introduction&quot;&gt;JavaScript Introduction&lt;/a&gt;. This document will no longer be updated.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;JavaScript is a loose, dynamically typed and interpreted  scripting language. It began life as LiveScript (1995); when it was a project at Netscape Communications. At some point in time, it was renamed JavaScript (roughly around the time when plugin support for the Java language was added to Netscape Navigator).&lt;/p&gt;

&lt;p&gt;Java and JavaScript are not related to each other, not even remotely, they simply share a commonality in their names.&lt;/p&gt;

&lt;p&gt;JavaScript’s popularity maybe attributed to it’s ubiquity amongst web pages (client side JavaScript), but it is actually being used in lots of places other than web pages. JS can be ran on the server (Node.JS), it can be used to do MVC type development of web apps (Backbone.JS) and it can also be used to stitch together a bunch of Java apps together (Rhino); these are just some of the other uses of JavaScript. &lt;/p&gt;

&lt;p&gt;JavaScript as we know it today, is the scripting language consistent with ECMAScript. ECMAScript is a standardized scripting language according to ECMA specification 262 and ISO/IEC 16262. ECMAScript exist in the form of JavaScript, ActionScript and JScript. If you are looking for language specification of JavaScript, you can look at the ECMAScript 262 specification—it is included in the Bibliography.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Objective C Language Fundamentals</title>
   <link href="http://thelogbox.com/objc-language-fundamentals"/>
   <updated>2012-07-26T00:00:00+08:00</updated>
   <id>http://thelogbox.com/objc-language-fundamentals</id>
   <content type="html">&lt;h1 id=&quot;preparation-and-setup&quot;&gt;Preparation and setup&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;You need a Mac. You can get by using Linux or even Windows at first because you can get gcc running on it. I don’t think though that you are simply trying to learn objective c for the fun of it—face it, you want to go to IOS or Cocoa programming; and for that, you need to get a Mac hardware&lt;/li&gt;
  &lt;li&gt;Get Xcode setup. In OSX Lion (and Mountain Lion), Xcode is available as download from the App Store (it’s free). It’s a hefty download so prepare to wait for a bit&lt;/li&gt;
  &lt;li&gt;Once the download is over, open Xcode and go to &lt;em&gt;Preferences&lt;/em&gt;, go to &lt;em&gt;Downloads&lt;/em&gt; section. Click &lt;em&gt;Install&lt;/em&gt; button next to the &lt;strong&gt;Command line&lt;/strong&gt; tools. Yes you can use the Xcode GUI to create Objective C CLI apps, but try to learn the CLI way of compiling Objective C codes—this will pay off later; How? It forces your brain to work harder when you are doing things harder—which is what you need when you are learning an unfamiliar language for the first time&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;baby-steps&quot;&gt;Baby steps&lt;/h1&gt;

&lt;p&gt;Learn how to write the simplest code in Objective. The purpose of this exercise is not to gobble up a lot of chunks of Objective C, in fact, you won’t do anything remotely object oriented. The point of the exercise is to write the simplest code, compile and run it. Objective C is, after all, still C—so in the tradition of K &amp;amp; R’s &lt;em&gt;The C Programming language&lt;/em&gt;, we will do the &lt;strong&gt;Hello World&lt;/strong&gt; example.&lt;/p&gt;

&lt;p&gt;Create a file named &lt;em&gt;Hello.m&lt;/em&gt;—why &lt;em&gt;.m&lt;/em&gt; extension, because the convention for file name extensions is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;.c&lt;/em&gt; - C language source file&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;.cc, .cpp&lt;/em&gt; -  C++ language source file&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;.h&lt;/em&gt; - Header file&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;.m&lt;/em&gt; - Objective-C source file&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;.mm&lt;/em&gt; - Objective-C++ source file&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;.pl&lt;/em&gt; - Perl source file&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;.o&lt;/em&gt; - Object (compiled) file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It actually doesn’t much matter if you wanted to use any extension you want, the compiler will happily compile it for you. However, it sure is easier to tell what kind of code a file contains if you just follow the convention—easier for others to read your code and easier for you (when you are looking at your code months after you first created it)&lt;/p&gt;

&lt;p&gt;Type the contents of the following code&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Compiling this code requires the &lt;em&gt;gcc&lt;/em&gt; toolchain. If you already have set it up using XCode, you can compile the code on the terminal using &lt;code class=&quot;codeblock&quot;&gt;$ gcc -framework Foundation Hello.m -o Hello&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Never mind the &lt;em&gt;-framework Foundation&lt;/em&gt; directive for now, you will have plenty of time to explore it later. Just mind the &lt;em&gt;-o&lt;/em&gt; (that is a minus sign and a small letter oh), it means that you would like the output of the compilation to be named &lt;em&gt;Hello&lt;/em&gt;. You could have gotten by compiling it with &lt;code class=&quot;codeblock&quot;&gt;$ gcc -framework Foundation Hello.m&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That would have been fine, but the &lt;em&gt;Hello.m&lt;/em&gt; source file will be compiled into a file named &lt;em&gt;a.out&lt;/em&gt;—this is the default output if you did not use the &lt;em&gt;-o&lt;/em&gt; flag; by the way, this flag means &lt;strong&gt;output to&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Run the code&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

	$ Hello
	2012-07-26 23:19:58.900 Hello[2103:707] Hello World

&lt;/pre&gt;

&lt;p&gt;That’s it. That’s the workflow. &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write the code, give it proper extension&lt;/li&gt;
  &lt;li&gt;Compile it using gcc (with the proper -framework flag)&lt;/li&gt;
  &lt;li&gt;Run the code&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Provided you did not misspell anything while you are typing, you should not encounter any errors at this point. The compiler will happily die silently after invoking &lt;em&gt;gcc&lt;/em&gt; if everything is in order, if not, it will scream and spit out really cryptic error messages. &lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/Reference/NSString.html&quot;&gt;Apple Developer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Programming in Objective C, Stephen G. Kochan&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Programming for the Mac</title>
   <link href="http://thelogbox.com/cocoa-programming"/>
   <updated>2012-07-26T00:00:00+08:00</updated>
   <id>http://thelogbox.com/cocoa-programming</id>
   <content type="html">&lt;div id=&quot;update-history&quot;&gt;
&lt;h3&gt;Doc History&lt;/h3&gt;
&lt;br /&gt;
26.Jul.2012 &amp;mdash; started/created&lt;br /&gt;
18.Nov.2012 &amp;mdash; published
&lt;br /&gt;
&lt;/div&gt;

&lt;div id=&quot;minitoc&quot;&gt;
&lt;h2&gt;Contents&lt;/h2&gt;

&lt;h4&gt;Objective C&lt;/h4&gt;

1. Compilation
2. Data types
3. Classes
4. Getting and Setting values
5. Properties
6. Object Construction
7. Instance members
8. Protocols


&lt;/div&gt;

&lt;h1 id=&quot;required-reading&quot;&gt;Required reading&lt;/h1&gt;

&lt;p&gt;Allocate time for this, there is no way around the required reading. You won’t learn objc (properly) by simply looking at videos on youtube or some other video tutorials. The mind needs to absorb the concepts, techniques and idioms of Objective C, it needs to be read and practiced deliberately.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ObjectiveC/Introduction/introObjectiveC.html&quot;&gt;The Objective C Languge&lt;/a&gt; - Mac Developer Library&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html&quot;&gt;Programming with Objective C&lt;/a&gt; - Mac Developer Library&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CocoaFundamentals/Introduction/Introduction.html#//apple_ref/doc/uid/TP40002974&quot;&gt;Cocoa Fundamentals Guide&lt;/a&gt; - Mac Developer Library&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/#documentation/General/Conceptual/DevPedia-CocoaCore/AccessorMethod.html&quot;&gt;Cocoa Core Competencies&lt;/a&gt; - Mac Developer Library&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/#samplecode/CocoaTipsAndTricks/Introduction/Intro.html&quot;&gt;Cocoa Tips &amp;amp; Tricks&lt;/a&gt; - Mac Developer Library&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CodingGuidelines/Articles/NamingBasics.html#//apple_ref/doc/uid/20001281-1002242-BBCIJGDB&quot;&gt;Coding Guidelines for Cocoa&lt;/a&gt; - Mac Developer Library&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;other-materials&quot;&gt;Other materials&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Programming in Objective C, by Stephen Kochan, Addison Wesley, 2012&lt;/li&gt;
  &lt;li&gt;Objective C Phrasebook&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;infrastructure&quot;&gt;Infrastructure&lt;/h1&gt;

&lt;p&gt;Objective C requires XCode, get it from the AppStore— On the Pref pane, download the &lt;em&gt;command line tools&lt;/em&gt;. Practicing on Objective C sources can also be done on Linux/UNIX using GNUStep, but if you intend to build and release IOS or Mac apps, you will really need a Mac. &lt;/p&gt;

&lt;h1 id=&quot;readiness&quot;&gt;Readiness&lt;/h1&gt;

&lt;p&gt;Programming experience in C is beneficial. If you don’t know C yet, It’s probably not a good idea to pick up C now, then go to Objective C—just to straight to Objective C and try pick up along the way the parts of C that you need. Learning a procedural language like C, then moving to an object oriented language like Objective C is probably a less than ideal route. &lt;/p&gt;

&lt;h1 id=&quot;objective-c-core-competencies&quot;&gt;Objective C core competencies&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Objective C&lt;/em&gt; is a superset of C, all valid &lt;em&gt;C&lt;/em&gt; codes are valid in Objective C. Test your environment. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EXIT_SUCCESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// compile:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 	gcc Hello.c&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//	a.out&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Environment testing with &lt;em&gt;Foundation Framework&lt;/em&gt; &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EXIT_SUCCESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// compile:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//	gcc -framework Foundation Hello.m -o Hello.out&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You need to tell gcc that you will use the Foundation framework using the -framework flag, lest the Foundation headers won’t be resolved by the compiler.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NSLog&lt;/em&gt; is a Foundation framework function, the arguments to this function are sent out to stdout. You need to pass an &lt;em&gt;NSString&lt;/em&gt; object to this function (NSString strings are not the same as C-style strings)&lt;/p&gt;

&lt;p&gt;The next set of codes is a simple Cocoa test&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Appkit/Appkit.h&amp;gt;&lt;/span&gt;


&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSApplication&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;NSRunAlertPanel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;One&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Two&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Three&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// compile:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//	clang -framework Cocoa Hello.m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can use &lt;em&gt;clang&lt;/em&gt; in place of &lt;em&gt;gcc&lt;/em&gt;, it is another front end to LLVM (Low Level Virtual Machine) which Objective C uses. The AppKit was &lt;em&gt;#include&lt;/em&gt;(d) because of the use of  NSRunAlertPanel.&lt;/p&gt;

&lt;p&gt;NSAutoReleasePool provides a managed environment for your codes (A garbage collected environment). Remember to &lt;em&gt;drain&lt;/em&gt; the pool once you are done, lest you will leak memory.&lt;/p&gt;

&lt;h1 id=&quot;data-types&quot;&gt;Data Types&lt;/h1&gt;

&lt;p&gt;The usual primitives of C (int, float, char) are, of course usable, as well the qualifiers &lt;em&gt;long, long long, short, unsigned and signed&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;There is another type in Objective C called &lt;strong&gt;id&lt;/strong&gt;, but its discussion is deferred to later sections.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;100.00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;100e+2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Integer a = %i&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Float b = %f&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Double c = %e&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Double c = %g&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Char d = %c&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;BOOL e = %d&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;NSLog&lt;/strong&gt; takes format specifiers like fprintf. The reference page for &lt;a href=&quot;https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/Strings/Articles/formatSpecifiers.html&quot;&gt;String format specifiers are here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use &lt;strong&gt;c99&lt;/strong&gt; bool instead of BOOL. You need to keep in mind though that Cocoa and the other Frameworks uses BOOL instead of bool—peeking into Foundation/objc.h, you can find the definition of BOOL.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;signed&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;     &lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;// BOOL is explicitly signed so @encode(BOOL) == &amp;quot;c&amp;quot; rather than &amp;quot;C&amp;quot; &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// even if -funsigned-char is used.&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define OBJC_BOOL_DEFINED&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;#define YES             (BOOL)1&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define NO              (BOOL)0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Be prudent, use BOOL to future proof your code a little bit, in case Apple decides to change the implementation (not likely, but who knows).&lt;/p&gt;

&lt;h1 id=&quot;classes&quot;&gt;Classes&lt;/h1&gt;

&lt;p&gt;To create classes, you need to declare an &lt;em&gt;interface&lt;/em&gt; and an &lt;em&gt;implementation&lt;/em&gt;. They don’t need to be in the same source file but it is a good idea to keep them separate—the reason should be faily obvious to you already if Objective C is not your first OOP language.&lt;/p&gt;

&lt;h3 id=&quot;a-person-class-example&quot;&gt;A Person class example&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// filename: Person.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;: &lt;span class=&quot;bp&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 	&lt;span class=&quot;nf&quot;&gt;getInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 	&lt;span class=&quot;nf&quot;&gt;setInt:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 	&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// filename: Person.m&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#import &amp;quot;Person.h&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setInt:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;theint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Word&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;em&gt;@interface&lt;/em&gt; section declares member variables and member methods. The member method only contains the method signature (return type, method name and argument).&lt;/p&gt;

&lt;p&gt;The colon signifies that the Person class is inheriting from &lt;em&gt;NSObject&lt;/em&gt;. The area i between the opening and closing curly brace is where you can write member variable declarations.&lt;/p&gt;

&lt;p&gt;Member methods (getInt, setInt and foo) are written enclosed in the @interface and @end declarations. The minus sign means that the method belongs to the instance rather than the class. If the method is preceded by a plus sign, it means the method belongs to the Class rather than its instance. The return type of the method can be any valid type in Objective C (classes, primitives or id), it is written by enclosing the return type in parens.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;@implementation&lt;/em&gt; section details the method implementation. &lt;/p&gt;

&lt;p&gt;You cannot compile the code yet, it will complain because an entry point to the program has not been defined. You need to define a &lt;em&gt;main()&lt;/em&gt; function to test this code. The main() function can be in a different implementation source file, but it is not a requirement.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// filename: Person.m&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#import &amp;quot;Person.h&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setInt:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;theint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Word&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;/////////////////////////////////////////////////////&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Setup a garbage collected pool&lt;/span&gt;
	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%d &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// To do the printf in NSLog&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;Value of getInt = %i &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// compile:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//	clang -framework Foundation Person.m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The person object could have been created using the &lt;em&gt;new&lt;/em&gt; message [Person new] —  &lt;strong&gt;new&lt;/strong&gt; is not a keyword in Objective C, it is a method of the NSObject which actually calls allo, then init. The Person class in the example is inheriting from NSObject, which means it has everything that NSObject has, including the  &lt;em&gt;new&lt;/em&gt; method.&lt;/p&gt;

&lt;p&gt;Sending a message (calling a method) to an object is semantically different from the way Java, C# or C++ does it. A message send is done by enclosing the object reference and the message (method) in square braces. Read some history of the Objective C language if you want to gain insight why message sending is done like this in ObjC rather than using the dot notation. &lt;/p&gt;

&lt;p&gt;According to Tom Love (one of the designers of Objective C), the square bracket syntax is sign post that you are leaving C land and now entering object land. &lt;/p&gt;

&lt;p&gt;The dot operator is used in C to access structures or union members. Object oriented programming is a departure from C, hence the bracket notation to highlight the use of a new semantic.&lt;/p&gt;

&lt;h2 id=&quot;getting-and-setting-values&quot;&gt;Getting and setting values&lt;/h2&gt;

&lt;p&gt;Getting and setting values of member vars of an object is a very common programming practice, it is a necessary technique in creating value objects.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// filename: Person.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt; : &lt;span class=&quot;bp&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setName:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setEmail:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// filename: Person.m&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#import &amp;quot;Person.h&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setName:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setEmail:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getEmail&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;/////////////////////////////////////////////&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Ted&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;tedhagos@gmail.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// compile: clang -framework Foundation Person.m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;properties&quot;&gt;Properties&lt;/h1&gt;

&lt;p&gt;You do not need to write individual getters and setters methods for member vars. Objective C as the @property and @synthesize to do that automatically&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// filename: Prop.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Prop&lt;/span&gt; : &lt;span class=&quot;bp&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;divideem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;multiplyem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// filename Prop.m&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#import &amp;quot;Prop.h&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Prop&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@synthesize&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;One is %i and Two is %i&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;divideem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%i / %i = %f &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;multiplyem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%i * %i = %i &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%i + %i = %i &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;/////////////////////////////////////////////////&lt;/span&gt;


&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Prop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setTwo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divideem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiplyem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;@property is declared on the interface declaration and @synthesize on the implementation portion. In the example code above, the member vars &lt;em&gt;one &amp;amp; two&lt;/em&gt; were synthesized. Accessor methods were automatically generated for these vars. &lt;/p&gt;

&lt;p&gt;The accessor method which was generated for our member vars one &amp;amp; two are the following;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;The acccessor to get the member var is exactly the same name as&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;the member var.&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;In Objective C 2.0, the dot notation was allowed to access properties of &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;an object, hence we could have written prop.one instead of [prop one]. Note &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;though that you are not resolving the name of member val literally (Java and&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;C# programmers, take note), you are in fact sending a -one or -two message &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;to the object named prop. It is not a direct access to the value of the member&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;vars&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;To set the value of the member var the general the convention is to &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;	1. Capitalize the first letter of the member var&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;	2. prepend the word &amp;quot;set&amp;quot; to the upper-cased member var&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;


&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setTwo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;constructors&quot;&gt;Constructors&lt;/h1&gt;

&lt;p&gt;This heading is misleading, there is concept of a constructor in Objective C, at least not in the way that I think about constructors in Java, C++ or C#. &lt;/p&gt;

&lt;p&gt;On the other hand, each object, before they are created, are sent the messages &lt;em&gt;alloc&lt;/em&gt; then &lt;em&gt;init&lt;/em&gt;. It’s probably not a good idea to fool around with &lt;em&gt;alloc&lt;/em&gt; but it is a very common practice to override &lt;em&gt;init&lt;/em&gt; and perform initialization codes. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;nl&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Obj&lt;/span&gt; : &lt;span class=&quot;bp&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;retain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// filename: Obj.m&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#import &amp;quot;Obj.h&amp;quot;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Obj&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;@synthesize&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;In the CTOR of Obj&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// NSLog(@ &amp;quot;Class method foo printing %@ &amp;quot;, objname);&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// Cannot do this, Class methods cannot access instance&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// members&lt;/span&gt;
	
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;Class method foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;goo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Instance method goo printing %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;///////////////////////////////////&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;Obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Obj&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autorelease&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setObjname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&amp;quot;The object name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Obj&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;self&lt;/strong&gt; is conceptually equivalent to &lt;strong&gt;this&lt;/strong&gt; in Java, it is a reference to one’s instance. In our example, self was assigned the value returned by a call to the &lt;em&gt;init&lt;/em&gt; of its parent object. It is a good idea to call the superclass’ init to ensure that proper initialization is also happenning up the object graph.&lt;/p&gt;

&lt;h2 id=&quot;another-example-of-self&quot;&gt;Another example of self&lt;/h2&gt;

&lt;p&gt;A simple use of the &lt;em&gt;self&lt;/em&gt; keyword. The following code is an adaptation of the Leaf.java source by Bruce Eckel, it was used as an example demonsrating the use of the &lt;em&gt;this&lt;/em&gt; keyword. The &lt;a href=&quot;http://www.cs.hut.fi/Docs/Eckel/TIJ3ed/code/c04/Leaf.java&quot;&gt;Java source can be found here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Leaf&lt;/span&gt; : &lt;span class=&quot;bp&quot;&gt;NSObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getLeaf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printStats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Leaf&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance_counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leaf_counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;instance_counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getLeaf&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;leaf_counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printStats&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;instance counter : %i&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance_counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;leaf counter : %i&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leaf_counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;////////////////////////////////////////////////////&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;Leaf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leaf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Leaf&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autorelease&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leaf&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getLeaf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getLeaf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printStats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; 

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;instance-members-and-class-members&quot;&gt;Instance members and class members&lt;/h1&gt;

&lt;p&gt;Again, the heading is misleading because there is no such thing as a class member in Objective C, I am simply using it as my own mnemonic (mental cheatsheet) to remember how to declare vars that are global to all instances. &lt;/p&gt;

&lt;p&gt;Vars that are declared within @interface are unique to each instance (object), while vars declared within @implementation is global to all instance — hence, equivalent of static members in Java. There is a keyword &lt;em&gt;static&lt;/em&gt; in Objective C but it refers to a storage class, it is not semantically equivalent to the &lt;em&gt;static&lt;/em&gt; keyword in Java or C#. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// filename: instancecount.m&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InstanceCount&lt;/span&gt; : &lt;span class=&quot;bp&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// You cannot declare a static type here, only in the&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// implementation source. Otherwise you will get the error&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// error: typename does allow storage class to be specified&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Besides, the static keyword in ObjC does not have the&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// same semantic meaning as the one in Java or C#&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// A static variable in ObjC refers to a storage class, it is&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// a variable that does not lose its value even after the&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// block that defined it goes out of scope&lt;/span&gt;

	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counterInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InstanceCount&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counterImplementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;counterInterface = %i&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counterInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;counterImplementation = %i&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counterImplementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//But you cannot access it here if you declared counter to be a &lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//a local variable inside the constructor.&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Foo: counterInterface = %i&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counterInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Foo: counterImplementation = %i&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counterImplementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;////////////////////////////////////////////&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;@autoreleasepool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstanceCount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

		&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// compile:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 	clang -framework Foundation instancecount.m&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* OUTPUT&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.332 a.out[6614:707] counterInterface = 1&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.333 a.out[6614:707] counterImplementation = 1&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.334 a.out[6614:707] counterInterface = 1&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.334 a.out[6614:707] counterImplementation = 2&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.335 a.out[6614:707] counterInterface = 1&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.335 a.out[6614:707] counterImplementation = 3&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.335 a.out[6614:707] counterInterface = 1&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.336 a.out[6614:707] counterImplementation = 4&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.336 a.out[6614:707] counterInterface = 1&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.337 a.out[6614:707] counterImplementation = 5&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.337 a.out[6614:707] counterInterface = 1&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.338 a.out[6614:707] counterImplementation = 6&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.338 a.out[6614:707] Foo: counterInterface = 1&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 22:52:30.339 a.out[6614:707] Foo: counterImplementation = 6&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Another example &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// filename: instance.m&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Obj&lt;/span&gt; : &lt;span class=&quot;bp&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;retain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Obj&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@synthesize&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Black&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;No shape&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getShape&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setShape:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;/////////////////////////////////&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;Obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Obj&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autorelease&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Obj&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autorelease&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;One color = %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Two color = %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;One shape = %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Two shape = %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&amp;quot;Red&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&amp;quot;Circle&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;One color = %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Two color = %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;One shape = %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Two shape = %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// compile:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//	instance.m&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* OUTPUT&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;2012-11-18 23:05:24.540 a.out[6662:707] One color = Black&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 23:05:24.542 a.out[6662:707] Two color = Black&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 23:05:24.542 a.out[6662:707] One shape = No shape&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 23:05:24.542 a.out[6662:707] Two shape = No shape&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 23:05:24.543 a.out[6662:707] One color = Black&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 23:05:24.543 a.out[6662:707] Two color = Red&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 23:05:24.543 a.out[6662:707] One shape = Circle&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;2012-11-18 23:05:24.544 a.out[6662:707] Two shape = Circle&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Changing the value of the &lt;em&gt;color&lt;/em&gt; member var in object two affected only the color value of object two, it did not have any effect on the color value of object one because the color member var was defined within the @interface. Each instance have their own copy of the color variable.&lt;/p&gt;

&lt;p&gt;Changing the value of the &lt;em&gt;shape&lt;/em&gt; member var in object two actually affected the shape value in object one as well. The &lt;em&gt;shape&lt;/em&gt; variable is global to all instances because it was defined within the @implementation declaration, it is a shared copy amongst all instances of &lt;em&gt;class Obj&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;protocols&quot;&gt;Protocols&lt;/h1&gt;

&lt;p&gt;A Protocol is just a list of methods that do not have implementation. In Java or C# programming, they might resemble the concept of an &lt;em&gt;interface&lt;/em&gt; because when class includes a protocol declaration, the class has to implement the methods in the protocol. &lt;/p&gt;

&lt;p&gt;One thing to note though is that a protocol is not a type. You may not declare an object having the name of a protocol as a type &amp;amp;,dash; you may however declare that an instance of an object &lt;em&gt;is conforming&lt;/em&gt; to a specific protocol. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// filename: poly.m&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@protocol&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Printing&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@protocol&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Faxing&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Multi&lt;/span&gt; : &lt;span class=&quot;bp&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Faxing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Multi&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fax&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clean&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;/////////////////////////////////////////////////&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;Multi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Multi&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autorelease&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multi&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multi&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;		Here, we declare the what variable as type id, but that it&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;		needs to conform the Printing protocol. Well, the actual object&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;		is a Multi type, which of course conforms to the protocol Printing&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;		among other things.&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;	*/&lt;/span&gt;

	&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;what&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Multi&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autorelease&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;what&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// compile:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 	clang -framework Foundation poly.m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A class may declare that it conforms to more than one protocol. Protocol conformance in a class is denoted by enclosing the protocol names inside the angle brackets as part of the @interface declaration.&lt;/p&gt;

&lt;h1 id=&quot;cocoa-core-competencies&quot;&gt;Cocoa Core competencies&lt;/h1&gt;

&lt;p&gt;[tbd]&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

</content>
 </entry>
 
 <entry>
   <title>RD JS Workshop.072012</title>
   <link href="http://thelogbox.com/workshop-javascript-batch-1"/>
   <updated>2012-07-25T00:00:00+08:00</updated>
   <id>http://thelogbox.com/workshop-javascript-batch-1</id>
   <content type="html">&lt;p&gt;You will need the nodejs runtime for this workshop. You will also need the node package manager (npm) which usually comes with the installation of nodejs.&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;SETUP&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Download the installer from &lt;a href=&quot;http://nodejs.org&quot;&gt;nodejs site&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Run the installer&lt;/li&gt;
  &lt;li&gt;Get to the command line &lt;em&gt;cmd.exe&lt;/em&gt; in Windows, &lt;em&gt;Terminal.app&lt;/em&gt; in OSX, &lt;em&gt;xterm, aterm or gnome-terminal&lt;/em&gt; in Linux&lt;/li&gt;
  &lt;li&gt;Get the http-server module via npm &lt;strong&gt;npm -g install http-server&lt;/strong&gt;. If you are in Linux or OSX, you will need to type &lt;strong&gt;sudo npm -g install http-server&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are using Windows, you may need to run the &lt;em&gt;cmd.exe&lt;/em&gt; using an elevated privilege (as Administator)&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-one&quot;&gt;Day One&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;JavaScript is not a new language, it started during the 90’s&lt;/li&gt;
  &lt;li&gt;It’s first name is LiveScript, only renamed later to JavaScript&lt;/li&gt;
  &lt;li&gt;ECMA stands European Computer Manufacturers Association. It’s a big organization, it stepped in during the browser wars to come up with an effort to standardize a scripting language. They came up with a specification, this spec is called the ECMAScript. Any scripting language that runs on the browser should strive to comply with this standard. To date, JavaScript and ActionScript (and some others more) are complying with ECMAScript 5&lt;/li&gt;
  &lt;li&gt;JavaScript is not related to Java. They are two very different languages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JS has dynamic typing. One of its meaning is that you don’t need to declare the types of your variable, ever. It is also loosely typed or weakly typed. You can use the keyword &lt;strong&gt;var&lt;/strong&gt; to declare variables, but sometimes you can also choose not to use it (which is a bad idea).&lt;/p&gt;

&lt;p&gt;JS has a built-in function called typeof, you can use it to do some kind of reflection on types. &lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

var anumber = 10;	//you don&#39;t need to say int anumber = 10
anothernumber = 20;	//this will work too, but this automatically adds anothernumber 
					//to the global context, which is a bad idea

anumber = &quot;Hello World&quot;;	//JS will allow this, even if you declared anumber to a number
							//before. Be careful with things like this

console.log(typeof(anumber)); 

&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-two&quot;&gt;Day Two&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;JS objects are like hash tables,&lt;/strong&gt; or dictionary objects. They contain just a bunch of key-value pair type of data. The &lt;em&gt;value&lt;/em&gt; part of the object’s members can be anything, Booleans, Numbers, Strings, Objects, Arrays or even Functions (because functions are also objects in JS)&lt;/p&gt;

&lt;p&gt;It is easy to create objects in JS, there is more than one way, look the following code.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 1st way&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Rommel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;006&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 2nd way&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rommel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Rommel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;006&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Admin&amp;quot;&lt;/span&gt;	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;//3rd way&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Rommel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;006&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The 1st and 2nd methods (above) uses object literals to create objects. The 3rd method uses the Object() constructor. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functions in JS are more than just an encapsulation unit&lt;/strong&gt; for codes. They are malleable, flexibile and weird at first. Consider the following codes;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   
   
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// returns &amp;quot;Hello&amp;quot;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;goo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// returns 1;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// fails now, because goo is no longer a function&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is what I mean by malleable and flexible, function names do not have special privileges, they can be created, assigned and reassigned pretty much like regular variables. While this looks like weakness right now, it is not. It is a feauture of the language—by the way, that horrible code sample where we reassigned goo() to be a number variable, can be (should be) prevented by good programming practice (conventions etc) and is probably highly unlikely to happen. &lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-three&quot;&gt;Day Three&lt;/h2&gt;

&lt;p&gt;Back to “malleability” being a feature rather than a weakness. The flexibility of JS functions makes them more than just a semantic feature of language, more than just an encapsulation unit for logic. It makes them “first class” members of the language. There is a definition on &lt;a href=&quot;http://en.wikipedia.org/wiki/First-class_function&quot;&gt;WikiPedia about First Class Functions&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;You can use JavaScript functions wherever you can use an object (which is pretty much everywhere). You can assign objects to variables, and you can also assign a function to variable—note that you are assigning the function definition to the variable, you are not assigning the result of running the function to the variable, these are two different things. &lt;/p&gt;

&lt;p&gt;You can return objects from a function, you can return a function from a function as well (We did touch a little bit on currying, but we won’t talk about currying just yet). You can pass functions as parameters to other functions, just like you can pass objects as parameters to functions. You can define properties for an object, you can define properties for a function as well (because functions are objects).  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// an example of a function return another function&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Goo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can add functions as a property of an object. This is possible because properties of objects can be of any type, it can be simple types or complex types, like object or arrays. You can conjure a pretty sophisticated data structure by nesting objects within other objects. Functions, being objects themselves, means we can add a function as a property of an object.  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameparam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deptparam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;empname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nameparam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deptparam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;empname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; is working&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;	
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;			
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rommel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Rommel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Ted&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;SWD&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pepper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Pepper&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;



&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rommel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;empname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rommel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;rommel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;ted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;pepper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// results to Function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rommel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// results to Employee&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;aside&gt;
**NOTE** the constructor property is present on all objects. It tells us which function was used to construct the current object. **function Employee** is not an employe object, it is a function object---see the result of running the code *Employee.constructor**. While the objects rommel, ted and pepper are Employee objects.
&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;SEAT WORK&lt;/strong&gt; - construct a car objects, such that we can make the calls&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toyota&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;toyota&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;steering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;toyota&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This challenge involves creating 3 objects, the &lt;em&gt;Car&lt;/em&gt;, an &lt;em&gt;Engine&lt;/em&gt; and a &lt;em&gt;Steering&lt;/em&gt; object. The engine and steering objects are members of the Car object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//solution 1&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;steering&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Steering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;shifting&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Steering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;go left&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goRight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;go right&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toyota&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;toyota&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;toyota&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;steering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;//solution 2&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;shifting&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;steering&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		
		&lt;span class=&quot;nx&quot;&gt;goLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;going left&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;goRight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;going right&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toyota&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;toyota&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;steering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;toyota&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Solution no. 1 is probably the more readable version because of its verbosity, but solution no. 2 is more compact and more concise. Use object literals sparingly, choose which style is applicable in your coding situation.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-four&quot;&gt;Day Four&lt;/h2&gt;

&lt;p&gt;Your code will always run in a &lt;em&gt;context&lt;/em&gt;. In JavaScript, these are the &lt;strong&gt;global&lt;/strong&gt; context and the context of a function.  How you declare and where you declare your variables will determine their visibility or accessibility.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// this is the global context. anywhere that is not inside a function&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//global variable&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// another global variable, but I advise against doing this, always use var&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;igoo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this is not visible outside function goo()&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goo_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;function goo name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this on the other hand is visible outside goo()&lt;/span&gt;
										 &lt;span class=&quot;c1&quot;&gt;// but it is not a global variable&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;aglobalvar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;I forgot to put var&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this automatically becomes a global variable, if you omit &lt;/span&gt;
										&lt;span class=&quot;c1&quot;&gt;// the var keyword. CAREFUL with this&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;ARRAYS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Arrays in JS are also objects, but don’t let that distract you. Think of arrays as a sequential data structure rather than the typical objects that we have been discussing in the last couple of days. Unlike regular objects where you access the elements using a &lt;em&gt;key&lt;/em&gt; (because objects are associative arrays), in an Array, you access the elements using the index number of the element. &lt;/p&gt;

&lt;p&gt;Here are some ways on how might declare an initialize an array&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//an empty array&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//an array with 7 elements&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;World&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//an array with members of diff types&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// an array with members, which are also arrays. &lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// other way to declare arrays&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//equivalent to var a = []&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;World&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//with 5 new elements&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To access the elements of the array, use the bracket notation, like so&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// the first element of the b array, which is 1&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// the second element of the c array, which is &amp;quot;World&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I did say that JS Arrays are also objects (earlier), this is what I mean by that&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;thisname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;John&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;thisname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doSomething&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;array doing something&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Don’t get too confused about the code, the fact that an Array is an object, means you can really do these things—but should you? To get started on arrays, go for the simple usage first (bracket notations). If your abstraction of the problem at hand requires that you use this kind of programming idiom (arrays with your own custom methods), you may consider its usage then. It all depends on the problem you are trying to solve and the development goals you are after.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-five&quot;&gt;Day Five&lt;/h2&gt;

&lt;p&gt;Discussion of the code below&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;docobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;docobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formcollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formcollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elementcollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elementcollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerhtml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;default inner html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Clicked&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;form1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;input1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerhtml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;form1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;input1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;form1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;input1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerhtml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;An exercise on abstraction (and writing objects)&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;days-six-seven-and-eight&quot;&gt;Days Six, Seven and Eight&lt;/h2&gt;

&lt;p&gt;Coding exercises&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;GCF&lt;/em&gt; exercise using client-side JavaScript and HTML&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Fourth.html --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fourth.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;objform&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			First number  :&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;text1&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
			Second number :&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;text2&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;btn1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Click&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;foo()&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;gcf&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Fourth.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;form1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;form1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;objform&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gcf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;gcf&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;gcf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;This is the GCF&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Fifth.html (inlined JavaScript).&lt;/strong&gt; A lot of things in the DOM can be clicked, and you can attach an &lt;em&gt;onclick&lt;/em&gt; event even to DIVs in the DOM. This code sample shows that&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD HTML 4.01//EN&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;objform&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;btn1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;btnclick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
			&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;section1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;sectionclick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sectionclick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;clicked the div&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;btnclick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;
			You have to enable JavaScript
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;objform&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;btn1&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;hey&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;section1&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;border: 2px solid gray; width:10%;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	You can click me
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	
	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;OnChange Example&lt;/strong&gt;. This code sample demonstrates the use of the &lt;em&gt;onkeyup&lt;/em&gt; event using a &lt;em&gt;textarea&lt;/em&gt; element. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;onchange.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;objform&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;txtarea1&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cols=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onkeyup=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;changetext()&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
				
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;btnclick()&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;click me&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;writetome&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			This text will change
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code for &lt;em&gt;onchange.js&lt;/em&gt; is below&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// onchange.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;btnclick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;txtin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;txtarea1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;txtout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;writetome&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;txtout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;txtin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;changetext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;txtin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;txtarea1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;txtout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;writetome&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;txtout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;txtin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can experiment with the other &lt;em&gt;onkey&lt;/em&gt; events like &lt;strong&gt;onkeypress&lt;/strong&gt; and &lt;strong&gt;onkeyup&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-nine&quot;&gt;Day Nine&lt;/h2&gt;

&lt;p&gt;Using the canvas element &lt;/p&gt;

&lt;p&gt;The canvas is some sort of a viewport to a 2D rendering platform. The canvas is an ordinary tag that is part of the DOM. However, once you get the &lt;strong&gt;2D context&lt;/strong&gt; using the canvas reference, you can now manipulate each invidivual pixel inside the canvas—to be clear, you will be writing to the 2d context, not the canvas itself. &lt;/p&gt;

&lt;p&gt;The canvas uses cartesian coordinates, it starts at &lt;strong&gt;0,0&lt;/strong&gt;, x and y coordinates respectively. Negative X and Y values are not visible in the canvas. As the value of X increases, you move farther right, as Y increases you move down. Each integer value in the canvas stands for 1 pixel point.&lt;/p&gt;

&lt;p&gt;An example declaration of the canvas element in HTML&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;thecanvas&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 If the browser is not capable of displaying the canvas
 this message will be seen instead of a rendered 2D platform
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can omit the height and width attribute if you wish, but the canvas will default to 150 pixels tall and 300 pixels wide. &lt;/p&gt;

&lt;p&gt;The canvas API is rich and offers a wide variety of drawing basic elements like rectangles, circles, lines and text. Here’s a sample code on how to use the canvas&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;woot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;mycanvas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rgb(255,0,0)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#ababab&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;c1&quot;&gt;// DRAW LINES&lt;/span&gt;
			
			&lt;span class=&quot;c1&quot;&gt;//The line is gray bec the curr strokeStyle&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;//is #ababab&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;130&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;130&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			
			&lt;span class=&quot;c1&quot;&gt;// DRAW some text&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;130&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;40px serif&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// you can add italics here, just like in css&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;130&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;130&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;c1&quot;&gt;//DRAW CIRCLE&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;280&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			
			&lt;span class=&quot;c1&quot;&gt;//BASIC ROTATION&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;350&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;mycanvas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;mycanvas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;width = &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;\nheight = &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onload=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;woot()&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mycanvas&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;border:1px solid gray;&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			If you are seeing this, you are using a really old
			browser
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Clear all&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clearAll()&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Size of C&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;getSize()&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;When you set the fillStyle, every subsequent fillRect calls will follow the fillStyle. The other fillRects which were already drawn prior to the call will not be affected.&lt;/li&gt;
  &lt;li&gt;you can use the call [canvasname].width and [canvasname].height to determine the size of the canvas&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-ten&quot;&gt;Day Ten&lt;/h2&gt;

&lt;p&gt;To get the current location of the mouse, you can use the &lt;strong&gt;event.clientX&lt;/strong&gt; and &lt;strong&gt;event.clientY&lt;/strong&gt; information. Here’s an example code on how to use it with the canvas&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;shouldIPaint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;mycanvas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;shouldIPaint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;shouldIPaint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shouldIPaint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmousemove&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				
				&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;crosshair&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				
				&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;X : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; | Y : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#ababab&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shouldIPaint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
					&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clear&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clearall()&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mycanvas&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;border:1px dotted gray&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
			
		Additional complexity:&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;
		1. Use circles instead of squares
		2. Use line drawings
		3. Use bezier curves	
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;	
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This works because the canvas’s origin (0,0) is exactly the the 0,0 also of the HTML page. If the canvas is located somewhere else on the page, you should calculate some offset (the distance of upper left corner of the page from the upper left corner of the canvas element)&lt;/p&gt;

&lt;p&gt;Apart from knowing where the mouse position is, you should add another tool to your programming arsenal, that of knowing which key the user is pressing. This information can be acquired using the &lt;strong&gt;event.keyCode&lt;/strong&gt; property. Here is an example on how to use it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// lets keep track of where we are&lt;/span&gt;
		
		
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;mycanvas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;READY&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			
			&lt;span class=&quot;c1&quot;&gt;// arrow keys are only detected onkeydown, not onkeypress&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onkeydown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				
				&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				
				&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;37&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;lt;-&lt;/span&gt;
						&lt;span class=&quot;nx&quot;&gt;moveLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ^&lt;/span&gt;
						&lt;span class=&quot;nx&quot;&gt;moveUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nx&quot;&gt;moveRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// V&lt;/span&gt;
						&lt;span class=&quot;nx&quot;&gt;moveDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showStat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ARROW key : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;br/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;curr X : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; | curr Y : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moveUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;showStat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Up&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moveDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;showStat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Down&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moveLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;showStat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Left&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moveRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;showStat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Right&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mycanvas&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;border: 1px dotted gray;&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tabindex=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By attaching the onkeydown event to the canvas, we can now begin to trap some keyboard events. I used &lt;strong&gt;onkeydown&lt;/strong&gt; and not onkeypress because onkeydown is capable of capturing the navigational arrow keys, and onkeypress is not. The keycodes for left, up, right and down arrow are 37,38,39 and 40 respectively. &lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-eleven&quot;&gt;Day Eleven&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Color Wheel sample&lt;/strong&gt; - We can get very specific pixel information from the 2d context. The *getImageData()** function returns some interesting information about specific pixels. &lt;/p&gt;

&lt;p&gt;The following sample code uses demonstrates the usage of getImageData().&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- imagedata.html --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			
			&lt;span class=&quot;nf&quot;&gt;#canv&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ababab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
			&lt;span class=&quot;nf&quot;&gt;#coloroutput&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;dotted&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;orange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;

		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;imagedata.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;canv&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;coloroutput&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;textoutput&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			Color value
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
		
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;imagedata.js&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mousepos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colorout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;canv&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;mousepos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;colorout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;coloroutput&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;textout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;textoutput&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;colorwheel.png&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmousemove&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;//figure out first where the mouse is&lt;/span&gt;
		
		&lt;span class=&quot;nx&quot;&gt;mousepos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;mousepos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imagedata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getImageData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mousepos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mousepos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pixel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imagedata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pixel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pgreen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pixel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pblue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pixel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;palpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pixel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rgba(&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pgreen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pblue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;palpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;nx&quot;&gt;colorout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;backgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;textout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;textout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The sample code could have defined the image in the HTML using the img tag, but then, the image would have been visible in the HTML before we could draw it inside the canvas. Our code instead defined and initialized the image using JavaScript code so that it is only visible in the canvas and on the HTML page. &lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-twelve&quot;&gt;Day Twelve&lt;/h2&gt;

&lt;p&gt;More on animation. &lt;/p&gt;

&lt;p&gt;First sample code is &lt;strong&gt;anim.html&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nf&quot;&gt;#canv&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ababab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xpos2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stopDrawing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		
			&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;canv&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;xpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;xpos2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;stopDrawing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;stopDrawing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopDrawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopDrawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
					&lt;span class=&quot;nx&quot;&gt;xpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;nx&quot;&gt;xpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xpos2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
					&lt;span class=&quot;nx&quot;&gt;xpos2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;nx&quot;&gt;xpos2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				
			
				&lt;span class=&quot;c1&quot;&gt;//setTimeout(draw,30);&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xpos2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;	
			
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;canv&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Anim.html moves two squares across the width of the canvas. There is a little bit of collision detection at work here, as soon as the boxes collides with the right boundary of the canvas, we reset the &lt;em&gt;x-position&lt;/em&gt; of each box to zero, it makes the illusion that the squares are reappearing from the right boundary of the canvas. &lt;/p&gt;

&lt;p&gt;While this type of coding works for a few shapes, it is not a very good way to structure our code. You will find out (pretty soon) that adding another shape into the canvas involves keeping track of another x-position—the code will turn ugly and hard-to-maintain (rather quickly too). &lt;/p&gt;

&lt;p&gt;Anim2.html involves 3 shapes and sports a different behavior during collision, the shape bounces back to the opposite direction.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nf&quot;&gt;#canv&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ababab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stopDrawing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	
			
			
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		
			&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;canv&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				
			&lt;span class=&quot;nx&quot;&gt;stopDrawing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;stopDrawing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopDrawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
			&lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;s3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;140&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAcceleration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAcceleration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAcceleration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
			&lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;	
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// move left, false is right&lt;/span&gt;
			
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;acceleration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAcceleration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;accel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;acceleration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;acceleration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;acceleration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;acceleration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;canv&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code keeps track of the direction of each shape using a &lt;em&gt;direction&lt;/em&gt; variable inside each Shape constructor. Abstracting each shape to be inside an object does make our code a bit more effective in taming the the complexities brought about by adding new shapes into the canvas.  &lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-thirteen&quot;&gt;Day Thirteen&lt;/h2&gt;

&lt;p&gt;Topic for today and the days to come, is SVG (Scalable Vector Graphics) in HTML5. SVG is a standard W3C specification. The ability to insert SVG inside a page without using an object (or embed) tag was added to HTML5. SVG is also a drawing API, like the canvas, but it has some differences.&lt;/p&gt;

&lt;p&gt;SVG uses vector graphics, these are groups of math formulas to draw primitives like lines, circles, rectangles and many more. The quality of SVG graphics do not degrade as they are scaled down or up in size, unlike a bitmapped or rasterized technique (which the canvas uses). Drawings in SVG are represented using XML instead of pure code — although you can produce SVG elements purely in code because SVG elements are addressable using the DOM API (unlike elements inside the canvas) &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CODE WORKS&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nf&quot;&gt;#mysvg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ababab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;rect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;rect1&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;rect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;rect2&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;70&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;70&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To insert an SVG drawing, create an SVG tag, specify the width and height using the attributes. To draw a rectangle, create a &lt;strong&gt;rect&lt;/strong&gt; tag, specify the &lt;em&gt;x, y, width and height&lt;/em&gt; attributes. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nf&quot;&gt;#mycanvas&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ababab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;therect&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
						
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;rect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;therect&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;100&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill: #ababab; stroke:#000;&amp;quot;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The second example shows how attach an &lt;strong&gt;onclick&lt;/strong&gt; event to the SVG drawing. As previously mentioned, SVG drawing elements are DOM addressable, they are part of the DOM, which means you can attach events to it just like you would say, a button, text or a DIV element. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nf&quot;&gt;#mysvg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ababab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//var rectx = 0;&lt;/span&gt;
		
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;therect&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;anim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;anim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		
		
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rectedge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svgedge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;mysvg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rectx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
			
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rectedge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svgedge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rectx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rect &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rectedge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; | svg edge : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svgedge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;anim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
			
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mysvg&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;800&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;rect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;therect&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;100&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stroke:gray;fill=gray;&amp;quot;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The third example demonstrates the use of &lt;em&gt;getAttribute&lt;/em&gt; and &lt;em&gt;setAttribute&lt;/em&gt; methods. This example animates the location of the rectangle by altering the &lt;strong&gt;X&lt;/strong&gt; attribute of the rectangle drawing. &lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-fourteen&quot;&gt;Day Fourteen&lt;/h2&gt;

&lt;p&gt;How to create SVG elements programmatically.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create the outer SVG element using the &lt;em&gt;createElementNS&lt;/em&gt; method of the &lt;strong&gt;document&lt;/strong&gt; object&lt;/li&gt;
  &lt;li&gt;Attach the created SVG element to the page body using &lt;strong&gt;document.body.appendChild()&lt;/strong&gt; method&lt;/li&gt;
  &lt;li&gt;Create SVG elements (such as rect) using the createElementNS as well&lt;/li&gt;
  &lt;li&gt;Attach the newly created SVG elements (rect in this case) to the SVG element using the appendChild method&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://www.w3.org/2000/svg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		
			&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
			&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElementNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;svg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttributeNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;700px&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttributeNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;400px&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;c1&quot;&gt;//svg.width = 800;&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;//svg.height = 400;&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElementNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rect&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rx&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ry&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
						
			&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				
				&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svgheight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAttributeNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svgwidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAttributeNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
				
				&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svgwidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svgheight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				
				&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;X : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; | Y : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;				

			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
			
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;raphaeljs&quot;&gt;RaphaelJS&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://raphaeljs.com&quot;&gt;RaphaelJS is a small JavaScript library that simplifies working with SVG using JavaScript&lt;/a&gt;. &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Download the RaphaelJS code from the &lt;a href=&quot;http://github.com/DmitryBaranovskiy/raphael/raw/master/raphael-min.js&quot;&gt;RaphaelJS site&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Include the library as external JS file&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;raphael-min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Follow the vanilla sample on the RaphaelJS site to make sure everything is working&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;


		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;raphael-min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		
			&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Raphael&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;fill&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#ffffff&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;stroke&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#000000&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;circleclick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
						
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;circleclick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

			
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The constructor call &lt;strong&gt;Raphael(0,0,500,300)&lt;/strong&gt; is equivalent to writing&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;300&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Another sample of using the RaphaelJS functions featuring some simple drag-and-drop capabilities&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;


		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;raphael-min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	
			
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				
			&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Raphael&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;750&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;fill&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#ababab&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;stroke&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#000000&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;up&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;c1&quot;&gt;//circle.attr({cx: event.clientX, cy: event.clientY});&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
			&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			
				
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			X Y
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;drag&lt;/strong&gt; method attached to the circle object takes three &lt;strong&gt;callbacks&lt;/strong&gt; parameters. On the first callback, write what you would like to happen during the initial mousedown event. On the second callback, write what you would like to happen during the mousemove and the final callback, write what you would like to happen when the user releases the mouse (mouseup).&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>RD Skill Building. Programming Concepts</title>
   <link href="http://thelogbox.com/blog-programming-concepts"/>
   <updated>2012-07-23T00:00:00+08:00</updated>
   <id>http://thelogbox.com/blog-programming-concepts</id>
   <content type="html">&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Programming Concepts&lt;/strong&gt; is 1 of 3 training modules to prepare non-programming folks for HTML5 programming. &lt;/p&gt;

&lt;p&gt;The route we will take is rather a traditional one. We will build skills fundamental to programming, progress to JavaScript and finally, take HTML5 programming head on. The reason we need the programming skills is because we intend do lots of things in HTML5, things other than markup. &lt;/p&gt;

&lt;h2 id=&quot;why-are-we-using-java&quot;&gt;Why are we using Java&lt;/h2&gt;

&lt;p&gt;There were a couple of choices on what programming to use for the programming concepts part. These were Python, Ruby, JavaScript, C and C++.&lt;/p&gt;

&lt;p&gt;We ruled out JavaScript—even if at first it would seem that we should start using it early on—because of the inherent complexity of its eco-system. It needs to be run inside the browser, the interpreters is inside the browser and the basic I/O or networking capabilities needs to be done within the confines of the browser. Surely we could have considered other acrobatics in JavaScript to overcome these issues, such as using the V8 engine, Rhino or even Node.JS, but it might add unecessary complexity and get in the way of learning how to program—quickly.&lt;/p&gt;

&lt;p&gt;Python and Ruby are probably the easiest language to learn for a beginner. I did not choose them because of their syntactical characteristics, they are too far from JavaScript.&lt;/p&gt;

&lt;p&gt;The options were then limited to C, C++ and Java. C has been discarded because it is too difficult to demonstate object oriented technqiues in it, it does not have native facility for OOP idioms.&lt;/p&gt;

&lt;p&gt;C++ and Java shares quite a lot of the syntactical characteristics of JavaScript, either one of these two would have sufficed. I chose Java finally because of the richness of built-in libraries. It is easier and faster to get ramped up on Java than in C++ because Java has a more complete eco-system for development.&lt;/p&gt;

&lt;h2 id=&quot;why-are-we-keeping-a-journal&quot;&gt;Why are we keeping a journal&lt;/h2&gt;

&lt;p&gt;The basic idea is that each day, we will tackle something new on concepts and we will add some words to our vocabulary. &lt;/p&gt;

&lt;p&gt;Vocabulary is important because it allows the learner to have some handle on concepts being learned. The learners can talk about the concepts and start extrapolating ideas behind those concepts. This is a very simple approach in pedagogy. &lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;The Java Language Specification (reference material)&lt;/li&gt;
  &lt;li&gt;Java Shooters (reference material) – this is free and can be &lt;a href=&quot;free-resource-java-shooters-pdf/&quot;&gt;downloaded here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The Java Programming Language 3rd Edition (Reference material)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/java-programming-concepts-workbook/&quot;&gt;Programming concepts workbook&lt;/a&gt;(workbook and practice questions)&lt;/li&gt;
  &lt;li&gt;GitHub Repo - All the code samples and exercises are stored on &lt;a href=&quot;https://github.com/tedhagos/rd-prog-con-batch1.git&quot;&gt;this GitHub Repo&lt;/a&gt;. You need to have a Git client setup on your machine. If you do have Git, you can pull this repo by cloning it in your machine &lt;strong&gt;https://github.com/tedhagos/rd-prog-con-batch1.git&lt;/strong&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;a-note-to-the-reader&quot;&gt;A note to the reader&lt;/h2&gt;

&lt;p&gt;These notes will make sense to you if you attended the workshop because they are essentially a bullet point of what have been discussed each day of the workshop. If you are (were) not part of the workshop, some concepts might make sense and others might not. Reading the &lt;a href=&quot;free-resource-java-shooters-pdf/&quot;&gt;Java Shooters PDF material&lt;/a&gt; could help because these lessons were based on that book.&lt;/p&gt;

&lt;h1 id=&quot;day-1&quot;&gt;Day 1&lt;/h1&gt;

&lt;h2 id=&quot;concepts&quot;&gt;Concepts&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;An executable file is something that an Operating System (Win, OSX, Linux or UNIX) knows how to run. This is often called machine readable code. These are not readable by mere mortals&lt;/li&gt;
  &lt;li&gt;There was a time that programmers had to code in a very low level way (as low level as zeroes and ones). This wasn’t fun and caused lots of nosebleeds, so they (programmers and computer scientist way before our time) deviced some abstractions, some sort of short-hand to these low level programming language (assembly language etc) &lt;/li&gt;
  &lt;li&gt;As time went on, other programming languages sprouted. Some languages did build on top of other programming languages, providing a much higher abstraction (short hand)&lt;/li&gt;
  &lt;li&gt;These higher level languages became increasingly powerful because they were easier to understand. They can be read by mere mortals. The files where we write programs using higher level languages are known as source files or source code. Source files are not machine-readable codes, we will need some tools to make our source code palatable or runnable by the OS&lt;/li&gt;
  &lt;li&gt;Now comes the compiler and linker. Compilers and linkers gobbles up source codes and spits out machine readable codes. The machine readable code is what you double-click and launch as applications&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;setup-of-development-environment&quot;&gt;Setup of development environment&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Install the JDK (Java Development Kit)&lt;/li&gt;
  &lt;li&gt;Configure the PATH and CLASSPATH variables. There are some resources you can look at on how to do this. One from &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/webnotes/install/windows/jdk-installation-windows.html&quot;&gt;Oracle&lt;/a&gt; and &lt;a href=&quot;http://www3.ntu.edu.sg/home/ehchua/programming/howto/JDK_Howto.html&quot;&gt;another one&lt;/a&gt;, somewhere on the net.&lt;/li&gt;
  &lt;li&gt;Test the configuration. Get a terminal (Termina.app, cmd or gnome-terminal) &lt;/li&gt;
&lt;/ol&gt;

&lt;pre class=&quot;codeblock&quot;&gt; 
  
  java -version  		//for OSX and Linux
  c:\&amp;gt;java -version	//if you are on windows

&lt;/pre&gt;

&lt;p&gt;This should return something like this&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

  java version &quot;1.6.0_33&quot;
  Java(TM) SE Runtime Environment (build 1.6.0_33-b03-424-11M3720)
  Java HotSpot(TM) 64-Bit Server VM (build 20.8-b03-424, mixed mode)
_$
 
&lt;/pre&gt;

&lt;h2 id=&quot;vocabulary&quot;&gt;Vocabulary&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Source code&lt;/strong&gt; - Computer program that contains instructions using a high level language. There are lots of programming languages, each language will have its own sets of programming instructions&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Compiler&lt;/strong&gt; - source codes, while easier to read and write, are not machine-readable. A compiler is used to gobble up source code(s) and transform them. The resulting files can now be read by the machine (can be ran by the OS)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Interpreter&lt;/strong&gt; - does exactly what a compiler would do, but it does a little bit differently. A compiler will read and process each entry in the source file before it executes all the instructions, one after the other until there is no more instruction to execute. An interpreter on the other hand, reads the first instruction, executes it immediately, then proceeds to the next instruction&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;High level language&lt;/strong&gt; - A programming language that humans can read. Some of them are even close to the language we use in everyday conversations—well, not really, programming languages are usually terse, dry and cryptic, the point is that they are more intuitive than instructions like &lt;em&gt;MOV, JMP or 010101111 100111&lt;/em&gt; so on and so forth. Java, Python, Ruby, JavaScript are examples of high level languages; there are many more, but you get the idea &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Java is different from JavaScript&lt;/strong&gt; - They are two different programming languages. One came from Sun Microsystems (now Oracle) and the other came from NetScape. One is a compiled language that runs inside a Virtual Machine and the other is a scripting language that runs inside a browser. There are some similarities on the syntactical aspect but they are like apples and oranges, they are not related even&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;code-works&quot;&gt;Code works&lt;/h3&gt;

&lt;p&gt;Learn how to write the simplest program in Java. The purpose is not to gobble up a lot of Java—just get a feel of how to write a (valid) code, compile it and run it.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3192789.js?file=HelloWorld.java&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;day-2&quot;&gt;Day 2&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/overview/javahistory-index-198355.html&quot;&gt;Little bit of history about Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Java’s first name was Oak. Java’s rise to fame wasn’t all because of Java’s technical merits. The rising popularity of HTML and Internet technologies (HTTP) contributed to Java’s claim to fame&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;concepts-1&quot;&gt;Concepts&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Java native data types&lt;/strong&gt; - There are eight (8). You can use &lt;em&gt;byte, short, int &amp;amp; long&lt;/em&gt; for counting things. You can use &lt;em&gt;float &amp;amp; double&lt;/em&gt; for measuring things. Use &lt;em&gt;boolean&lt;/em&gt; to represent truth or falsity. Use &lt;em&gt;char&lt;/em&gt; to do stuff in unicode&lt;/li&gt;
  &lt;li&gt;Each programming language have their own set of keywords or reserved words. These reserved words have special meaning to the language’s compiler. Learning the actions of the reserved words is an important activity in programming. Do not use reserved words as identifiers (variables, class names or method names) in your own code&lt;/li&gt;
  &lt;li&gt;White space is used by the Java compiler to separate the parts of the code. Whether you use a single white space or a 100 white spaces does not matter at all. Use whitespaces intelligently to improve readability of your code &lt;/li&gt;
  &lt;li&gt;A program code, like a regular English sentence, can be broken down into components. The process of tokenizing (segregating) the source code and performing analysis/evaluation on it, is known as lexical analysis—this is a function of the compiler&lt;/li&gt;
  &lt;li&gt;Java has some rules when performing addition between types. When one of operands in a an addition expression is a &lt;em&gt;double&lt;/em&gt;, the result of the expression is a double type; when one of the operands is a &lt;em&gt;float&lt;/em&gt;, the result of the expression is a float type; when one of the operands is of type &lt;em&gt;long&lt;/em&gt;, the result is of type long; any other case, the result of a math addition is of type &lt;em&gt;int&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;vocabulary-1&quot;&gt;Vocabulary&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Reserved words or keywords&lt;/strong&gt; - special words in a programming language. They have designated actions. You cannot use these as names of either class, variable or function&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Identifiers&lt;/strong&gt; - a collective term used to refer to either program variables, name of classes or name of functions (methods)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Data types&lt;/strong&gt; - The kinds of data you can define and use. Java has 8 native data types. byte, short, int, long, float, double, char and boolean&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Syntax error&lt;/strong&gt; - When you don’t follow the rules of the language or don’t write the program source code in accordance to the rules of usage, this is what you get. You cannot proceed to compilation until you have corrected all syntactical errors&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Compiler error&lt;/strong&gt; - Error that happens during compile time. Syntax errors could be one of the causes of a compilation error—there are other reasons&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;day-3&quot;&gt;Day 3&lt;/h1&gt;

&lt;h2 id=&quot;concepts-2&quot;&gt;Concepts&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;You can organize your code by breaking it down into little, more manageable pieces and tuck them away into functions. Using functions as a unit of abstraction is a characteristic of modular or procedural programming&lt;/li&gt;
  &lt;li&gt;While Java can use functions a unit of abstraction, it has language support to use a wider unit of abstraction—the class mechanism. &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Control structures&lt;/strong&gt; - There are 3 ways a program can flow, at the method &lt;em&gt;block level&lt;/em&gt;. It can proceed sequentially by executing statements one after another until it runs out of code to execute. It can fork or branch, going one direction when some condition is true, then going another direction when the condition is not true. The code can also flow in a circular and repetitive fashion—it can go on in this loop while certain conditions are true. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vocabulary-2&quot;&gt;Vocabulary&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;RHS&lt;/strong&gt; and &lt;strong&gt;LHS&lt;/strong&gt; - left hand side (LHS) refers to stuff that you write to the left of the equal sign (=), Java’s assignment operator. Corollarily, right hand side (RHS) refers to what you write on the right side of the equal sign. LHS is concerned about the &lt;em&gt;location&lt;/em&gt; of a variable, not it’s content. The RHS is concerned about the content (value) of the variable, not its location or address. Hence, the expression &lt;em&gt;a = a + 1&lt;/em&gt;, means; a (LHS) will resolve to where &lt;em&gt;a&lt;/em&gt; is located, say address 1001; and &lt;em&gt;a&lt;/em&gt; (RHS) refers to the current value of &lt;em&gt;a&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Abstraction&lt;/strong&gt; - Its a mental process of thinking a dozen (or so) characteristics about a specific something. List down its traits, behavior, characteristics, properties etc. Then try remove items from this list or reduce this list. Each time you remove an item, ask yourself—“If I remove this stuff, will this object still be the same object, or will it become something else”. You will stop the reduction when what remains is the absolute essential characteristics of the object&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-works-1&quot;&gt;Code works&lt;/h3&gt;

&lt;script src=&quot;https://gist.github.com/3192789.js?file=Multiply.java&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;day-4&quot;&gt;Day 4&lt;/h1&gt;

&lt;p&gt;Not much concepts during day 4, this was spent clarifying solutions to previous home works and machine problems.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Data structure&lt;/strong&gt; - constituent components or parts of a data type. e.g. the data structure of a calling card or a business card is; name, email address, phone number. If we were to write this data structure in Java, it would look like;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;class BusinessCard {
	String name;
	String phoneno;
	String emailaddress;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Objects&lt;/strong&gt; - it is quite convenient (for now) to think of Java Objects as some sort of data structure, since it is, after all, a complex data type. Its difference with a traditional data structure (like the BusinessCard example above) is that, a Java object has &lt;em&gt;behavior&lt;/em&gt; (because there are functions in it), while a traditional data structure cannot exhibit behavior&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Runtime error&lt;/strong&gt; - a kind of error that happens when your application is running. The code may have compiled, which means syntactically it is okay, however, your code has not satisfied some runtime requirement or may have violated some rules (which cannot be checked during compile time). e.g. If you compile a class that does not have &lt;em&gt;public static void main&lt;/em&gt;, and tried to run that class, you will get a &lt;strong&gt;NoSuchMethod&lt;/strong&gt; exception. Having a valid public static void main is a requirement for an application to run (CLI applications)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-works-2&quot;&gt;Code works&lt;/h3&gt;

&lt;script src=&quot;https://gist.github.com/3192789.js?file=KeyboardInput.java&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/3192789.js?file=FindGCF.java&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;day-5&quot;&gt;Day 5&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;On Object Oriented approaches&lt;/strong&gt; - There is &lt;em&gt;class-based&lt;/em&gt; OOP and &lt;em&gt;Prototypal&lt;/em&gt; OOP. Java uses class-based OOP—lets start with this one because this seems to be the classical approach&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;On Objects and Classes&lt;/strong&gt; - We already discussed objects in the last couple of days. We will use objects to model real-world (business) objects. In order to do this, we need to go through an &lt;em&gt;Abstraction&lt;/em&gt; process. Once you’ve got an idea about what the object should do and what it must know about itself, these can be codified into &lt;strong&gt;Classes&lt;/strong&gt;. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Classes are the stuff where objects comes from. An object is an instance of class. Just like when you have a blue print of the house, the blue print is the not the house, it only contains instructions on how to build the house. Classes are to blueprints, as objects are to houses. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Methods&lt;/strong&gt; - methods or functions can accept arguments or parameters. Whatever data you pass as a parameter to the method you are calling will become available to the method. The method can do with the data as it pleases. When a method makes changes to the parameters, sometimes the original data is not affected (pass by value) and sometimes the original data can be affected (pass by reference) — but we will get to that on later sessions&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-works-3&quot;&gt;Code works&lt;/h3&gt;

&lt;p&gt;Java accepts parameters from the command line. Everything you pass as a command line argument is stored inside &lt;em&gt;main(String []args)&lt;/em&gt;. The very first command line param is stored in args[0], the next one in args[1] …&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3192789.js?file=MainParams.java&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;day-6&quot;&gt;Day 6&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Member variable&lt;/strong&gt; - declared on the same level where methods are declared (at the top level). These variables becomes the states of the object. They are reachable and addressable as long as the object is in scope–meaning, it hasn’t been garbage collected yet&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Local variable&lt;/strong&gt; - declared inside methods. They are only usable from within the method where they were created–they cannot be used by other methods. Parameters to the methods become local variables as well.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Inheritance&lt;/strong&gt; - A major characteristic of an OO language. A form of re-use (by extension), in Java , the keyword for class inheritance is &lt;em&gt;extends&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Base class&lt;/strong&gt; - sometimes also called &lt;em&gt;Parent class or Super class&lt;/em&gt;. A target of the &lt;em&gt;extends&lt;/em&gt; keyword. When a Parent class is extended, whatever behaviors or states the Parent class have, the extending class will automatically have.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Derived class&lt;/strong&gt; - sometimes also called &lt;em&gt;Child class&lt;/em&gt;. In an inheritance relationship, the Child class is the one doing the extending. It is the recipient of the behaviors and states of the class being extended (Parent class) &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-works-4&quot;&gt;Code works&lt;/h3&gt;

&lt;p&gt;The MobilePhone class defines, for itself, only the &lt;em&gt;void sms()&lt;/em&gt; method, however, because it extended the Phone class, it can also exhibit behaviors of the Phone. The methods setNumber, call and answer are available for the MobilePhone even if MobilePhone does not contain code definitions for these methods–they are available because these methods were inherited from class Phone&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3192789.js?file=Phone.java&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;day-7&quot;&gt;Day 7&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt; - A type is synonymous to a set of behaviors that an object exhibits. A set of behavior (or promised behavior) usually constitutes a Type—usually because there are types in Java that don’t have any declared behaviors (marker interfaces), but lets not get ahead of ourselves, that is further down the road. When you create a new class, you are defining a new Type. &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Object contract&lt;/strong&gt; - When you inherit from a class or implement an interface, you are entering into an object contract. Whatever behavior that your Parent class supports, you must support too&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Polymorphism&lt;/strong&gt; – When you inherit behavior or functionality from your Parent class, and you modified that behavior (method), it makes the behavior polymorphic. This is done by method overriding&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;day-8&quot;&gt;Day 8&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Boundaries or encapsulation units&lt;/strong&gt; - Boundaries or encapsulation units from where and how far you can access member methods and variables of a given object. There are four access controls that govern these boundaries–&lt;em&gt;public, default, protected and private&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Packages&lt;/strong&gt; - a package is an encapsulation and organizational unit. They can restrict access to variables and methods of a given object. They can also be used as a way to group similar classes. Packages are like folders, and as such, they can function as namespaces—to prevent conflicts of names&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Storage classes&lt;/strong&gt; - Methods and variables can belong to either the class or its instance. Static members (variables and methods that comes with the &lt;em&gt;static&lt;/em&gt; keyword) are stored on the class. Non-static members are stored on the object. Non-static members are dedicated and non-shared copies of their respective objects) while static members are shared across all instances&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-works-5&quot;&gt;Code works&lt;/h3&gt;

&lt;p&gt;The &lt;em&gt;color&lt;/em&gt; variable is declared as a non-static member. Any property change to a specific color variable of a specific object cannot impact the color variables owned by the other objects.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;count&lt;/em&gt; variable on the other hand is shared across all objects. A change of the count variable, from any object will impact all the instances.&lt;/p&gt;

&lt;h3 id=&quot;code-works-6&quot;&gt;Code works&lt;/h3&gt;

&lt;script src=&quot;https://gist.github.com/3192789.js?file=Shape.java&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;day-9&quot;&gt;Day 9&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Passing parameters&lt;/strong&gt; - When parameters are passed to a method, a local copy of that variable will be made for the method. Be careful to note that when you pass parameters of a primitive type, you are passing a local copy of value of the parameter; When you pass parameters of reference types, the copy of the variable being passed contains not the actual object but a reference to the actual object. Any change you make to the object (while inside) the method using the object reference received via parameters will persist, even when the method goes out of scope.&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/3192789.js?file=SwapInt.java&quot;&gt;&lt;/script&gt;

&lt;p&gt;Pass by value&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3192789.js?file=Swap.java&quot;&gt;&lt;/script&gt;

&lt;p&gt;Pass by value also, but it hopelessly looks like a pass by  Reference&lt;/p&gt;

&lt;h1 id=&quot;day-10&quot;&gt;Day 10&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;this&lt;/strong&gt; - a reserved word which means a reference to the current object’s self. This is what a &lt;em&gt;constructor&lt;/em&gt; returns.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-works-7&quot;&gt;Code works&lt;/h3&gt;

&lt;p&gt;The String object is a built-in class. It allows us to manipulate words in an object oriented way rather than as a simple array of characters (you can still do that if you really want to). &lt;/p&gt;

&lt;p&gt;A sample code (below) shows how to walk through each character or a given String.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3258037.js?file=Str.java&quot;&gt;&lt;/script&gt;

&lt;p&gt;An exercise on the &lt;em&gt;this&lt;/em&gt; keyword&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3192789.js?file=Person.java&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;day-11&quot;&gt;Day 11&lt;/h1&gt;

&lt;h2 id=&quot;concepts-3&quot;&gt;Concepts&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Graphical User Interface programming (GUI)&lt;/strong&gt; is usually exposed by the O.S. as a set of APIs (Application Programming Interfaces)—this is also usually done using the C Programming language. If you have knowledge of programming GUI using the native SDK—say windows SDK (software development kit), you could do that as well. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Java GUI programming&lt;/strong&gt; (desktop GUI) is done by utilizing either the &lt;em&gt;java.awt&lt;/em&gt; or javax.swing* libraries. These libraries provides an object oriented (Java-ish) way of constructing widget and windows&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vocabulary-3&quot;&gt;Vocabulary&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;JFrame&lt;/strong&gt; - a top level container. It can contain widgets like buttons, textfields, labels etc. It can also contain other containers. The nesting of containers makes it possible to create sophisticated layouts&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Layout Manager&lt;/strong&gt; - A governor of sorts. It governs the distances and spacing of widgets relative to its siblings (other widgets) and relative to its container. There are many kinds of layout managers&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;BorderLayout&lt;/strong&gt; - A layout manager. divides the container into 5 regions (&lt;em&gt;north, south, east, west and center&lt;/em&gt;). This is the default layout manager for the JFrame&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;FlowLayout&lt;/strong&gt; - Another layout manager. It arranges the widgets in succession, from left to right then top to bottom&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-works-8&quot;&gt;Code works&lt;/h3&gt;

&lt;p&gt;When main() is executed, it simply calls the constructor, which in turn simply creates and instance of the &lt;strong&gt;Gui1&lt;/strong&gt; class (which is a subclass of JFrame). At this point, the program enters a never ending loop—this is the basic idea behind GUI programming, you wait for the user to do something. We need to wait for the user to shut down the window.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3258037.js?file=Gui1.java&quot;&gt;&lt;/script&gt;

&lt;p&gt;UserForm.java shows an example of how you can nest containers within other containers.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3258037.js?file=UserForm.java&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;day-12&quot;&gt;Day 12&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Listener object&lt;/strong&gt; - Special types within the Java library that are capable of &lt;em&gt;listening&lt;/em&gt; to user generated events. There are various kinds of listeners that you can use e.g. MouseListener, KeyListener and ActionListener; these are the most common. You need to create objects of these types in order to have an event listening mechanisms. Most Listeners are Java Interfaces, so you need to be comfortable with Type inheritance&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Event Trigger&lt;/strong&gt; - A widget e.g. JButton, JTextField event JFrame can be a source of an event&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-works-9&quot;&gt;Code works&lt;/h3&gt;

&lt;p&gt;MyListener &lt;strong&gt;is a kind of&lt;/strong&gt; ActionListener. ActionListener is a special interface that is capable of &lt;em&gt;listening&lt;/em&gt; to events. The basic idea on event programming are;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Createlistener object that listens and processes specific events–like mouse clicks and keyboard actions.&lt;/li&gt;
  &lt;li&gt;Create widgets that you would like to act as triggers, e.g. buttons &lt;/li&gt;
  &lt;li&gt;Connect the event trigger (like a button) to the listener &lt;/li&gt;
  &lt;li&gt;When an event is generated by the user, the specific methods defined by the Listener objects will be activated—actually, &lt;em&gt;called-back&lt;/em&gt;; &lt;/li&gt;
&lt;/ol&gt;

&lt;script src=&quot;https://gist.github.com/3258037.js?file=Gui2.java&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;day-13&quot;&gt;Day 13&lt;/h1&gt;

&lt;p&gt;The previous example (Gui2.java) essentially separates the JFrame and a Listener object. This approach is fine but it needs to marshall the object references (instances of Gui2 and MyListener) back and forth. Gui3.java takes a different approach. &lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3258037.js?file=Gui3.java&quot;&gt;&lt;/script&gt;

&lt;p&gt;In this version, Gui3 is both a JFrame and a Listener in itself. Gui3 is inheriting from 2 Types–a JFrame so that we can get all the goodies of a Windowed frame. It is also a listener by implementing the ActionListener interface. The &lt;em&gt;actionPerformed()&lt;/em&gt; method can now be written on the top-level of Gui3 because of the changes we did on the inheritance structure of Gui3. &lt;/p&gt;

&lt;p&gt;The fact that &lt;em&gt;actionPerformed()&lt;/em&gt; is now a member of Gui3 means that it has access to all the other members of Gui3, namely tf (JTextField) and btn(the JButton). Now we can move away from passing object references between the frame and the listener–like we did in Gui2.java&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3258037.js?file=RandomWord.java&quot;&gt;&lt;/script&gt;

&lt;p&gt;RandomWord extends Gui3. Notice how clean the code of RandomWord is? All the functionalities of Gui3 is automatically available for RandomWord. &lt;/p&gt;

&lt;p&gt;We wanted RandomWord to do something different than what Gui3 was doing. This was accomplished by simply overriding the &lt;em&gt;actionPerformed()&lt;/em&gt; method in RandomWord. This way, we can put whatever functionality we want in RandomWord–Inheritance and Polymorphism in action.&lt;/p&gt;

&lt;h1 id=&quot;day-14&quot;&gt;Day 14&lt;/h1&gt;

&lt;h2 id=&quot;vocabulary-4&quot;&gt;Vocabulary&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;abstract class&lt;/strong&gt; - the &lt;em&gt;abstract&lt;/em&gt; keyword can be used for a method or a class. When used in a class, the class cannot be instantiated. Abstract classes are the stuff for OOP analysis, you will use this deliberately to craft an overall design for your class hierarchy. As a regular dev (non-designer and non-architect), you need to know some basic facts about an abstract class.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;You cannot instantiate it&lt;/li&gt;
  &lt;li&gt;It is intended to be inherited&lt;/li&gt;
  &lt;li&gt;Some or all or none of the abstract class’ methods can be abstract&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;abstract method&lt;/strong&gt; - when the &lt;em&gt;abstract&lt;/em&gt; keyword is used on a method, it cannot have an implementation–meaning, it cannot have a &lt;em&gt;method block&lt;/em&gt;, the stuff inside the enclosing curly braces, including the curly braces. An abstract method looks like this.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;
void foo(); 	// as opposed to
void foo() {} 	// which is a concrete method because it has a method body
				// a pair of curly braces constitutes a method body even if
				// the braces are empty

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Facts you need to know about the abstract method and an abstract class&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;an abstract method is terminated by a semi-colon and does not have a method block&lt;/li&gt;
  &lt;li&gt;when one of the methods of a class is abstract, the whole class needs to be declared as abstract&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A concrete class then, is a class without any abstract method(s) and is itself not declared as abstract&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;final class&lt;/strong&gt; - when the final keyword is used on a class, the class cannot be inherited. The decision to make a class final is a design decision–one that is not to be taken lightly; having said that, the java.lang.String class of Java is actually declared as final; you cannot inherit from the String class. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;final method&lt;/strong&gt; - when a method is declared as final, it cannot be overriden. You effectively stop polymorphism right there. Again, these are decisions best left for OO designers. As a dev, you just need to know the consequences of the final keyword&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;final variable&lt;/strong&gt; - when a variable is declared as final, it effectively makes the variable a constant. Once a final variable has been declared and initialized, you won’t be able to assign a different value to that variable&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;.equals()&lt;/strong&gt; - to compare equality between primitive values, use the &lt;strong&gt;==&lt;/strong&gt;. If you are comparing reference types, you cannot use the double equals operator which is effective only for comparing value types. To compare reference types, you need to use the &lt;strong&gt;.equals()&lt;/strong&gt; method–this method is inherited by all classes in Java from java.lang.Object. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;USAGE:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
String a = &quot;HELLO WORLD&quot;;
String b = a.toUpperCase();

if(a.equals(b)) {
	
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;day-15&quot;&gt;Day 15&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;innner class&lt;/strong&gt; - You can define a class within another class. You can reference all the methods and variables (even private ones) of the enclosing class from an inner class.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;anonymous class&lt;/strong&gt; -  Like an innner class, an anonymous class is also nested within another class–only, they don’t have name. Anonymous classes are widely used for doing event handling in GUI programming&lt;/li&gt;
  &lt;li&gt;**blocking ** - example, calling somebody on the phone. You cannot complete the phone call until the person on the other line picks it up. The whole task is blocking because the completion is dependent on the other person at the end of the line; if he picks up the phone or not &lt;/li&gt;
  &lt;li&gt;**non-blocking ** - example, sending an email or IM. All you have to do is send the email or message, you don’t need to wait for the recipient to acknowledge the message&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Thread&lt;/strong&gt; - A Java class which allows us to run some portions of our code in non-blocking mode.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-works-10&quot;&gt;Code works&lt;/h3&gt;

&lt;script src=&quot;https://gist.github.com/3258037.js?file=Gui4.java&quot;&gt;&lt;/script&gt;

&lt;p&gt;Gui4 demonstrates using both inner class and anymous class for doing event handling&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3258037.js?file=ThreadG.java&quot;&gt;&lt;/script&gt;

&lt;p&gt;A small Thread Sample&lt;/p&gt;

&lt;h1 id=&quot;day-16&quot;&gt;Day 16&lt;/h1&gt;

&lt;p&gt;Got a feel of SQLite. Most of the exercises for today are already on Java Shooters. No need to replicate here. For more resources on SQL commands, head over to &lt;a href=&quot;http://www.w3schools.com/sql/default.asp&quot;&gt;W3Schools/SQL&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;day-17&quot;&gt;Day 17&lt;/h1&gt;

&lt;p&gt;&lt;span class=&quot;stress&quot;&gt;Some new vocabularies&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;GoF&lt;/strong&gt; (Gang of Four). Author of the Book Design Patterns&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Design Patterns&lt;/strong&gt; - Authoritative work on elements of reusable designs. Should be read by programmers using an OO language. You might want to &lt;a href=&quot;http://www.oodesign.com&quot;&gt;read this&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-works-11&quot;&gt;Code works&lt;/h3&gt;

&lt;p&gt;The annotated source of today’s code is &lt;a href=&quot;/source-docs/DBSample.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you will try this example, don’t forget the following steps.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create your test.db using the sqlite tool&lt;/li&gt;
  &lt;li&gt;Make sure sqlite-jdbc driver (the jar) file is available&lt;/li&gt;
  &lt;li&gt;Before you compile, ensure that the sqlite-jdbc jar file is included in the CLASSPATH&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;day-18&quot;&gt;Day 18&lt;/h1&gt;

&lt;p&gt;&lt;span class=&quot;stress&quot;&gt;Exceptions&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;An Exception is an error, an abnormal condition, a disruption of normal pro- gram flow. Programmer’s throw Exceptions from their their codes if they think something has gone awry. As a (responsible and defensive) programmer, you will make sure that your code will be able to respond to non-fatal conditions. Surely you will not allow your program to crash because the user has inputted wrong data. The code must be robust enough to recover from and even rectify abnormal conditions (this is lifted straight from the Text of Java-Shooters)–You can’t get away with Exceptions in Java, lots of codes you will deal with declares Exceptions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How will you know when you need to handle exceptions&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Just keep on coding, the compiler will tell you anyway if you missed to handle an exception being thrown by some method you are using; or&lt;/li&gt;
  &lt;li&gt;Study the codes that you are about to use, get to know the API well enough before using it (I prefer this one, start doing this, start coding like a programmer) &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;code-works-12&quot;&gt;Code works&lt;/h3&gt;

&lt;p&gt;Today’s code works is a combination of Swing Programming and JDBC programming. I annotated the codes for your reference, &lt;a href=&quot;/source-docs/DBProgGui.html&quot;&gt;you can view it here&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Scrollable Text</title>
   <link href="http://thelogbox.com/android-scrolling-edittext-using-scrollview"/>
   <updated>2012-07-22T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-scrolling-edittext-using-scrollview</id>
   <content type="html">&lt;p&gt;There will be times when you will need to display multiple lines of text that will exceed the height of visible display. You will need to scroll to view the rest of the text. For example, if you read something from a datasource, a file or a database and display its contents, chances are the number of lines of the datasource will be greater than the height of View component.&lt;/p&gt;

&lt;p&gt;To deal with this challenge, you can wrap an &lt;em&gt;EditText&lt;/em&gt; inside a &lt;em&gt;ScrollView&lt;/em&gt; component. The ScrollView will act as a viewport to textual content of the EditText. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:orientation=&quot;vertical&quot;
    android:layout_width=&quot;fill_parent&quot;
    android:layout_height=&quot;fill_parent&quot;
    &amp;gt;

	&amp;lt;EditText
		android:layout_width=&quot;fill_parent&quot;
		android:layout_height=&quot;wrap_content&quot;
		android:id=&quot;@+id/todoedit&quot;
		android:layout_weight=&quot;0&quot;
	/&amp;gt;

	&amp;lt;ScrollView
		android:layout_width=&quot;fill_parent&quot;
		android:layout_height=&quot;wrap_content&quot;
		android:layout_weight=&quot;10&quot;
	&amp;gt;

		&amp;lt;TextView  
    		android:layout_width=&quot;fill_parent&quot; 
    		android:layout_height=&quot;wrap_content&quot; 
    		android:text=&quot;I have nothing&quot;
			android:id=&quot;@+id/tododisplay&quot;
    	/&amp;gt;
	&amp;lt;/ScrollView&amp;gt;
	&amp;lt;Button
		android:layout_width=&quot;fill_parent&quot;
		android:layout_height=&quot;wrap_content&quot;
		android:text=&quot;Add item&quot;
		android:id=&quot;@+id/btnadd&quot;
		android:onClick=&quot;recAdd&quot;
		android:layout_weight=&quot;0&quot;
/&amp;gt;
&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is no need to mess around with the Activity class. The scrolling functionality is accomplished on main.xml file&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>JavaScript Toolchain</title>
   <link href="http://thelogbox.com/javascript-mydevelopment-setup"/>
   <updated>2012-07-20T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-mydevelopment-setup</id>
   <content type="html">&lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Platform&lt;/strong&gt; - OSX 10.8 (Mountain Lion)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Editor(s)&lt;/strong&gt; - TextMate 2.0 Alpha, Smultron4&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;JavaScript Environments&lt;/strong&gt; - SpiderMonkey, RingoJS, NodeJS, Rhino&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Code checker&lt;/strong&gt; - JSLint (via JavaScript tools)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;nodejs&quot;&gt;Node.JS&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Go to nodejs.org, download the tar.gz version, then &lt;strong&gt;make install&lt;/strong&gt;. This way, the npm installer is also intalled. Yes you can try brew install node, but there were some problems installing the npm. Just the get the source and install using the make tools, like you used to. There is also a .PKG installer, this one is more painless than the source install–use the PKG whenever possible&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get docco - sudo install -g docco&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you encounter some 404 problems on the registry of npm, you can change the registry. Default registry is npm set registry http://registry.npmjs.org/ , I had to try either one of these two&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;npm set registry http://85.10.209.91/&lt;/li&gt;
  &lt;li&gt;npm set registry http://165.225.128.50:8000&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;javascript-tools-for-textmate&quot;&gt;JavaScript tools for TextMate&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;on the CLI, cd to &lt;em&gt;~/Users/ted/Library/Application Support/TextMate/Managed/Bundles&lt;/em&gt;. On 1.x version of TextMate, this directory could have been &lt;em&gt;~/Library/Application Support/TextMate/Pristine Copy/Bundles&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git clone https://github.com/subtleGradient/javascript-tools.tmbundle.git&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bundle should have been reloaded by now, if not&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;phantomjs&quot;&gt;PhantomJS&lt;/h1&gt;

&lt;p&gt;http://phantomjs.org, this is good for&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;headless web testing&lt;/li&gt;
  &lt;li&gt;site scraping&lt;/li&gt;
  &lt;li&gt;SVG rendering&lt;/li&gt;
  &lt;li&gt;network monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;test-tools&quot;&gt;Test tools&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Jasmine&lt;/li&gt;
  &lt;li&gt;QUnit&lt;/li&gt;
  &lt;li&gt;FuncUnit&lt;/li&gt;
  &lt;li&gt;YUI Test &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are some &lt;a href=&quot;http://code.google.com/p/phantomjs/wiki/TestFrameworkIntegration&quot;&gt;quick info on&lt;/a&gt;. There is also some &lt;a href=&quot;http://code.google.com/p/phantomjs/wiki/QuickStart&quot;&gt;quickstart docs at&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;test-web-servers&quot;&gt;Test Web servers&lt;/h1&gt;

&lt;p&gt;Ways to run a simple web server. This could be very handy if you are testing JavaScript and HTML5 &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Python – just run python -m SimpleHTTPServer on any directory. The dir becomes the docroot. http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python for more info&lt;/li&gt;
  &lt;li&gt;nanoc, of course&lt;/li&gt;
  &lt;li&gt;LAMP, WAMP or use the default Apache installation in OSX&lt;/li&gt;
  &lt;li&gt;Jetty - http://docs.codehaus.org/display/JETTY/Hightide+Documentation&lt;/li&gt;
  &lt;li&gt;Apache Tomcat, Jetty&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://redmine.lighttpd.net/projects/lighttpd/wiki/TutorialConfiguration&quot;&gt;LightHttpd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Node - &lt;a href=&quot;http://www.sitepoint.com/serving-static-files-with-node-js/&quot;&gt;Static file serving&lt;/a&gt;. What I probably will use for RD training is http-server. Just “sudo npm -g install http-server” then start with http-server. The current directory will be served up&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Using Layout Weights</title>
   <link href="http://thelogbox.com/android-layout-weights"/>
   <updated>2012-07-20T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-layout-weights</id>
   <content type="html">&lt;aside&gt;
This document has been rewritten and will no longer be updated. The new document is found &lt;a href=&quot;/android/layout-weights&quot;&gt;here&lt;/a&gt;
&lt;/aside&gt;

&lt;p&gt;Learning to layout vertically and horizontally are basic skills in UI programming. They are effective and good enough, but that’s just the thing, they are just good enough. If you want to show a bit of finesse, you need to do something beyond the basics.  &lt;/p&gt;

&lt;p&gt;Linear layouts will do exactly what the name implies. It will layout the Views linearly. What it will not do is resize the Views to take advantage of free space.  If you do not manage free space in your layout, the design will not appear tight, and a bit, well, amateurish. &lt;/p&gt;

&lt;p&gt;There is one easy thing that if you do, will add a bit of finesse to the UI design. That one thing is to add &lt;em&gt;layout weights&lt;/em&gt; to the Views.&lt;/p&gt;

&lt;h2 class=&quot;section&quot;&gt;START WITH A BASIC UI WITHOUT LAYOUT&lt;/h2&gt;

&lt;p&gt;Create an &lt;em&gt;Activity based&lt;/em&gt; project for this example. Use the default vertical linear layout and add an &lt;em&gt;EditText, TextView and Button&lt;/em&gt; components&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/todoedit&amp;quot;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;  
    	&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt; 
    	&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    	&lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I have nothing&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/tododisplay&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Add item&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/btnadd&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:onClick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;recAdd&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/layout-no-weight.png&quot; width=&quot;50%&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;The UI as it current looks&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;This design suffers from a couple of problems. The vertical space for the &lt;em&gt;TextView&lt;/em&gt; is lacking. If the application intends to display multiple lines on the &lt;em&gt;TextView&lt;/em&gt; to let users type up inputs and append the results to TextView, then the TextView should have more vertical space than either the &lt;em&gt;Button&lt;/em&gt; or the &lt;em&gt;EditText&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;We can increase the space occupied by the &lt;em&gt;TextView&lt;/em&gt; by increasing the number of lines it will occupy. It can be done by adding  a statement like &lt;em&gt;android:lines=”10”&lt;/em&gt; or any number of lines to the TextView declaration. That approach however, have some setbacks, it might work for a 5” screen device but you might need to tweak the number of lines if the app is deployed on another device with a different screen size. Specifying absolute values is a dangerous thing to do in UI design. You just don’t know the form factor of the device where you will app will run. &lt;/p&gt;

&lt;h1 id=&quot;using-a-weighted-layout&quot;&gt;USING A WEIGHTED LAYOUT&lt;/h1&gt;

&lt;p&gt;Each &lt;em&gt;View&lt;/em&gt; component can be assigned a &lt;em&gt;weight property&lt;/em&gt;. You can specify the amount of remaining space that the component can occupy  relative to the amount of space that the other components are occupying. &lt;/p&gt;

&lt;p&gt;Think of the weight approach as pie chart. If there 3 components in the UI, I can try to allocate percentages to each component. The percentages represents the amount of screen real-estate to be allocated. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/todoedit&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_weight=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;  
    	&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt; 
    	&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    	&lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I have nothing&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/tododisplay&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_weight=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Add item&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/btnadd&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:onClick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;recAdd&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_weight=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;LinearLayout with weights&lt;/div&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/layout-weight.png&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;div id=&quot;lst&quot;&gt;How it looks with layout weights&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;REMEMBER&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use the weight property of the view to allocate the amount of screen real estate for it.&lt;/p&gt;

&lt;p&gt;The weight of all the views will be summed up. If you have 3 views and you gave them all equal weights of 10, it is as good as assigning them equal weights of 1 or 0. The integer value does not matter, it is the proportion of each view relative to its sibling views. &lt;/p&gt;

&lt;p&gt;You can only use the &lt;em&gt;weight property&lt;/em&gt; on a &lt;strong&gt;LinearLayout&lt;/strong&gt;. The other layouts will have their own acrobatics to position views in relation to its sibling views and the frame&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Programmatic Event Handling</title>
   <link href="http://thelogbox.com/android-event-handling-programmatic"/>
   <updated>2012-07-19T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-event-handling-programmatic</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;; I’m consolidating the textual content of this chapter.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Declarative Event Handling</title>
   <link href="http://thelogbox.com/android-event-handling-declarative"/>
   <updated>2012-07-19T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-event-handling-declarative</id>
   <content type="html">&lt;p&gt;Declarative event handling is one of the two ways you can react to user events. The other way of handling events is &lt;em&gt;programmatically&lt;/em&gt; — which is discussed in a chapter of its own.&lt;/p&gt;

&lt;p&gt;Handling events declaratively means you will make the event declaration inside the XML file where the UI is defined. Typically, this will an XML file inside &lt;em&gt;/res/layout&lt;/em&gt; folder. You will use the &lt;em&gt;onClick&lt;/em&gt; attribute of a widget such as a button and assign it a string value. This string value is usually a name of method which you also need to define on Activity class that is associated with XML file.&lt;/p&gt;

&lt;p&gt;To follow the code examples in this chapter, we will need to create a new android project. &lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

$ android create project --path hellotoast --package com.thelogbox --activity TestToast --target 8

&lt;/pre&gt;

&lt;p&gt;Our new Android project named &lt;em&gt;hellotoast&lt;/em&gt; would have created an XML file, it is located at &lt;em&gt;/res/layout/main.xml&lt;/em&gt;. We will add a button widget to it and use the onClick attribute to define a rudimentary event handler.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World, TestToast&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Click me okay&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;android:onClick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;showMe&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will need to implement a method called “showMe()” inside the &lt;em&gt;TestToast&lt;/em&gt; activity of the project. The &lt;em&gt;TestToast&lt;/em&gt; activity references the &lt;em&gt;.main.xml&lt;/em&gt; as the &lt;em&gt;View&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Next, add the &lt;em&gt;showMe()&lt;/em&gt; method to the Activity class. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thelogbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.app.Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestToast&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/** Called when the activity is first created. */&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;showMe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notification&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;notification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;/src/com/thelogbox/TestToast.java.&lt;/div&gt;

&lt;p&gt;To compile and run this example, use the command&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
ant debug install
&lt;/pre&gt;

&lt;p&gt;The &lt;em&gt;showMe() method&lt;/em&gt; is a programmer defined method. It is your responsibility to name it and implement it accordingly. &lt;/p&gt;

&lt;p&gt;The entry in the XML which is &lt;code class=&quot;codeblock&quot;&gt;android:onClick=&quot;showMe()&quot;&lt;/code&gt; is what makes the event handling possible. Upon compilation, the XML file will be expanded and translated to the necessary Java components that makes both UI display and event handling possible.&lt;/p&gt;

&lt;aside&gt;
*Toast* is a low hanging fruit for simple notifications. It is a built-in view that allows you display simple notifications to the user. These are the pop-up notifications you see on your android device. These notifications simply pops-up then disappears. 
&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Next&lt;/strong&gt; » &lt;a href=&quot;/android-event-handling-programmatic&quot;&gt;Programmatic Event Handling&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How Much Java Do I need for Android Programming</title>
   <link href="http://thelogbox.com/android-java-for-android-development"/>
   <updated>2012-07-15T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-java-for-android-development</id>
   <content type="html">&lt;p&gt;Before diving into Android programming, there are a couple of skills you might want to look at. It is possible to simply jump into programming, build some basic screens by copying example codes from the internet or from other programmers. But you cannot go to the deep end. When you find yourself neckdeep in the not-so-trivial parts of Android programming and you feel stuck, that’s probably because you haven’t covered some bases.&lt;/p&gt;

&lt;p&gt;The ideal set of skills to bring into Android development includes experience in AWT/Swing, JDBC, Collections, Network and Thread programming and a couple of others. But not many people will have this. For one reason, AWT and Swing went out of favor a long time ago. Most Java programmers right now have experience on web development but not desktop. &lt;/p&gt;

&lt;h2 id=&quot;object-oriented-concepts&quot;&gt;1. Object Oriented Concepts&lt;/h2&gt;

&lt;p&gt;The Android framework uses OOP heavily. You need to be comfortable with the idiomatic use of things like class/interface inheritance, polymorphism etc. Even the humble Hello World application in most Android textbooks involves the use inheritance. &lt;/p&gt;

&lt;h2 id=&quot;java-fundamentals&quot;&gt;2. Java fundamentals&lt;/h2&gt;

&lt;p&gt;You will need to be familiar with programming fundamentals in Java. Even if Android uses a different VM to run the apps, the language used for native apps development is Java. The more familiarity you have with basic programming concepts in Java, the better. You should at least know the concept of variables, constants, branching and looping, packaging and scope visibility, basic I/O and file persistence.&lt;/p&gt;

&lt;h2 id=&quot;java-collections&quot;&gt;3. Java Collections&lt;/h2&gt;

&lt;p&gt;Beyond simple variables, you will need some skills to handle collections of data. A basic familiarity with rudimentary data structures like arrays, maps and sets will be essential.&lt;/p&gt;

&lt;h2 id=&quot;java-event-model&quot;&gt;4. Java Event model&lt;/h2&gt;

&lt;p&gt;Android applications are heavy on user interaction. For the most basic applications, you might be able to get away by simply knowing how to put the click handler on XML file. But for other gestures like long clicks, swipe etc, you will need to write Java codes to handle the event. The Java event model uses listeners and callbacks quite a lot.&lt;/p&gt;

&lt;h2 id=&quot;xml&quot;&gt;5. XML&lt;/h2&gt;

&lt;p&gt;A passing familiarity wih XML structures and validation rules should take you quite far in Android programming. You don’t need to work much with XML programmatically. Your usual need for XML will arise when you define layouts and when configuring permissions for the app. If you have coded HTML before without using WYSIWYG tools, you should be fine.&lt;/p&gt;

&lt;h2 id=&quot;sql&quot;&gt;6. SQL&lt;/h2&gt;

&lt;p&gt;Some, if not most, of the applications you will make will need to store data. Some data might be simple and can be stored either via the preferences or the SD card. But some might need the facility of a relational database. The Android runtime includes the SQLite database. You will talk to it using the Structured Query Language. SQL is not a difficult language, its quite enjoyable to learn actually because of its declarative nature. It is almost English like.&lt;/p&gt;

&lt;h2 id=&quot;build-tools&quot;&gt;7. Build tools&lt;/h2&gt;

&lt;p&gt;An Android project is a compilation of various files e.g. XML, image resources, compiled byte codes, source codes etc. Getting all these resources to stick and work together cannot be done by hand, well actually it can be, but it will not be practical. That is why even the barebones SDK requires the use Apache Ant to help in compiling, building and deploying your applications. &lt;/p&gt;

&lt;h2 id=&quot;command-line-experience&quot;&gt;8. Command line experience&lt;/h2&gt;

&lt;p&gt;Even if you plan to use a full blown IDE like Eclipse, Android Studio or NetBeans, its not a bad idea to invest some time getting some skills on the command line. They might take a while longer to learn than their GUI counterparts but the effort will pay off. When you run into some problems on the IDE, your CLI skills might save you. You don’t need to be a ninja on the terminal, you can get by with some basics e.g. creating and deleting files, moving around directories, invoking ant scripts, using adb etc.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Activity and the UI</title>
   <link href="http://thelogbox.com/android-activity"/>
   <updated>2012-07-15T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-activity</id>
   <content type="html">&lt;p&gt;A great number of mobile applications will need a user interface. Not all apps need a UI, but most do. In Android Programming, User Interfaces are built using a couple of files, usually a java source file with an associated XML file. The java source file used, most commonly is class that inherits androd.app.Activity. You don’t need to worry these things so much because both the XML file and the Java source file would have been created automatically during the project creation process.&lt;/p&gt;

&lt;p&gt;You will be increasingly aware of how much Android uses XML files. It uses XML a lot. Defining a user interface using XML files is one of two ways you can write UI codes in Android. The other way is do it programmatically. Programmatic UI definition is very similar to AWT (Abstract Window Toolkit) programming in Core Java. You will recognize the reference if you did that sort of thing in core Java programming, if not, that’s okay. I didn’t assume that you have background in AWT or Swing programming anyway. &lt;/p&gt;

&lt;p&gt;In this chapter, we will use the XML to build user interfaces. We will build our UI declaratively.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;To get started, create a new project. If you haven’t gone through the &lt;a href=&quot;/android-getting-started&quot;&gt;Getting Started&lt;/a&gt; section, now would be a good time to leave this section, read through &lt;strong&gt;Getting Started&lt;/strong&gt; then come back.   &lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;$ android create project --target 8 path hello --activity Hello --package com.thelogbox 
&lt;/pre&gt;

&lt;p&gt;Go to the project folder. Go to the &lt;em&gt;src&lt;/em&gt; directory and drill down to the java source file, you will see the default source code that the Android &lt;em&gt;create project&lt;/em&gt; command generated.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// source file: src/com/thelogbox/HelloWorld.java&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thelogbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.app.Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/** Called when the activity is first created. */&lt;/span&gt;
    
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;/src/com/thelogbox/HelloWorld.java&lt;/div&gt;

&lt;p&gt;It is a basic Java class that extended the &lt;em&gt;android.app.Activity&lt;/em&gt; class. Take a look at the last statement inside the &lt;code class=&quot;codeblock&quot;&gt;onCreate()&lt;/code&gt; method. That last statement is a directive on where and how to the get the instructions for building the user interface. &lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;codeblock&quot;&gt;setContentView()&lt;/code&gt; is an overloaded method of Activity, it can take various parameter(s) and type. In our example, what was passed as parameter was &lt;em&gt;R.layout.main&lt;/em&gt; — it is an integer constant. but don’t worry about that now, that is not yet relevant. What is relevant is that the &lt;em&gt;R class&lt;/em&gt; was auto-generated by Android — specifically, it was generated by the &lt;code class=&quot;codeblock&quot;&gt;appt&lt;/code&gt;, short for &lt;em&gt;android asset packaging tool&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;R.layout.main&lt;/em&gt; maps to main.xml which can be found on the folder &lt;em&gt;res/layout/main.xml&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;  
  &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt; 
  &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
  &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div id=&quot;lst&quot;&gt;/res/layout/main.xml&lt;/div&gt;

&lt;p&gt;The main node of the XML file is &lt;em&gt;LinearLayout&lt;/em&gt;, this is not always the case, there are a couple of layouts to choose from in Android. We will circle back to this later, but for now, let’s use the LinearLayout. &lt;/p&gt;

&lt;p&gt;Think of the LinearLayout as the equivalent of &lt;em&gt;java.awt.FlowLayout&lt;/em&gt; in JSE. It organizes the widgets by stacking them together linearly, from left to right, then top to bottom. &lt;/p&gt;

&lt;p&gt;Inside the main LinearLayout node is the &lt;em&gt;TextView&lt;/em&gt; tag. This is the equivalent of &lt;em&gt;java.awt.Label&lt;/em&gt; or &lt;em&gt;javax.swing.JLabel&lt;/em&gt;. It is a static text widget. You won’t be able to edit them, they are simple labels. &lt;/p&gt;

&lt;p&gt;The order of how the views are defined in the XML affects the order of how the views are displayed. This is the simplest layout, that is why I chose this as a starting point.&lt;/p&gt;

&lt;p&gt;We will add another &lt;em&gt;View component&lt;/em&gt; to our screen, an Editable Text. Go back to the editor and insert another view inside the LinearLayout main node. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- main.xml --&amp;gt;&lt;/span&gt;&amp;gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;  
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;EditText&lt;/em&gt; is an editable text component that is very similar to javax.swing.JTextField. The android platform knows how to handle the EditText. Once this view has focus, the on-screen keyboard will pop so that the user can begin input. You do not need to handle the popping of the keyboard, it will be done for you automatically.&lt;/p&gt;

&lt;p&gt;Once you are done with edits, compile and test the project — &lt;code class=&quot;codeblock&quot;&gt;$ ant debug install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/lin-sample-1.png&quot; width=&quot;300&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Your second app&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;We can still improve the appearance of the app, it doesn’t look right because of the way the label is positioned. We will fix that on the next chapter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next&lt;/strong&gt; » &lt;a href=&quot;/android-linear-layout&quot;&gt;Linear Layout&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to hack Docco for Java</title>
   <link href="http://thelogbox.com/javascript-docco-for-java-files"/>
   <updated>2012-07-14T00:00:00+08:00</updated>
   <id>http://thelogbox.com/javascript-docco-for-java-files</id>
   <content type="html">&lt;p&gt;Docco is a quick-and-dirty, hundred-line-long, literate-programming-style documentation generator. It produces HTML that displays your comments alongside your code. It can be used to generate documentation for JavaScript, CoffeeScript, Python and Ruby. But it won’t work for Java source files. There are ports of this script so that it can work with other languages, including Java, some prominent projects are &lt;a href=&quot;https://github.com/Krilivye/Jocco&quot;&gt;Jocco&lt;/a&gt; and &lt;a href=&quot;http://blog.fogus.me/2011/01/05/the-marginalia-manifesto/&quot;&gt;Marginalia (for Clojure)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The solution on this page is a hack. It is not a port of Docco for Java the way Jocco or Marginalia is. There, you’ve been warned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Get nodejs&lt;/strong&gt; and the &lt;strong&gt;node package manager&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Docco depends those two. We can install these tools either by using &lt;strong&gt;Homebrew&lt;/strong&gt; or by downloading the installation package of nodejs from http://nodejs.org&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install -g node
$ brew install -g npm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2. Get Docco&lt;/strong&gt; using the node package manager&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo npm -g install docco
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;3. Install pygments&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo easy_install pygments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;4. Edit the docco script&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The script file of docco can be usually found at  /usr/local/lib/node_modules/docco/lib/docco.js folder. &lt;/p&gt;

&lt;p&gt;Edit the script and add the &lt;strong&gt;.java&lt;/strong&gt; entry to the languages object literal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;languages = {
    &#39;.coffee&#39;: {
      name: &#39;coffee-script&#39;,
      symbol: &#39;#&#39;
    },
    &#39;.js&#39;: {
      name: &#39;javascript&#39;,
      symbol: &#39;//&#39;
    },
    &#39;.rb&#39;: {
      name: &#39;ruby&#39;,
      symbol: &#39;#&#39;
    },
    &#39;.py&#39;: {
      name: &#39;python&#39;,
      symbol: &#39;#&#39;
    },
    &#39;.java&#39;: {
    name: &#39;java&#39;,
    symbol: &#39;//&#39;
	}
  };
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code snippet above can be found somewhere between line 90 to line 120 of docco.js. The &lt;strong&gt;java&lt;/strong&gt; entry was added so docco can generate nice docs for Java source files. &lt;/p&gt;

&lt;p&gt;Remember to write your comments using the C++ style (//). Docco will not parse the comments using JavaDoc style or C style comment block.&lt;/p&gt;

&lt;p&gt;Using docco is very simple, run it against any supported file, for example&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Test it out&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docco MyProgram.java`
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Jeremy Ashkenas, “Docco”, http://jashkenas.github.io/docco&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Eclipse Development Environment</title>
   <link href="http://thelogbox.com/android-install-eclipse-plugin"/>
   <updated>2012-07-14T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-install-eclipse-plugin</id>
   <content type="html">&lt;p&gt;At the time of writing, Eclipse version is Juno&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Launch Eclipse&lt;/li&gt;
  &lt;li&gt;Go to &lt;strong&gt;Help&lt;/strong&gt;, then &lt;strong&gt;Install new software&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;On the textbox that says &lt;em&gt;work with:, type &lt;strong&gt;https://dl-ssl.google.com/android/eclipse/&lt;/strong&gt;, then click *Add&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Choose &lt;strong&gt;Developer Tools&lt;/strong&gt; on the checkboxes, you can choose to ignore the NDK tools&lt;/li&gt;
  &lt;li&gt;Review the install details, then click &lt;strong&gt;Next&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Accept the terms and conditions, then proceed&lt;/li&gt;
  &lt;li&gt;You might get some warnings “about the authenticity of the software you are downloading”, just proceed&lt;/li&gt;
  &lt;li&gt;A &lt;em&gt;Restart Eclipse&lt;/em&gt; window might appear, just click &lt;em&gt;Ok&lt;/em&gt; to restart eclipse&lt;/li&gt;
  &lt;li&gt;An android welcome dialog will pop. It will ask you to do either one of two things. To &lt;strong&gt;install a new android SDK&lt;/strong&gt; or to &lt;strong&gt;use an existing android SDK&lt;/strong&gt;. Choose the one that makes sense to you. &lt;/li&gt;
  &lt;li&gt;I have installed the android SDK already, that is why I chose to &lt;strong&gt;use an existing SDK&lt;/strong&gt;. Browse to the location of your android SDK. Click &lt;strong&gt;next&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Finish&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Create a Project in Eclipse</title>
   <link href="http://thelogbox.com/android-create-project-eclipse"/>
   <updated>2012-07-14T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-create-project-eclipse</id>
   <content type="html">&lt;h2 id=&quot;what-you-need-to-proceed&quot;&gt;What you need to proceed&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;/installing-android-sdk/&quot;&gt;A properly installed Android SDK&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/android-install-eclipse-plugin/&quot;&gt;Properly installed Eclipse plugin for Android&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;create-a-basic-activity-based-android-project-in-eclipse&quot;&gt;Create a basic Activity based android project in Eclipse&lt;/h2&gt;

&lt;p&gt;From the Eclipse menu, choose &lt;strong&gt;New project&lt;/strong&gt;. Select &lt;em&gt;Android&lt;/em&gt;, drill down to &lt;strong&gt;Android Application Project&lt;/strong&gt;, Click Next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/eclipse-new-project-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Eclipse will ask for some information about the project&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Application name&lt;/strong&gt; - This is the top level folder that will be created, it will become the root folder of the project. This is equivalent to the &lt;em&gt;–path&lt;/em&gt; flag of the &lt;strong&gt;android create project&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Project name&lt;/strong&gt; - The project name is an eclipse construct. Eclipse uses this information to identify the project within the Eclipse workspace&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Package name&lt;/strong&gt; - The Java source files will be stored using the package directive that we specify in the option. The package directive will only affect the location of Java source files, it will not affect the location and storage of the other android resources (i.e. XML files). This is the exact equivalent of the &lt;em&gt;–package&lt;/em&gt; directive in the &lt;strong&gt;android create project&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Build SDK&lt;/strong&gt; - This value stands for a unique API level for a specific android version which you want the project to target. This is the equivalent of the &lt;em&gt;–target&lt;/em&gt; directive in the &lt;strong&gt;android create project&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Minimum required SDK&lt;/strong&gt; - it sets the minimum API level or android version on which the project can run on. This value gets inserted in the AndroidManifest.xml file&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/eclipse-new-project-2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you clicked the &lt;em&gt;launcher icon&lt;/em&gt; option, Eclipse will show a dialog where you can create a rudimentary icon for hte application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/eclipse-new-project-3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Choose &lt;em&gt;BlankActivity&lt;/em&gt;. The &lt;em&gt;MasterDetailFlow&lt;/em&gt; option is pretty advanced stuff—also, it requires a higher SDK level. It won’t be available for Froyo or Gingerbread.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/eclipse-new-project-4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Activity Name&lt;/strong&gt; will be the name of main (Activity class). This is the equivalent of the &lt;em&gt;–activity&lt;/em&gt; directive on the &lt;strong&gt;android create project&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Layout Name&lt;/strong&gt; will be the name of the XML file which will contain the instructions for the main UI. This is the equivalent of the file &lt;em&gt;android-project-folder/res/layout/main.xml&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/eclipse-new-project-5.png&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Linear Layout</title>
   <link href="http://thelogbox.com/android-linear-layout"/>
   <updated>2012-07-13T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-linear-layout</id>
   <content type="html">&lt;p&gt;We will work with project you created in the &lt;a href=&quot;/android-activity&quot;&gt;last chapter&lt;/a&gt;. The layout seems okay but a little weird. The labels are usually laid out to the left of a text field and not on top. This is happening because the LinearLayout’s orientation is &lt;strong&gt;vertical&lt;/strong&gt;. That caused the components to flow from top to bottom. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/lin-sample-1.png&quot; width=&quot;300&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Second app&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;We can change the current  behavior so that components inside the layout will flow from left to right. Change the orientation of the layout to &lt;strong&gt;horizontal&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:orientation=&quot;horizontal&quot;
    android:layout_width=&quot;fill_parent&quot;
   	android:layout_height=&quot;fill_parent&quot;
    &amp;gt;
	&amp;lt;TextView  
    android:layout_width=&quot;wrap_content&quot; 
    android:layout_height=&quot;wrap_content&quot; 
    android:text=&quot;Hello World&quot;
    /&amp;gt;
	&amp;lt;EditText
		android:layout_width=&quot;fill_parent&quot;
		android:layout_height=&quot;wrap_content&quot;
	/&amp;gt;
&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save the project, compile, then run. Notice any difference?&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/lin-sample-2.png&quot; width=&quot;300&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Second app, modified&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Name&lt;/em&gt; TextView is now immediately to the left of the EditText, as compared to our first version of our layout where the &lt;em&gt;Name&lt;/em&gt; TextView was on top of the editable text.  &lt;/p&gt;

&lt;p&gt;There were two changes that made the second layout possible.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Change the &lt;em&gt;android:orientation&lt;/em&gt; of LinearLayout from “vertical” to “horizontal”, this caused TextView and the EditableText views to flow from left to right, rather than top to bottom&lt;/li&gt;
  &lt;li&gt;Change &lt;em&gt;android:layout_width&lt;/em&gt; of the TextView from “fill_parent” to “wrap_content”. Had we not made that change, the EditableText view would not have been visible. “Fill_parent” causes the view to occupy whatever space is remaining to right of the component. “Wrap_content” on the other hand, simply uses whatever space the component needs to display itself and allows the next component to occupy the next slot. &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 class=&quot;section&quot;&gt;HOW TO ADD BUTTONS&lt;/h2&gt;

&lt;p&gt;Button widgets are very common to GUI applications. They allow users to convey action. Let’s learn how to add a button to our app.&lt;/p&gt;

&lt;p&gt;You will do this by editing &lt;em&gt;main.xml&lt;/em&gt; again.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
   	&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
	    &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;  
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    	&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    	&lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Click me &amp;quot;&lt;/span&gt;			
	&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As usual, compile and run. You will do the &lt;em&gt;edit-compile-run&lt;/em&gt; routine lots of times, you need to get used to it. Everytime you make a change on your code or any of the assets of the android project, you need to compile and run. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/lin-sample-3.png&quot; width=&quot;300&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;The second app with a button&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;It’s not pretty. The app looks this way because the &lt;em&gt;Button, TextView and EditText views&lt;/em&gt; are inside a single Layout container, which will arrange each view to flow from left to right. On top of that, the EditText’s &lt;em&gt;layout_width&lt;/em&gt; is set to &lt;em&gt;wrap_content&lt;/em&gt;. That means in case there is a component right after EditText, it will generously give the space to the next view&lt;/p&gt;

&lt;p&gt;To fix this, we need to place the &lt;em&gt;Button&lt;/em&gt; in it’s own container. It cannot share the container with EditText and Textview. After that, the &lt;em&gt;EditText&lt;/em&gt; will be the last component defined in the inner &lt;em&gt;LinearLayout&lt;/em&gt;. We must change its &lt;em&gt;layout_width&lt;/em&gt; to &lt;em&gt;fill_parent&lt;/em&gt;, so it can occupy whatever space will be left to its right&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- main.xml --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;horizontal&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;  
    		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    		&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    		&lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Name &amp;quot;&lt;/span&gt;
   	&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/name&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;
	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt;
    	&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    	&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; 
    	&lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Click me &amp;quot;&lt;/span&gt;			
	&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/lin-sample-4.png&quot; width=&quot;50%&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Second app, adjusted layout&amp;lt;/div&amp;gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Testing on AVD and Actual Device</title>
   <link href="http://thelogbox.com/android-testing-a-project"/>
   <updated>2012-07-10T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-testing-a-project</id>
   <content type="html">&lt;p&gt;By testing the android project, I mean running it. There is another concept testing which is &lt;strong&gt;unit testing with JUnit&lt;/strong&gt;, that is not what I mean and that is not what we are going to do right now—we will tackle that much later. The test we will do actually involves deploying the project either in an AVD (Android Virtual Device) or a physical android device, so we can see it run. You need one or the other in order to run our android app.&lt;/p&gt;

&lt;h1 id=&quot;android-virtual-device-avd&quot;&gt;Android Virtual Device (avd)&lt;/h1&gt;

&lt;p&gt;The emulator needs to be configured. It is not configured for you when you installed the SDK. The reason for this is because there are various android API levels (Froyo is 2.2, Gingerbread is 2.3.3 etc). You will need to specify which API level an emulator is supposed to, well—emulate. You can create as many AVDs as you need, probably one for Froyo, one for Gingerbread, another one for Honeycomb so on and so forth. &lt;/p&gt;

&lt;p&gt;To create an AVD:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;From a command line terminal, launch the android SDK Manager by typing &lt;code class=&quot;codeblock&quot;&gt;android&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Go to the &lt;strong&gt;Tools&lt;/strong&gt; menu, then &lt;strong&gt;Manage AVDs&lt;/strong&gt; &lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/avd.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;New&lt;/strong&gt; to create a new AVD. The next screen will ask you a bunch of questions on the technical details of the AVD that want to create. Fill it up with what is applicable to you (screen resolutions, amount of RAM to dedicate etc) &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Launch the AVD when you are done&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;: You will increasingly get annoyed by the AVD because it is painfully and excruciatingly slow. That is why I urge you to shell out some more bucks and get a real android device that you can use for testing&lt;/p&gt;

&lt;h2 id=&quot;if-you-will-use-an-android-physical-device&quot;&gt;If you will use an Android physical device&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Before you connect the device via a USB, you need to check some settings on the device.  &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Go to &lt;strong&gt;Settings&lt;/strong&gt;, then &lt;strong&gt;Applications&lt;/strong&gt; then &lt;strong&gt;Development&lt;/strong&gt;. You need to &lt;em&gt;enable USB debugging&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/usb-debugging.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Now you can connect the device to the development machine&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;running-an-android-app&quot;&gt;Running an Android app&lt;/h2&gt;

&lt;p&gt;Two ways you can do this, either one is okay.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ant debug install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ adb install bin/Hello-debug.apk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Either one of these commands should be ran from the root of your android project folder.&lt;/p&gt;

&lt;p&gt;So much easier to just use the first one, but both should be okay–apk stands Android Package, in case you’re wondering. &lt;/p&gt;

&lt;p&gt;At this point, you can now appreciate the Hello World project in all its glory as it runs on your mobile device. You should be able to see it on the list of your apps. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;small&quot; src=&quot;/img/hello-deployed.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/android-programming-tutorial/&quot;&gt;Back to Android Programming Tutorial&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Compiling a Project</title>
   <link href="http://thelogbox.com/android-compiling-a-project"/>
   <updated>2012-07-10T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-compiling-a-project</id>
   <content type="html">&lt;p&gt;Gone are the days when we can simply compile a practice project with simple &lt;span class=&quot;boxed&quot;&gt;javac&lt;/span&gt;, then fire the the JRE to appreciate our code at runtime. A lot of the Java projects have fallen victim to unnatural stretching because of increasing complexity—android projects are not immune to this stretching. As the complexity of Java projects got higher and higher, we coped with tools and frameworks. One of these tools is &lt;strong&gt;ant&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Ant allows us to tame the complexity of project builds. Ant is a widely used build tool for Java projects, I’m willing to bet that you have seen or used this sometime in the past.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;├── AndroidManifest.xml
├── ant.properties
├── bin
├── build.xml
├── libs
├── local.properties
├── proguard-project.txt
├── project.properties
├── res
│   ├── layout
│   │   └── main.xml
│   └── values
│       └── strings.xml
└── src
 	   └── com
 	       └── thelogbox
 	           └── Hello.java
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice the &lt;strong&gt;build.xml&lt;/strong&gt; on the root folder of our project? That is an ant build file. The project creation script generated that for a reason, we are supposed to use ant to compile, build and deploy our android projects. &lt;/p&gt;

&lt;h2 id=&quot;compiling-the-android-project&quot;&gt;Compiling the android project&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;If you haven’t closed the terminal yet, go to it. If you have closed it, open the terminal again and navigate to the root folder of the android project&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Try typing &lt;span class=&quot;boxed&quot;&gt;ant&lt;/span&gt; on the terminal. It should echo a bunch of possible targets. We will use the &lt;strong&gt;debug&lt;/strong&gt; target to build our android app. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We will use the debug target so that we can side step android’s requirement to setup security keys and signing our applications with that key. Let’s deal with the application signing later on when we get to deploying and releasing our mobile app in the wild.&lt;/p&gt;

&lt;p&gt;If we use the &lt;strong&gt;debug&lt;/strong&gt; target, ant will generate a debug key that will serve as the security key for our app. This is good enough for now because we are just fooling around. Compile the app by typing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ant debug
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see a bunch of scrolling echo messages in the terminal. Look for a message (right towards the end) that says something like &lt;em&gt;BUILD SUCCESSFUL&lt;/em&gt;. It should be successful for now because we haven’t messed around with it yet. There is no reason at this point for the build to fail. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
├── AndroidManifest.xml
├── ant.properties
├── bin
│   ├── AndroidManifest.xml
│   ├── AndroidManifest.xml.d
│   ├── Hello-debug-unaligned.apk
│   ├── Hello-debug-unaligned.apk.d
│   ├── Hello-debug.apk
│   ├── Hello.ap_
│   ├── Hello.ap_.d
│   ├── build.prop
│   ├── classes
│   │   └── com
│   │       └── thelogbox
│   │           ├── BuildConfig.class
│   │           ├── Hello.class
│   │           ├── R$attr.class
│   │           ├── R$layout.class
│   │           ├── R$string.class
│   │           └── R.class
│   ├── classes.dex
│   ├── classes.dex.d
│   ├── jarlist.cache
│   ├── proguard.txt
│   └── res
├── build.xml
├── gen
│   ├── R.java.d
│   └── com
│       └── thelogbox
│           ├── BuildConfig.java
│           └── R.java
├── libs
├── local.properties
├── proguard-project.txt
├── project.properties
├── res
│   ├── layout
│   │   └── main.xml
│   └── values
│       └── strings.xml
└── src
    └── com
 	       └── thelogbox
            └── Hello.java

15 directories, 30 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Right after the compilation process, there are lots of changes within our project directory. Quite noticeably, there are now lots of files inside the &lt;strong&gt;bin&lt;/strong&gt; and &lt;strong&gt;gen&lt;/strong&gt; folders. Somewhere in these jungle lies the executables that we can actually deploy to a real device—but save that for later. Right now, the goal is to just be comfortable with the compilation process.&lt;/p&gt;

&lt;p&gt;In case you encounter a “Cannot find build.xml” error, take a look at your SDK setup. This is usually a config error on the &lt;em&gt;local.properties&lt;/em&gt; file. &lt;a href=&quot;/cannot-find-buildxml/&quot;&gt;Look here for details of the error&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Android Programming</title>
   <link href="http://thelogbox.com/android-programming-tutorial"/>
   <updated>2012-07-09T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-programming-tutorial</id>
   <content type="html">&lt;aside&gt;
  This content has been rewritten. The title of the document is now &lt;a href=&quot;/android/android-key-concepts&quot;&gt;Key Concepts&lt;/a&gt;
&lt;/aside&gt;

&lt;p&gt;Andy Rubin led a small startup team sometime in 2003. They were building a software that could power a smart phone. Google took notice of it and acquired Android Inc. The first attempts of Android were not very impressive but phone manufacturers took notice and jumped into the bandwagon.&lt;/p&gt;

&lt;p&gt;Shortly thereafer, 200,000 android devices were being activated on a daily basis (at the time of writing, over half million android devices are activated each day). The small-ish mobile phone software began to make waves.&lt;/p&gt;

&lt;p&gt;Android’s snowball noticeably gained momentum sometime in 2008 - 2009—this is the time they began using sweet snack monikers on each version of Android; it has been unstoppable since then.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;2003&lt;/strong&gt; - Android Inc., was founded by Andy Rubin&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2005&lt;/strong&gt; - Android Inc was Acquired by Google*&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2008&lt;/strong&gt; - version 1.0&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2009&lt;/strong&gt; - version 1.1 &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2009&lt;/strong&gt; - v1.5 (CupCake), v1.6 (Donut)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2009&lt;/strong&gt; - v2.0/2.1 (Eclair)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2010&lt;/strong&gt; - v2.2 (Froyo), v2.3 (GingerBread)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2011&lt;/strong&gt; - v3.0 (HoneyComb)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2011&lt;/strong&gt; - v4.0 (Ice Cream Sandwich)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2012&lt;/strong&gt; - v4.1 (Jelly Bean)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2013&lt;/strong&gt; - v4.4 (KitKat)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An article about Andy Rubin and Android, titled &lt;a href=&quot;http://www.thedailybeast.com/newsweek/2010/10/03/how-android-is-transforming-mobile-computing.html&quot;&gt;Android Invasion&lt;/a&gt; appeared on a NewsWeek article sometime in 2010. &lt;/p&gt;

&lt;h1 id=&quot;technology-stack&quot;&gt;Technology Stack&lt;/h1&gt;

&lt;p&gt;The Android is made up of a slew of tech but the most visible ones are &lt;em&gt;Linux&lt;/em&gt; and &lt;em&gt;Java&lt;/em&gt;. It is a complete operating system and it provides a container that can support rich applications. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/android-architecture.png&quot; alt=&quot;Android Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Under the hood of Android is Linux. It was chosen for many reasons, but primarily because of it’s stability. Out of the box, Android comes with a couple of useful libraries like &lt;em&gt;SQLite&lt;/em&gt; for database programming, &lt;em&gt;OpenGL&lt;/em&gt; for graphics, &lt;em&gt;Webkit&lt;/em&gt; (the browser engine that power Safari and Chrome) and &lt;em&gt;SSL&lt;/em&gt; for security.&lt;/p&gt;

&lt;p&gt;The Android runtime consists of (some) core Java libraries and the Dalvik VM. The runtime is not the same JRE/JDK that you have on your desktop. This runtime has a subset of Apache Harmony which is an open source, free Java implementation from the Apache Software Foundation. The politics of why Android did not use the Oracle reference implementation of the JDK will not be part of this tutorial, I am sure you can find that information somewhere else.&lt;/p&gt;

&lt;p&gt;Android also comes packaged with Application Frameworks. This is the part of the Android that you will see frequently. As a developer you will spend a great deal of time reading, studying, implementing and using these frameworks. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Books</title>
   <link href="http://thelogbox.com/choosing-books-for-android"/>
   <updated>2012-07-08T00:00:00+08:00</updated>
   <id>http://thelogbox.com/choosing-books-for-android</id>
   <content type="html">&lt;div id=&quot;feature-button&quot;&gt;

This content has moved. If you click the button link below, it will take you to the updated content.

&lt;p /&gt;

&lt;a href=&quot;/blog-choosing-books-for-android&quot; class=&quot;button&quot;&gt;Android Programming Bibliography&lt;/a&gt;

&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Study Tips</title>
   <link href="http://thelogbox.com/blog-studying-and-practicing-android"/>
   <updated>2012-07-08T00:00:00+08:00</updated>
   <id>http://thelogbox.com/blog-studying-and-practicing-android</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;Pick up a book&lt;/em&gt;. Ask a friend, your teacher, a developer whose opinion you trust. You can also take a look at the &lt;a href=&quot;/blog-choosing-books-for-android&quot;&gt;BIBLIOGRAPHY&lt;/a&gt; section of this mini site. There are some ideas there that can get you started in choosing reference materials&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Take notes&lt;/em&gt; for your android learning. Get notebook, I don’t mean a computer. Get a real notebook, with paper on them. I like this approach because there is something about the tactile feel of note taking that helps me retain the knowledge. You will need this notebook when jotting down unfamiliar terms, or maybe even writing your first android application by hand. Note taking forces your brain to work harder, and hopefully remember the steps (and concepts, more importantly). Intellisense and autocomplete are swell, but I would rather that you do it the hard way first, while you are still learning this new technology. Favor &lt;strong&gt;retention&lt;/strong&gt; over speed of coverage. Don’t skim the headlines &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Flash Cards&lt;/em&gt;.  This is old fashioned, but they work.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Get your feet wet&lt;/em&gt;. Set up your development environment. Start simple, try to understand the &lt;em&gt;Hello World&lt;/em&gt; example (I think every beginner book has this example). Understand the &lt;em&gt;Hello World&lt;/em&gt; sample, &lt;em&gt;really understand it.&lt;/em&gt; Discover for yourself how can &lt;strong&gt;main.xml&lt;/strong&gt; (the default layout when you create an android project) get exploded into &lt;strong&gt;R.java&lt;/strong&gt;. Why do you need to set the &lt;em&gt;contentView()&lt;/em&gt; to R.layout.main? What does a &lt;em&gt;View&lt;/em&gt; and &lt;em&gt;ViewGroup&lt;/em&gt; mean? Don’t follow the examples blindly, ask the tough questions and look for the answers. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Join a group&lt;/em&gt;. At this point, some frustration and feeling of helplessness might set in. It is a good idea to build a support structure. Join some local user groups or on-line groups. By this time, you are not coming in cold, you have gone through some parts of the book, you tried out a couple of coding exercises—you can add some value to the discussions, not just noise and cry for help, don’t be shy, go on ahead. Go to &lt;a href=&quot;http://www.stackoverflow.com&quot;&gt;StackOverflow&lt;/a&gt; to get you started.If you are already working in software consulting environment, try asking your officemates if anyone knows android, pick their brains out. When they start resisting, try to bribe them with doughnuts—kidding of course, but not about the doughnuts, that bribe really does work &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Attend some classes&lt;/em&gt;. Join some local workshops or training classes if your budget will allow it. This is probably the fastest way to kickstart your learning because the instructor would have taken pains to arrange the learning materials in a coherent and intelligible way&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Block some time&lt;/em&gt; regularly so you can investigate the concepts that are not so clear to you. This block of time does not have to be long, but it needs to be rigidly regular. It might not hurt to read about the Pomodoro technique and some books on how to improve your focus, you will need it. When you study, try to avoid the temptation of coding straight away. Organize your study and reading materials ahead of time. Do some reading first, take notes of the vocabulary and concepts that you are encountering. Make a journal out of them. This is where your notebook comes in handy. If you really insist on going green and not use paper, electronic note taking is good too, but the point is, take note of the new things you are encountering everyday&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Get a second book&lt;/em&gt;. Maybe even a third book on android. Start being a textbook expert. Your field expertise will follow when you become a serial developer of mobile apps&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Read other books&lt;/em&gt; not necessarily about android, &lt;a href=&quot;http://www.amazon.com/gp/product/020161622X/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=020161622X&amp;amp;linkCode=as2&amp;amp;tag=thelogboxcom-20&quot;&gt;The Pragmatic Programmer: From Journeyman to Master&lt;/a&gt;&lt;img src=&quot;http://www.assoc-amazon.com/e/ir?t=thelogboxcom-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=020161622X&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt; is good place to start. You will soon run into questions like &lt;em&gt;What editor should I use?&lt;/em&gt; and other similar non-sensical questions, the book should offer some insights why this question is not important, then you can stop wasting time and start growing in the direction of skill. While you are at it, pick up &lt;a href=&quot;http://www.amazon.com/gp/product/097451408X/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=097451408X&amp;amp;linkCode=as2&amp;amp;tag=thelogboxcom-20&quot;&gt;Practices of an Agile Developer: Working in the Real World (Pragmatic Bookshelf)&lt;/a&gt;&lt;img src=&quot;http://www.assoc-amazon.com/e/ir?t=thelogboxcom-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=097451408X&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt;, there are lots of gems on this book&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Work on your own pet project&lt;/em&gt;. This will force you employ some other skills beside coding. It is hard to think of what application to work on, especially when you are the developer. Just try to remember what were the things you really wanted as an app before, you can start with those. If you really come up dry, try to do even the beaten-to-death applications like &lt;strong&gt;countdown-to-something, anything&lt;/strong&gt;, &lt;strong&gt;another note-taker&lt;/strong&gt;, &lt;strong&gt;yet another todo list&lt;/strong&gt;. These applications have been so beaten down already. You may not be able to make money selling your todo apps, but the purpose is not to sell, just to build so you can get started on practice&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Ten Thousand hours&lt;/em&gt;. Borrowing a reference from Malcolm Gladwell,  it takes 10k hours to gain expertise. I don’t know if you have that kind of patience, for android programming at least. But try to clock some time immersing yourself in Android Programming. The more you do a thing, the better you get at it. There is no magic formula. You just have to do it lots of times. If you work for a software development company, try to ask your manager if you can participate on an android project. You can also try the &lt;em&gt;programmer-for-hire&lt;/em&gt; route, I’m sure there are plenty android related work in craiglist, odesk or vworker. If that still does not suit you, you can try working on your own android projects and publish them on GooglePlay&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Bibliography</title>
   <link href="http://thelogbox.com/blog-choosing-books-for-android"/>
   <updated>2012-07-08T00:00:00+08:00</updated>
   <id>http://thelogbox.com/blog-choosing-books-for-android</id>
   <content type="html">&lt;p&gt;This the short list of the books I used for my android learning. I did not list all of them, only the ones I liked and the ones I thought would actually help a beginning developer get into grips with android. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/1449390501/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=1449390501&amp;amp;linkCode=as2&amp;amp;tag=thelogboxcom-20&quot;&gt;Learning Android&lt;/a&gt;&lt;img src=&quot;http://www.assoc-amazon.com/e/ir?t=thelogboxcom-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=1449390501&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt; - One of early books I used for android development. Typical O’Reilly approach, thorough and dry—but it has loads of useful information. Good starter book for android. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/1118017110/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=1118017110&amp;amp;linkCode=as2&amp;amp;tag=thelogboxcom-20&quot;&gt;Beginning Android Application Development (Wrox Programmer to Programmer)&lt;/a&gt;&lt;img src=&quot;http://www.assoc-amazon.com/e/ir?t=thelogboxcom-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=1118017110&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt; - Good to read after the O’Reilly book. Looking back now, I think I should have read the O’Reilly book and this one side by side. There’s 500+ pages on this one. You need to be in front of your machine and ready to code when you are reading this—the examples are prescriptive and recipe type, rather than theoretical and conceptual&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/0321741234/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0321741234&amp;amp;linkCode=as2&amp;amp;tag=thelogboxcom-20&quot;&gt;The Android Developer’s Cookbook: Building Applications with the Android SDK&lt;/a&gt;&lt;img src=&quot;http://www.assoc-amazon.com/e/ir?t=thelogboxcom-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=0321741234&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt; - When you are done with the O’Reilly and the Wrox books, you will probably dive into a test project. This recipe (aherm, cookbook) will be very handy. The book is organized according to tasks. It assumes you are already pretty handy at coding android building blocks, so don’t pick this up as a first book. Can you do without this? Yes, you can probably spend lots of time lurking into forums, asking questions on stackoverflow and emailing your friends about a specific problem–or you can just get this book, it will take you much less time&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/1430232439/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=1430232439&amp;amp;linkCode=as2&amp;amp;tag=thelogboxcom-20&quot;&gt;Practical Android Projects (Books for Professionals by Professionals)&lt;/a&gt;&lt;img src=&quot;http://www.assoc-amazon.com/e/ir?t=thelogboxcom-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=1430232439&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt; - So you’ve combed through the three books above, you’ve gone through developer.android.com/training and most probably attended a local workshop in android. Now you are eager to get clicking some more, gear up for a project that you can submit to Google Play for some bragging rights (or some extra cash, or both). Only, you are stumped and out of ideas on what to build, which is not surprising because at the time of this writing (8.Jul.2012) there is more than half-million apps written for android. Can you really think of an android app so unique that the other hundred-thousand developers haven’t thought of yet? If you need some ideas to kickstart your next-killer-app project, you might find some inspiration on this one&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/1934356565/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=1934356565&amp;amp;linkCode=as2&amp;amp;tag=thelogboxcom-20&quot;&gt;Hello, Android&lt;/a&gt;&lt;img src=&quot;http://www.assoc-amazon.com/e/ir?t=thelogboxcom-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=1934356565&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt; - It was a pity that I picked this up late. This was the most enjoyable read–or maybe I enjoyed it because I already read the other four? I really can’t be sure now, but if you will take some unsolicited advise, I suggest you read the O’Reilly one first, then this. &lt;/p&gt;

&lt;p&gt;If you want to look at a more extensive list, O’Reilly released the &lt;a href=&quot;http://www.amazon.com/gp/product/B005GMR9S8/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B005GMR9S8&amp;amp;linkCode=as2&amp;amp;tag=thelogboxcom-20&quot;&gt;Android Development Bibliography&lt;/a&gt;&lt;img src=&quot;http://www.assoc-amazon.com/e/ir?t=thelogboxcom-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=B005GMR9S8&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt; You can download this book for free from the Kindle store. By the way, the book does not contain any tutorials about Android. It simply lists an extensive collection of books about Android programming &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Android Programming Prerequisite</title>
   <link href="http://thelogbox.com/blog-am-i-ready-for-android-programming"/>
   <updated>2012-07-08T00:00:00+08:00</updated>
   <id>http://thelogbox.com/blog-am-i-ready-for-android-programming</id>
   <content type="html">&lt;p&gt;Before diving into Android programming, there are a couple of skills you might want to look at. It is possible to simply jump into programming, build some basic screens by copying example codes from the internet or from other programmers. But you cannot go to the deep end. When you find yourself neckdeep in the not-so-trivial parts of Android programming and you feel stuck, that’s probably because you haven’t covered some bases.&lt;/p&gt;

&lt;p&gt;The ideal set of skills to bring into Android development includes experience in AWT/Swing, JDBC, Collections, Network and Thread programming and a couple of others. But not many people will have this. For one reason, AWT and Swing went out of favor a long time ago. Most Java programmers right now have experience on web development but not desktop. &lt;/p&gt;

&lt;h2 id=&quot;object-oriented-concepts&quot;&gt;1. Object Oriented Concepts&lt;/h2&gt;

&lt;p&gt;The Android framework uses OOP heavily. You need to be comfortable with the idiomatic use of things like class/interface inheritance, polymorphism etc. Even the humble Hello World application in most Android textbooks involves the use inheritance. &lt;/p&gt;

&lt;h2 id=&quot;java-fundamentals&quot;&gt;2. Java fundamentals&lt;/h2&gt;

&lt;p&gt;You will need to be familiar with programming fundamentals in Java. Even if Android uses a different VM to run the apps, the language used for native apps development is Java. The more familiarity you have with basic programming concepts in Java, the better. You should at least know the concept of variables, constants, branching and looping, packaging and scope visibility, basic I/O and file persistence.&lt;/p&gt;

&lt;h2 id=&quot;java-collections&quot;&gt;3. Java Collections&lt;/h2&gt;

&lt;p&gt;Beyond simple variables, you will need some skills to handle collections of data. A basic familiarity with rudimentary data structures like arrays, maps and sets will be essential.&lt;/p&gt;

&lt;h2 id=&quot;java-event-model&quot;&gt;4. Java Event model&lt;/h2&gt;

&lt;p&gt;Android applications are heavy on user interaction. For the most basic applications, you might be able to get away by simply knowing how to put the click handler on XML file. But for other gestures like long clicks, swipe etc, you will need to write Java codes to handle the event. The Java event model uses listeners and callbacks quite a lot.&lt;/p&gt;

&lt;h2 id=&quot;xml&quot;&gt;5. XML&lt;/h2&gt;

&lt;p&gt;A passing familiarity wih XML structures and validation rules should take you quite far in Android programming. You don’t need to work much with XML programmatically. Your usual need for XML will arise when you define layouts and when configuring permissions for the app. If you have coded HTML before without using WYSIWYG tools, you should be fine.&lt;/p&gt;

&lt;h2 id=&quot;sql&quot;&gt;6. SQL&lt;/h2&gt;

&lt;p&gt;Some, if not most, of the applications you will make will need to store data. Some data might be simple and can be stored either via the preferences or the SD card. But some might need the facility of a relational database. The Android runtime includes the SQLite database. You will talk to it using the Structured Query Language. SQL is not a difficult language, its quite enjoyable to learn actually because of its declarative nature. It is almost English like.&lt;/p&gt;

&lt;h2 id=&quot;build-tools&quot;&gt;7. Build tools&lt;/h2&gt;

&lt;p&gt;An Android project is a compilation of various files e.g. XML, image resources, compiled byte codes, source codes etc. Getting all these resources to stick and work together cannot be done by hand, well actually it can be, but it will not be practical. That is why even the barebones SDK requires the use Apache Ant to help in compiling, building and deploying your applications. &lt;/p&gt;

&lt;h2 id=&quot;command-line-experience&quot;&gt;8. Command line experience&lt;/h2&gt;

&lt;p&gt;Even if you plan to use a full blown IDE like Eclipse, Android Studio or NetBeans, its not a bad idea to invest some time getting some skills on the command line. They might take a while longer to learn than their GUI counterparts but the effort will pay off. When you run into some problems on the IDE, your CLI skills might save you. You don’t need to be a ninja on the terminal, you can get by with some basics e.g. creating and deleting files, moving around directories, invoking ant scripts, using adb etc.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Workbook on Programming Concepts</title>
   <link href="http://thelogbox.com/java-programming-concepts-workbook"/>
   <updated>2012-07-06T00:00:00+08:00</updated>
   <id>http://thelogbox.com/java-programming-concepts-workbook</id>
   <content type="html">&lt;h2 id=&quot;part-1-machine-problems&quot;&gt;Part 1. Machine problems&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problem 1.&lt;/strong&gt; Given a String name, e.g. “John”, return a greeting of the form “Hello Bob!”. &lt;/p&gt;

&lt;p&gt;helloName(“John”) -&amp;gt; “Hello Bob!”&lt;/p&gt;

&lt;p&gt;helloName(“Alice”) -&amp;gt; “Hello Alice!”&lt;/p&gt;

&lt;p&gt;helloName(“X”) -&amp;gt; “Hello X!”&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;One&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;John&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//Write your code here&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Problem 2.&lt;/strong&gt; Given two strings, a and b, return the result of concatenating them. e.g., “Hello” and “World” returns “HelloWorld”&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Two.java &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Item # 2 Java Programming Workbook&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Two&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;bang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;World&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//Write your code here&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Problem 2.1&lt;/strong&gt; Make some modifications to Two.java such that it returns “Hello World” with a space in between.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 2.2&lt;/strong&gt; Make some modifications to Two.java such that it returns &lt;/p&gt;

&lt;p&gt;“Hello
Java”&lt;/p&gt;

&lt;p&gt;Insert a CRLF (Carriage Return Linefeed) after the String “Hello”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 2.3&lt;/strong&gt; Still following the principle of item 2 above, given two strings, a and b, return the result of putting them together in the order abba, e.g. “Hi” and “Bye” returns “HiByeByeHi”. &lt;/p&gt;

&lt;p&gt;bang(“Hi”, “Bye”) -&amp;gt; “HiByeByeHi”&lt;/p&gt;

&lt;p&gt;bang(“Yo”, “Alice”) -&amp;gt; “YoAliceAliceYo”&lt;/p&gt;

&lt;p&gt;bang(“x”, “y”) -&amp;gt; “xyyx”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 3.&lt;/strong&gt; Print out the multiplication table (5 columns and 5 rows)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Three.java &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Item # 3 Java Programming Workbook&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Three&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;printmult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printmult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//write your code here	&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Problem 3.1&lt;/strong&gt; Modify Three.java such that you can pass two integers are parameters &lt;em&gt;printmult(int row, int col)&lt;/em&gt; to make the size of the multiplication table dynamic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 4.&lt;/strong&gt; Find the GCD (greatest common factor) of 15 and 12 using Euclid’s algorithm. You need to research this one. There is no need to provide a skeleton code because you can write the entire solution inside &lt;em&gt;public static void main()&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 4.1&lt;/strong&gt;  Do this program in GUI using javax.swing. Use TextFields to input the number. Use a button to start the calculation. Use the JDialog to output the result&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 5.&lt;/strong&gt; Consider a string, return a string where for every letter in the original, the letter will be printed twice &lt;/p&gt;

&lt;p&gt;twice(“The”) -&amp;gt; “TThhee”&lt;/p&gt;

&lt;p&gt;twice(“AAbb”) -&amp;gt; “AAAAbbbb”&lt;/p&gt;

&lt;p&gt;twice(“Hi-There”) -&amp;gt; “HHii–TThheerree”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 6.&lt;/strong&gt; Create a function that will take a String and prints out the String in reverse. e.g. “Hello” –&amp;gt; outputs “olleH”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 6.1.&lt;/strong&gt; Now, check to see if the String is a palindrome. A palindrome is a word(s) which is spelled exactly the same whether read backwards or forward. If it is palindome, output should be e.g. “madamimadam is a palindrome” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 6.2&lt;/strong&gt; Create this function using javax.swing, create a textfield for the user to input the string and a button. When the button is pressed, run your algorithm. Use the JDialog to output the results&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 7.&lt;/strong&gt; Write a program that counts from 1..10,000. Process each number. If the number is even, print out if it is even. e.g. “2 is even”, “3 is odd”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 7.2&lt;/strong&gt; Find the sum of all even numbers below 5,000, print it out&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 7.3&lt;/strong&gt; Revise the program, if the number is a multiple of 3, print out “Crunch”, if it is a multiple of 5, print out “Bang”. If the number if both a multiple of 3 and 5, print out “!#”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 7.4&lt;/strong&gt; Revise the program, as the program is counting from 1..10,000; check to see if the number is a palindrome, if it is, print it out, if not, ignore it&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 7.5&lt;/strong&gt; continuing from 7.4, find the sum of all palindromic numbers  in the series 1..10,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 7.6&lt;/strong&gt; Revise the program. Now, add all the numbers below 1000, that are multiples of 3 or 5. Print out the sum&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 8.&lt;/strong&gt; Write a program that will print out the following;&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

*
* *
* * *
* * * *
* * * * * 
* * * * * * 
*  * * * * * *

&lt;/pre&gt;

&lt;p&gt;Use either a for loop or a while loop&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 9.&lt;/strong&gt; Write a program that will print out the following;&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

 1 
 1 1 
 1 2 1 
 1 3 3 1 
 1 4 6 4 1 
 1 5 10 10 5 1 
 1 6 15 20 15 6 1 
 1 7 21 35 35 21 7 1 

&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Problem 10.&lt;/strong&gt; Create a function that takes in two java.util.Date parameters, return the difference in terms of number of days &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 11.&lt;/strong&gt; Create a database driven GUI application (todo list) that keeps the following data points;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;todo item (string)&lt;/li&gt;
  &lt;li&gt;date created (date)&lt;/li&gt;
  &lt;li&gt;status (string) &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The application should also be able to display the list of all todo items in a separate window.&lt;/p&gt;

&lt;h2 id=&quot;part-2-self-check-questions&quot;&gt;Part 2. Self check questions&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Question 1)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Which of the following lines will compile without warning or error.&lt;/p&gt;

&lt;p&gt;1) float f=1.3; &lt;/p&gt;

&lt;p&gt;2) char c=”a”; &lt;/p&gt;

&lt;p&gt;3) byte b=257; &lt;/p&gt;

&lt;p&gt;4) boolean b=null; &lt;/p&gt;

&lt;p&gt;5) int i=10; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 2)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What will happen if you try to compile and run the following code&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;amethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;amethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;error Can’t make static reference to void amethod. &lt;/li&gt;
  &lt;li&gt;error method main not correct &lt;/li&gt;
  &lt;li&gt;error array must include parameter &lt;/li&gt;
  &lt;li&gt;amethod must be declared with String&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Question 3)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Which of the following will compile without error&lt;/p&gt;

&lt;p&gt;1)&lt;/p&gt;

&lt;p&gt;import java.awt.*;
package Mypackage;
class Myclass {}&lt;/p&gt;

&lt;p&gt;2)&lt;/p&gt;

&lt;p&gt;package MyPackage;
import java.awt.*;
class MyClass{}&lt;/p&gt;

&lt;p&gt;3)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*This is a comment */&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.awt.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Question 4)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Which of the following are keywords or reserved words in Java?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;if &lt;/li&gt;
  &lt;li&gt;then &lt;/li&gt;
  &lt;li&gt;goto &lt;/li&gt;
  &lt;li&gt;while &lt;/li&gt;
  &lt;li&gt;case&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Question 5)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What will happen when you compile and run the following code? &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]){&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Error Variable i may not have been initialized &lt;/li&gt;
  &lt;li&gt;null &lt;/li&gt;
  &lt;li&gt;1 &lt;/li&gt;
  &lt;li&gt;0&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Question 6.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is the difference between a constructor and a method&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 7.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What are access modifiers in Java?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 8.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is the difference between method overloading and method overriding&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 9.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is the difference betwen abstract class and interface &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 10.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is the difference between a non-static variable and a static variable?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>IT Week at Asia Pacific College</title>
   <link href="http://thelogbox.com/blog-android-intro-talk"/>
   <updated>2012-07-03T00:00:00+08:00</updated>
   <id>http://thelogbox.com/blog-android-intro-talk</id>
   <content type="html">&lt;p&gt;In a few hours, I will head back to Asia Pacific College to give an introductory talk about Android applications development. I haven’t been to APC for a very long time, and I haven’t talked in front of a crowd for a very long time as well, much less give an introductory talk inside an auditorium—but no matter, I think all will be well.  &lt;/p&gt;

&lt;p&gt;I think I will structure the talk like this;&lt;/p&gt;

&lt;h1 id=&quot;what-is-it&quot;&gt;What is it&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;A Linux based Operating System for mobile devices&lt;/li&gt;
  &lt;li&gt;Developed by OHA (Open Handset Alliance) led by Google Inc&lt;/li&gt;
  &lt;li&gt;A rich development platform for mobile applications&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;the-timeline&quot;&gt;The timeline&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;2003 - Android Inc., was founded by Andy Rubin&lt;/li&gt;
  &lt;li&gt;2005 - Android Inc was Acquired by Google&lt;/li&gt;
  &lt;li&gt;2008 - Android v1.0&lt;/li&gt;
  &lt;li&gt;2009 - Android v1.1 &lt;/li&gt;
  &lt;li&gt;2009 - v1.5 (CupCake), v1.6 (Donut)&lt;/li&gt;
  &lt;li&gt;2009 - v2.0/2.1 (Eclair)&lt;/li&gt;
  &lt;li&gt;2010 - v2.2 (Froyo), v2.3 (GingerBread)&lt;/li&gt;
  &lt;li&gt;2011 - v3.0 (HoneyComb)&lt;/li&gt;
  &lt;li&gt;2011 - v4.0 (Ice Cream Sandwich)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;why-bother&quot;&gt;Why bother&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/img/android-10billion.jpg&quot; style=&quot;float:right&quot; width=&quot;250px&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;10 Billion apps downloaded&lt;/li&gt;
  &lt;li&gt;Hundred thousand device activations per day&lt;/li&gt;
  &lt;li&gt;500,000 apps downloaded from Google Play (IOS has roughly same number)&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;pros-of-android-development&quot;&gt;Pros of Android development&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Low barrier to entry - Android SDK runs on Linux, OSX and Windows&lt;/li&gt;
  &lt;li&gt;Volume - Lots of people are downloading apps&lt;/li&gt;
  &lt;li&gt;Easy to get started - Android apps are unlike enterprise apps—they have shorter  dev time&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;the-software-stack&quot;&gt;The software stack&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/img/android-software-stack.png&quot; width=&quot;500px&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;things-you-need-to-get-started&quot;&gt;Things you need to get started&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Android SDK (downloadable from developer.android.com)&lt;/li&gt;
  &lt;li&gt;A development tool (Eclipse, NetBeans – a programmer’s editor will do)&lt;/li&gt;
  &lt;li&gt;JDK 1.5 or 1.6&lt;/li&gt;
  &lt;li&gt;Apache Ant&lt;/li&gt;
  &lt;li&gt;Java programming background &lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Feature Creep</title>
   <link href="http://thelogbox.com/blog-feature_creep"/>
   <updated>2012-07-02T00:00:00+08:00</updated>
   <id>http://thelogbox.com/blog-feature_creep</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/58683663@N00/205401130/&quot; title=&quot;Featuritis Curve by eb.ezzy, on Flickr&quot;&gt;&lt;img src=&quot;http://farm1.staticflickr.com/88/205401130_4b5211c30a.jpg&quot; width=&quot;440&quot; height=&quot;343&quot; alt=&quot;Featuritis Curve&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Cannot Find Build.Xml</title>
   <link href="http://thelogbox.com/cannot-find-buildxml"/>
   <updated>2012-07-01T00:00:00+08:00</updated>
   <id>http://thelogbox.com/cannot-find-buildxml</id>
   <content type="html">&lt;p&gt;This compilation error means the android sdk is looking for the build.xml file which is inside the folder &lt;strong&gt;sdk.dir/tools/ant&lt;/strong&gt;. The compiler cannot find it, hence the error.&lt;/p&gt;

&lt;h2 id=&quot;basic-concepts&quot;&gt;1 Basic Concepts&lt;/h2&gt;

&lt;p&gt;When a project is created, one of the files generated by the bootstrap process is build.xml. The Apache Ant build tool will look for it on the top most folder of the project. This build file does not contain all the information it needs to compile and make a project. It references another build file which is found on &lt;strong&gt;sdk.dir/tools/ant/&lt;/strong&gt;build.xml. &lt;/p&gt;

&lt;p&gt;The compiler will resolve the value of sdk.dir by looking it up inside the local.properties file, which, like the build.xml, is also located on the root folder of the project. &lt;strong&gt;sdk.dir&lt;/strong&gt; needs to point to the directory where you installed the android software development kit. &lt;/p&gt;

&lt;p&gt;The code snippet below is the content of the local.properties file of a sample project.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# This file is automatically generated by Android Tools.
# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
#
# This file must *NOT* be checked into Version Control Systems,
# as it contains information specific to your local configuration.

# location of the SDK. This is only used by Ant
# For customization when using a Version Control System, please read the
# header note.

sdk.dir=/Users/ted/progtools/android-sdk-macosx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The local.properties file is also generated as part of project creation process. The value of the sdk.dir inside the local.properties is inferred by the android tools, and it always gets it right. You do not need to mess around with local.properties. Usually.&lt;/p&gt;

&lt;h2 id=&quot;how-to-fix&quot;&gt;2 How to Fix&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Open the local.properties file&lt;/strong&gt;. Inspect the contents of the file. Verify that the value of sdk.dir is really pointing to the folder where you installed the android sdk &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Fix the value of sdk.dir&lt;/strong&gt;. You can try to change the sdk.dir value by directly editing local.properties, but did you see the commented section of local.properties? It said don’t mess around with it. Your changes will be overwritten. &lt;/p&gt;

&lt;p&gt;What we can do is to update the project in order to restore the value of sdk.dir. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/project_path
$ android update project --path .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is a period at the end the command snippet above. It may not be visible on the screen but it is there. After running the project update command, the sdk.dir value will be fixed. Open the local.properties file to verify&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Inspect your .gitignore file&lt;/strong&gt;. The local.properties file must unique to your machine setup. One of the reasons why the sdk.dir is messed up is because the local.properties file in your project is not really yours. It probably belongs to somebody else and it got into your machine because you pulled the project from a source code repository.&lt;/p&gt;

&lt;p&gt;If you are using &lt;strong&gt;git&lt;/strong&gt;, add the local.properties file to the .gitignore file so the next time you push or pull from a repository, the local.properties will be ignored by git&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Database Programming</title>
   <link href="http://thelogbox.com/android-database-programming-basics"/>
   <updated>2012-06-22T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-database-programming-basics</id>
   <content type="html">&lt;p&gt;While there exist a class of applications that do not use databases, they are few. It’s almost an automatic expectation that a programmer knows how to deal with databases. &lt;/p&gt;

&lt;p&gt;We will use the built-in database of Android, &lt;strong&gt;SQLite&lt;/strong&gt;. To use this database, we simply need to declare it in our &lt;em&gt;import&lt;/em&gt; statements. This db is baked right into Android. There are no third party installs necessary.&lt;/p&gt;

&lt;p&gt;If your background in Java database programming is JDBC or Hibernate or something else, there is a slight adjustment you need to make. You won’t be able to use JDBC in Android. There is no JDBC in here. Don’t worry too much. The SQLite API is not terribly difficult. It won’t take you an afternoon to learn the basics.&lt;/p&gt;

&lt;h2 id=&quot;goals&quot;&gt;1. Goals&lt;/h2&gt;

&lt;p&gt;To Display a simple form to the user. Let him type anything he wants on a free-form editable UI widget, an EditText View. &lt;/p&gt;

&lt;p&gt;To Get the runtime value of the EditText and insert it as a record in the database. Afterwhich, read the whole table and display the contents in scrollable, non-editable widget, a &lt;strong&gt;TextView&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;basic-concepts&quot;&gt;2. Basic Concepts&lt;/h2&gt;

&lt;p&gt;The class &lt;strong&gt;SQLiteOpenHelper&lt;/strong&gt; is the middle-man that stands between your application logic and the database. You will use this to create and upgrade a database. You will also use it to get a handle on a readable and writable database. Think of it as a replacement of the Connection object in JDBC. &lt;/p&gt;

&lt;p&gt;Another class used in this example is the &lt;strong&gt;SQLiteDatabase&lt;/strong&gt;. Think of it as the equivalent of the Statement object in JDBC. When you need to perform raw SQL statements, this is the class to use. &lt;/p&gt;

&lt;p&gt;Once we have created the database using &lt;strong&gt;SQLiteOpenHelper&lt;/strong&gt; and captured some info from the UI, we need to deal with data retrieval. We need to find a way to get a handle on a readable database, pass a query to it, get the result of the query and save it somewhere else. The &lt;strong&gt;Cursor&lt;/strong&gt; object is what we will use to store the results of the query. In JDBC you might remember this as the &lt;strong&gt;ResultSet&lt;/strong&gt; object. &lt;/p&gt;

&lt;p&gt;Once we have a Cursor, we can simply iterate through it to process the contents of the database. &lt;/p&gt;

&lt;h2 id=&quot;how-to&quot;&gt;3. How to&lt;/h2&gt;

&lt;p&gt;Create a new android project for this exercise. Add the appropriate View elements like TextView, EditText and Button.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ android create project --target 15 --activity DbSample --path dbsample  --package com.thelogbox
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To build a basic UI for our project, we can use the following code inside our &lt;strong&gt;project_folder/res/layout/main.xml&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:orientation=&quot;vertical&quot;
    android:layout_width=&quot;fill_parent&quot;
    android:layout_height=&quot;fill_parent&quot;
    &amp;gt;

  &amp;lt;EditText
    android:layout_width=&quot;fill_parent&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:id=&quot;@+id/todoedit&quot;
    android:layout_weight=&quot;0&quot;
  /&amp;gt;

  &amp;lt;ScrollView
    android:layout_width=&quot;fill_parent&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_weight=&quot;10&quot;
  &amp;gt;

    &amp;lt;TextView  
        android:layout_width=&quot;fill_parent&quot; 
        android:layout_height=&quot;wrap_content&quot; 
        android:text=&quot;I have nothing&quot;
      android:id=&quot;@+id/tododisplay&quot;
      /&amp;gt;
  &amp;lt;/ScrollView&amp;gt;
  &amp;lt;Button
    android:layout_width=&quot;fill_parent&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;Add item&quot;
    android:id=&quot;@+id/btnadd&quot;
    android:onClick=&quot;recAdd&quot;
    android:layout_weight=&quot;0&quot;
/&amp;gt;
&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;strong&gt;TextView&lt;/strong&gt; component is embedded in a &lt;strong&gt;ScrollView&lt;/strong&gt; component so we can scroll through the contents of the TextView. The ScrollView acts like a viewport. We also used the &lt;strong&gt;weight&lt;/strong&gt; property of the layout so our viewport is given the biggest portion of the screen. See the note on &lt;a href=&quot;/android-layout-weights&quot;&gt;how to use weights to maximize screen space&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Button’s&lt;/strong&gt; onClick property is a method called &lt;strong&gt;recAdd()&lt;/strong&gt; which we need to implement inside on the Activity class. &lt;/p&gt;

&lt;h3 id=&quot;the-sqlliteopenhelper-class&quot;&gt;3.1 The SQLLiteOpenHelper Class&lt;/h3&gt;

&lt;p&gt;Create a class that extends SQLiteOpenHelper&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// SQLiteOpenHelper .java

package com.thelogbox;

import static android.provider.BaseColumns._ID;
import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;


public class DbHelper extends SQLiteOpenHelper {

  String sqlcreate = &quot;CREATE TABLE todo( &quot; + _ID  + &quot; INTEGER PRIMARY KEY AUTOINCREMENT, item TEXT);&quot;;


  public DbHelper(Context ctx) {
    super(ctx,&quot;tododb.db&quot;,null, 1);
  }
  
  @Override
  public void onCreate(SQLiteDatabase db) {
    db.execSQL(sqlcreate);
  }
  
  @Override
  public void onUpgrade(SQLiteDatabase db, int oldversion, int newversion) {
    db.execSQL(&quot;DROP TABLE IF EXISTS tododb.db&quot;);
    onCreate(db);
  }
  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You need to do &lt;strong&gt;3 things&lt;/strong&gt; at a minimum when defining a SQLiteOpenHelper.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Define a public constructor&lt;/strong&gt; that accepts a Context object.  This context is the context of the &lt;em&gt;Activity&lt;/em&gt; class where you will instantiate the Helper class. Call the super constructor so that you don’t break the chain. The first parameter to super constructor is the &lt;em&gt;context object&lt;/em&gt; — you know this already, next parameter is the name of database you want to create; third parameter is a cursor factory, you can ignore this for now, that is why I passed &lt;em&gt;null&lt;/em&gt; to it. &lt;/p&gt;

&lt;p&gt;The last parameter is an integer value which stands for the database version. I placed one (1) because it is my first version of this database. When you revise the schema of the database, increase this value by one so that the &lt;em&gt;onUpgrade()&lt;/em&gt; method kicks in—it will perform some sort of an ALTER database command in your behalf.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Override the onCreate()&lt;/strong&gt; method. This is where you can execute DDL (SQL Data Definition) commands against the database. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Override the onUpgrade()&lt;/strong&gt; method, even if you won’t need it yet. You won’t be able to compile unless you override this method&lt;/p&gt;

&lt;h3 id=&quot;the-activity-class&quot;&gt;3.2 The Activity Class&lt;/h3&gt;

&lt;p&gt;We will use an instance of SQLiteOpenHelper class for reading and writing to the database&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Activity .java}

package com.thelogbox;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.content.Context; 
import com.thelogbox.DbHelper;
import android.content.ContentValues;
import android.database.sqlite.SQLiteDatabase;
import android.database.Cursor;
import android.widget.TextView;
import android.widget.EditText;


public class DbSample extends Activity {


  DbHelper dh;
  SQLiteDatabase dbwrite;
  SQLiteDatabase dbread;
  
  EditText input;
  TextView output;
  

   /** Called when the activity is first created. */
   @Override
   public void onCreate(Bundle savedInstanceState) {
        
      dh = new DbHelper(getApplicationContext());
      dbwrite = dh.getWritableDatabase();
      dbread = dh.getReadableDatabase();
      
    // you cannot put the findViewById here, it causes errors
      
    super.onCreate(savedInstanceState);
      setContentView(R.layout.main);
    }
    
    
    public void recAdd(View v) {

      input = (EditText) findViewById(R.id.todoedit);
      output = (TextView) findViewById(R.id.tododisplay);
    
    String itemtoadd = input.getText().toString();    
    
    ContentValues cv = new ContentValues();
    cv.put(&quot;item&quot;, itemtoadd);
    dbwrite.insertOrThrow(&quot;todo&quot;,null,cv);
    
    String temptext = (String) output.getText();
    
    //Write the dbExtraction routine here
    
    //temptext = temptext + &quot;\n&quot;;
    output.setText(getTodos());
    
    }
    
    private String getTodos() {
      
      String cols[] = {&quot;item&quot;};
      StringBuilder sb = new StringBuilder(&quot;&quot;);
      Cursor cursor = dbread.query(&quot;todo&quot;,cols,null,null,null,null,&quot;item&quot;);
      startManagingCursor(cursor);
      
      while(cursor.moveToNext()) {
        sb.append(cursor.getString(0));
        sb.append(&quot;\n&quot;);
      }
      return sb.toString();
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;DBSample&lt;/strong&gt; is a regular Activity class. It’s bad coding practice to embed the database logic in the UI, but were just starting out to learn about databases in Android, we will let it pass for now. If we partition this app properly and use the nice design patterns, we will have more code to deal with (and to understand).&lt;/p&gt;

&lt;p&gt;We instantiated the DbHelper class so that we can create the database during our first run of this app. We also used the DbHelper to create 2 SQLiteDatabase objects, one for reading (dbread) and another for writing (dbwrite). &lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;recAdd()&lt;/strong&gt; method starts out by getting the object references to the EditText and TextView components, todoedit and tododisplay respectively. &lt;/p&gt;

&lt;p&gt;Once we extracted whatever the user typed inside the EditText via &lt;strong&gt;getText()&lt;/strong&gt; method, we stored it inside the &lt;strong&gt;itemtoadd&lt;/strong&gt; String variable. &lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;ContentValues&lt;/strong&gt; object is some sort of a Dictionary data structure (key value pair), this data structure is required by the &lt;strong&gt;insert()&lt;/strong&gt; method of the SQLiteDatabase object, that is why we used it to wrap the string data we got from the EditText. You don’t have to use the &lt;strong&gt;insertOrThrow()&lt;/strong&gt;&amp;lt; method if you don’t want to, you can insert a record to the database using raw SQL. If you pass an INSERT SQL command inside the &lt;strong&gt;execSQL()&lt;/strong&gt; method, that will do the job just as well.&lt;/p&gt;

&lt;p&gt;Compile and Test the project&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ant debug install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;strong&gt;codeonCreate()&lt;/strong&gt;* method of DbHelper should kick in the first time your app issues a db related command. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Creating A Project</title>
   <link href="http://thelogbox.com/android-create-project"/>
   <updated>2012-06-10T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-create-project</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;NOTICE&lt;/strong&gt;. THIS CONTENT HAS BEEN REWRITTEN. The updated content is at &lt;a href=&quot;/android-getting-started&quot;&gt;Android Getting Started&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The &lt;em&gt;Hello World&lt;/em&gt; application in android is very different from what you might remember when you created your first app in Java. Back then, you only needed a single source file where everything you need to output something to the screen was contained. The Hello World application in android requires full project. &lt;/p&gt;

&lt;p&gt;An android app will not run on your desktop, in fact, even just to test it, you will need an emulator. Android apps were meant to run on devices, not on desktops. The hardware architecture of mobile devices are starkly different from desktop PCs. This disparity is part of the reason why coding for android is contrastly different from coding a simple Java app.  &lt;/p&gt;

&lt;p&gt;To create an android project, you will need a bunch of XML files, a couple of resources files, some make files and of course, the Java source code for your app. It may sound like a lot to do for a simple and useless Hello World app–it is–but most of the boiler-plate code for setting up a project can be taken cared of by a good IDE (Eclipse, NetBeans, IntelliJ or what have you, in our case, we will use the good old CLI). &lt;/p&gt;

&lt;p&gt;The android SDK came equipped with scripts that will help you create, debug, test and deploy android projects. We will use some of those tools in this tutorial. Make sure you have [properly installed the android SDK] (/installing-android-sdk/) before proceeding.&lt;/p&gt;

&lt;h2 id=&quot;hello-world-our-first-project&quot;&gt;Hello World, our first project&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Choose a working directory for your project. Open a terminal (Terminal.app on OSX, cmd on Windows and xterm, gnome-terminal etc on Linux)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You might want to put this project under source control. This is completely optional at this point, but I encourage you to start getting into the habit of putting your dev works under source control, it will save you a lot of heartaches in the future. You can still proceed with the tutorial even if you don’t have source control though&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use the &lt;span class=&quot;boxed&quot;&gt;android create project&lt;/span&gt; command to setup the project. On the terminal, type&lt;/p&gt;

    &lt;p&gt;android create project –target 8 path helloworld –activity Hello –package com.thelogbox&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;strong&gt;android create project&lt;/strong&gt; command is available if you have properly setup your PATH variables. If you get an error such as “Bad command or filename” or “command not found” or something to that effect, that is your just OS telling you that the &lt;span class=&quot;boxed&quot;&gt;android&lt;/span&gt; executable is not properly setup. Go back to &lt;a href=&quot;/installing-android-sdk/&quot;&gt;installing the android SDK&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There’s quite a bit going on in here, so let’s slow down and take look what those flags mean. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–target&lt;/strong&gt; expects an integer value. This value stands for a unique API level for a specific android version. In our example above, &lt;em&gt;level 8&lt;/em&gt; was specified because I intend to target android 2.2 (Froyo). Gingerbread will have a different value, Honeycomb will have a different one as well. If you want to see all the possible targets, you can type &lt;span class=&quot;boxed&quot;&gt;android list targets&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–path&lt;/strong&gt; specifies the name of top level folder for your project. Think of it as a project folder. It will be the root directory of your project&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–activitity&lt;/strong&gt; will cause our project to create a class that extends from the the Activity class. An Activity is commonly used if we need a user-facing class. Think of it as UI 2 mechanism in android. In our example, &lt;em&gt;–activity Hello&lt;/em&gt; means that our project will have class named Hello and is a child class of the base class Activity&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–package&lt;/strong&gt; an android project will be comprised of various XML files, resource files and Java source files. The Java source files will be stored using the package directive that we specify in the option. The package directive will only affect the location of Java source files, it will not affect the location and storage of the other android resources (i.e. XML files)&lt;/p&gt;

&lt;p&gt;If the command completed successfully, you are supposed to have a directory similar to this one&lt;/p&gt;

&lt;p&gt;What the &lt;em&gt;android create project&lt;/em&gt; generated&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;├── AndroidManifest.xml
├── ant.properties
├── bin
├── build.xml
├── libs
├── local.properties
├── proguard-project.txt
├── project.properties
├── res
│   ├── layout
│   │   └── main.xml
│   └── values
│       └── strings.xml
└── src
 	   └── com
 	       └── thelogbox
 	           └── Hello.java
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s quite a mouthful and probably enough to stop a beginning programmer to his tracks and pack up, but don’t do that. We will explore each and everyone of those files and folders in the succeeding tutorials. You can safely ignore them for now. We are just trying to get a feel of how to create a project—remember?&lt;/p&gt;

&lt;p&gt;For now, just play around the project. Open the generated files–don’t worry, they are all text files–see what they look like. They might fly over your head at this point, that’s okay, that’s expected. &lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;android create project&lt;/strong&gt; script actually generated a Java class source file for us, the &lt;em&gt;Hello.java&lt;/em&gt;. This is an Activity class, for now just think of an Activity as some sort of window—it is more than that actually, but for now just think of it like a window so we don’t have to deal with the complications.  You would normally use an Activity class if you want &lt;strong&gt;“the user to do something”&lt;/strong&gt;. In this case, we want to show him a simple “Hello World” message. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Background Info</title>
   <link href="http://thelogbox.com/android-background-information"/>
   <updated>2012-06-10T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-background-information</id>
   <content type="html">&lt;p&gt;This section is probably the least interesting of all. I would guess that only programming instructors will leaf through these pages so we will keep it short. The section however, contains a bit more than history. It also discusses some foundational tech structure of Android, in that regard, I still suggest to read through it so that you can appreciate some architectural information about the platform.&lt;/p&gt;

&lt;h1 id=&quot;short-history&quot;&gt;Short History&lt;/h1&gt;

&lt;p&gt;Andy Rubin led a small startup team sometime in 2003. They were building a software that could power a smart phone. Google took notice of it and acquired Android Inc. The first attempts of Android were not very impressive but phone manufacturers took notice and jumped into the bandwagon.&lt;/p&gt;

&lt;p&gt;Shortly thereafer, 200,000 android devices were being activated on a daily basis (at the time of writing, over half million android devices are activated each day). The small-ish mobile phone software began to make waves.&lt;/p&gt;

&lt;p&gt;Android’s snowball noticeably gained momentum sometime in 2008 - 2009—this is the time they began using sweet snack monikers on each version of Android; it has been unstoppable since then.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;2003&lt;/strong&gt; - Android Inc., was founded by Andy Rubin&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2005&lt;/strong&gt; - Android Inc was Acquired by Google*&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2008&lt;/strong&gt; - version 1.0&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2009&lt;/strong&gt; - version 1.1 &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2009&lt;/strong&gt; - v1.5 (CupCake), v1.6 (Donut)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2009&lt;/strong&gt; - v2.0/2.1 (Eclair)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2010&lt;/strong&gt; - v2.2 (Froyo), v2.3 (GingerBread)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2011&lt;/strong&gt; - v3.0 (HoneyComb)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2011&lt;/strong&gt; - v4.0 (Ice Cream Sandwich)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2012&lt;/strong&gt; - v4.1 (Jelly Bean)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An article about Andy Rubin and Android, titled &lt;a href=&quot;http://www.thedailybeast.com/newsweek/2010/10/03/how-android-is-transforming-mobile-computing.html&quot;&gt;Android Invasion&lt;/a&gt; appeared on a NewsWeek article sometime in 2010. &lt;/p&gt;

&lt;h1 id=&quot;technology-stack&quot;&gt;Technology Stack&lt;/h1&gt;

&lt;p&gt;The Android is made up of a slew of tech but the most visible ones are &lt;em&gt;Linux&lt;/em&gt; and &lt;em&gt;Java&lt;/em&gt;. It is a complete operating system and it provides a container that can support rich applications. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/android-architecture.png&quot; style=&quot;border: 1px solid gray&quot; /&gt;
&amp;lt;div id=&#39;lst&#39;&amp;gt;Fig 1: Android Architecture&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;Under the hood of Android is Linux. It was chosen for many reasons, but primarily because of it’s stability. Out of the box, Android comes with a couple of useful libraries like &lt;em&gt;SQLite&lt;/em&gt; for database programming, &lt;em&gt;OpenGL&lt;/em&gt; for graphics, &lt;em&gt;Webkit&lt;/em&gt; (the browser engine that power Safari and Chrome) and &lt;em&gt;SSL&lt;/em&gt; for security.&lt;/p&gt;

&lt;p&gt;The Android runtime consists of (some) core Java libraries and the Dalvik VM. The runtime is not the same JRE/JDK that you have on your desktop. This runtime has a subset of Apache Harmony which is an open source, free Java implementation from the Apache Software Foundation. The politics of why Android did not use the Oracle reference implementation of the JDK will not be part of this tutorial, I am sure you can find that information somewhere else.&lt;/p&gt;

&lt;p&gt;Android also comes packaged with Application Frameworks. This is the part of the Android that you will see frequently. As a developer you will spend a great deal of time reading, studying, implementing and using these frameworks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next »&lt;/strong&gt; &lt;a href=&quot;/android-install-sdk-windows&quot;&gt;Development Setup&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to rip YouTube videos</title>
   <link href="http://thelogbox.com/rip-youtube-videos-linux-osx"/>
   <updated>2012-04-12T00:00:00+08:00</updated>
   <id>http://thelogbox.com/rip-youtube-videos-linux-osx</id>
   <content type="html">&lt;p&gt;You can rip YouTube videos from the command line in Linux and OSX. There could be ways to do this in Windows via Cygwin, but I did not try that. &lt;/p&gt;

&lt;p&gt;In Debian Linux, or any other distribution that uses the &lt;strong&gt;apt&lt;/strong&gt; or &lt;strong&gt;aptitude&lt;/strong&gt; package manager, you can get the &lt;strong&gt;youtube-dl&lt;/strong&gt; program by pulling them from the repositories. Run the following command on a terminal window&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install ffmpeg lame youtube-dl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For OSX users, if you are using &lt;strong&gt;HomeBrew&lt;/strong&gt;, you can get youtube-dl by running the commands&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install youtube-dl
brew install ffmpeg
brew install lame
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;youtube-dl http://&amp;lt;youtubevideoaddress&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The downloaded file could be have &lt;strong&gt;.webm&lt;/strong&gt; extension, you can convert it to &lt;strong&gt;wav&lt;/strong&gt; using the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ffmpeg -i &amp;lt;DownloadedFileName.webm&amp;gt; &amp;lt;TargetFileName.wav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can convert the resulting wav file to mp3 format with the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lame &amp;lt;FileName.wav&amp;gt; &amp;lt;FileName.mp3&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

</content>
 </entry>
 
 <entry>
   <title>Screen Shooting</title>
   <link href="http://thelogbox.com/screen-shooting-android"/>
   <updated>2012-04-11T00:00:00+08:00</updated>
   <id>http://thelogbox.com/screen-shooting-android</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;You need the JDK (Java Development Toolkit). The Android development environment depends on Java, that is why you need this. Take note that you need the JDK not the JRE (Java Runtime Environment). If you install the JDK though, you would also have installed the JRE&lt;/li&gt;
  &lt;li&gt;You need to the &lt;em&gt;Android SDK&lt;/em&gt;. It can be downloaded installed on your PC. I assume you are and android&lt;/li&gt;
  &lt;li&gt;Launch the &lt;em&gt;ddms&lt;/em&gt; – &lt;em&gt;$ ddms&lt;/em&gt; or &lt;em&gt;c:\&amp;gt;ddms&amp;gt;&lt;/em&gt;. The path to the &lt;strong&gt;android&lt;/strong&gt; executable has to be included in your PATH variable. If you forgot how to setup the Android dev environment, the &lt;a href=&quot;http://developer.android.com/sdk/installing.html&quot;&gt;notes are on Official Android developer site&lt;/a&gt;. You do not need to follow all the steps in there, you only need to complete up until step No. 2.&lt;/li&gt;
  &lt;li&gt;Enable USB debugging on the Android device, before you connect it to the PC (or Mac, or Linux). This is usually done by accessing &lt;em&gt;Settings–&amp;gt;Applications–&amp;gt;Development&lt;/em&gt;, there is a check box beside “Enable USB debugging”. Connect the Android device to your PC via a USB cable&lt;/li&gt;
  &lt;li&gt;The connected device should now be visible within the DDMS window. Select it (just mouse click on it)&lt;/li&gt;
  &lt;li&gt;Press CTRL-a on your keyboard&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This technique of screen shooting is not for the everyday Android User — not even for the power user. This technique is for Devs. You would use this technique because the captured image is captured on a PC. If you will do screenshooting using an App, you need to take care of the file transfer between the device and the PC.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>iSSH and Vim</title>
   <link href="http://thelogbox.com/problem-issh-vim-ipad"/>
   <updated>2012-04-11T00:00:00+08:00</updated>
   <id>http://thelogbox.com/problem-issh-vim-ipad</id>
   <content type="html">&lt;p&gt;I needed to login to a linux machine using an iPad. Preferably, I should also be able to use a screen multiplexer for editing source files and for other stuff. This is the reason I bought iSSH, then eventually Prompt.&lt;/p&gt;

&lt;h2 id=&quot;issues-with-issh&quot;&gt;Issues with iSSH&lt;/h2&gt;

&lt;p&gt;I could not get 256 colors to work. A quick research — by that I mean quick Googling — I found some instructions to set the 256 color on the Advanced settings and/or to set the &lt;em&gt;term&lt;/em&gt; variable equal to &lt;em&gt;term-256color&lt;/em&gt;.  Which I did. But still could not get it to work. The &lt;em&gt;Prompt&lt;/em&gt; app though worked out of the box, I did not have to fiddle with anything&lt;/p&gt;

&lt;p&gt;Vim’s screen was wobbling when editing. The wobbling I think is being caused by Vim doing a little bit if intellisense on matching braces, quotes and parentheses. I think it was also being caused by the status line jittering. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/issh-1.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Later, after inspecting my &lt;em&gt;.vimrc&lt;/em&gt; on the target machine, I found out that I had a &lt;code class=&quot;codeblock&quot;&gt;:set columns=100&lt;/code&gt;. This was causing the wobbling and the display of weird characters  in iSSH. My iSSH screen settings was not wide enough to accomodate 100 columns as set in my .vimrc. I did not want to change my .vimrc hence, I just enlarged my screen size in iSSH (how to do to this)&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/issh-2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The CTRL key doesn’t work, I actually still don’t know how to make it work. Yes, I have enabled Options Mapping. &lt;/p&gt;

&lt;p&gt;This is a deal killer, Vim uses this alot when switching   between split windows (C-w w). Tmux uses this a lot more. This is enough reason why I chose Prompt, the CTRL key works out-of-the-box&lt;/p&gt;

&lt;h2 id=&quot;prompt&quot;&gt;Prompt&lt;/h2&gt;

&lt;p&gt;Prompt is another SSH client on the iPad. It is less capable in terms of bells and whistles, but it does have everything I need and none of the problems I have with iSSH. I don’t use the iPad to VNC or to connect via Remote Desktop Connection anyway. I just needed it for SSH&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;the CTRL keys work out of the box, using a bluetooth keyboard. I could not get it to work on iSSH. Despite trying a lot of acrobatics on the settings — Yes. I did try enable Options Mapping. No joy!&lt;/li&gt;
  &lt;li&gt;Prompt appeared a bit faster too&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If not for the the CTRL keys not working out of the box on iSSH, it would have been a better fit for my use, because;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The size of the screen can configured via a slider control. This was not available on Prompt. You could choose the size of the font (but not the screen font itself)&lt;/li&gt;
  &lt;li&gt;It was more intuitive if you need another SSH session, just press the plus sign (+) on the top portion of the screen&lt;/li&gt;
  &lt;li&gt;It had lot more controls than Prompt.  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I bought the two apps anyway. It seems though, I find my self using the Prompt more than I use iSSH&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Send and Receive SMS message using USB modem</title>
   <link href="http://thelogbox.com/send-receive-sms-messages-usb-modem-linux"/>
   <updated>2012-04-09T00:00:00+08:00</updated>
   <id>http://thelogbox.com/send-receive-sms-messages-usb-modem-linux</id>
   <content type="html">&lt;p&gt;This mini project was done on a Debian 5 Linux. It was tested on CrunchBang as well and it worked out fine. A USB modem with a post paid plan was used, but a stick with pre paid plan should as well, I think. I haven’t tested that but I can see no reason why it should not work.&lt;/p&gt;

&lt;p&gt;First, we need to pull some software from the repositories. We will need &lt;strong&gt;gnokii-smsd-mysql&lt;/strong&gt; and the &lt;strong&gt;mysql-server&lt;/strong&gt;. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install mysql-server
sudo apt-get install gnokii-smsd-mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Connect the USB modem to PC and find out which port it is using. We will need some info about the modem. We will use that later in our configuration.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo lsusb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another command to use could be&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dmesg | grep USB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What you are looking for is the &lt;strong&gt;device name&lt;/strong&gt; for the modem. Usually the modem is at &lt;strong&gt;/dev/tty0&lt;/strong&gt; but just to be sure, run either the &lt;strong&gt;lsusb&lt;/strong&gt; command or the &lt;strong&gt;dmesg&lt;/strong&gt; command as shown above. Take note of the device name. We will need that when we edit the configuration file for gnokii.&lt;/p&gt;

&lt;p&gt;The configuration file for gnokii is at &lt;strong&gt;~/.config/gnokii/config&lt;/strong&gt;. Edit the file and set the port number and the device model to their appropriate values. They should look something like this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;port=/dev/tty0
model=AT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We need to set the value of the &lt;strong&gt;model&lt;/strong&gt; attribute to AT because we will use a USB modem. The default value of the model attribute in some configuration file is &lt;strong&gt;6510&lt;/strong&gt;, which is a phone. That is not the correct value for our project.&lt;/p&gt;

&lt;p&gt;Just in case the gnokii configuration file was not created during the installation, you can simply create the config file manually and set the port/model attributes to their proper values.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir -p ~/.config/gnokii
sudo touch ~/.config/gnokii/config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After you have saved the configuration file, do a quick test so we can know if we missed something.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gnokii --identify
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the command succeeds, it will give some diagnostics. If there are errors, revisit your steps above.&lt;/p&gt;

&lt;h2 id=&quot;setting-the-database&quot;&gt;Setting the Database&lt;/h2&gt;

&lt;p&gt;The gnokii-smsd-msyql package contains the SQL scripts necessary to create the table structure, but the database itself still needs to be manually prepared. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -p
mysql&amp;gt; create database smsgw;
mysql&amp;gt; use smsgw;
mysql&amp;gt; \. /usr/share/doc/gnokii-smsd-mysql/sms.tables.mysql.sql;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;sending-and-receiving-sms&quot;&gt;Sending and Receiving SMS&lt;/h2&gt;

&lt;p&gt;Run &lt;strong&gt;smsgw&lt;/strong&gt; daemon process &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo smsd -u root -p smsgw -c localhost -m mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To send an SMS message, run the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &quot;Test message | gnokii --sendsmsd &amp;lt;+mobilenumber&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;+mobilenumber is structured as &lt;strong&gt;(country code) phone number&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you send an SMS message to the number of the USB modem, all incoming messages are stored in the &lt;strong&gt;inbox&lt;/strong&gt; table of the database&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -p
mysql&amp;gt; use smsgw;
mysql&amp;gt; select * from inbox;
&lt;/code&gt;&lt;/pre&gt;

</content>
 </entry>
 
 <entry>
   <title>What Application is Using Port 80</title>
   <link href="http://thelogbox.com/what-port-am-i-using"/>
   <updated>2012-04-08T00:00:00+08:00</updated>
   <id>http://thelogbox.com/what-port-am-i-using</id>
   <content type="html">&lt;p&gt;This guide shows detailed steps on how to find and terminate a specific network related process in Windows 8. The instructions here are also applicable for Windows 7, Vista or XP users. &lt;/p&gt;

&lt;p&gt;The commands used are usually employed by server administrators. But developers, from time to time, encounter difficult situations related to network processes. It may not be apparent as a network related problem, and that is part of the difficulty.&lt;/p&gt;

&lt;p&gt;The most common use of these commands is resolve errors which may manifest themselves as one of the following, but not limited to&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Address already in use&lt;/li&gt;
  &lt;li&gt;BindException&lt;/li&gt;
  &lt;li&gt;Port 80 already in use&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For purposes of illustration and specificity of example, we will take on the following problem:&lt;/p&gt;

&lt;p&gt;We are trying to start a web server, it could be Apache, IIS or NGINX, it doesn’t matter what. We cannot successfully start the web server for one reason or another. The error message said “Address already in use”. &lt;/p&gt;

&lt;h2 id=&quot;basic-concepts&quot;&gt;1 Basic concepts&lt;/h2&gt;

&lt;p&gt;A network aware application, like a web server, need to bind itself to a socket. Think of a socket from the context of a &lt;a href=&quot;http://en.wikipedia.org/wiki/Tin_can_telephone&quot;&gt;tin can telephone&lt;/a&gt;. The two cans are connected via a string which can transmit soundwaves from one endpoint to the other. The socket is one the cans and the network cable is the string. Instead of transmitting soundwaves like the string, we stream data packets from one socket to another. &lt;/p&gt;

&lt;p&gt;A socket needs two things before it can be opened. It needs the IP address of the machine where you will run the web server. The application can easily grab that IP address, so that is rarely a problem. The other thing it needs is a port number. Most web servers use port 80. When a webserver is started, it will attempt to latch itself into a socket using 80 as the port number. &lt;/p&gt;

&lt;p&gt;Some of the times, port 80 is also used by an application other than a webserver, skype for example. Only one application can use port number 80, or any port number for that matter, at any point in time. If an application like skype has already latched itself into port 80, no other application can use it until skype is terminated. This sets the stage for our troubleshooting exercise. We have used skype in here as an example of an app that prevents use from launching the web server. In reality, we do not know what application is using the port. So we need to find out. &lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;2 Steps&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Launch a terminal window&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On Windows 7, press the Windows superkey on the keyboard. When the &lt;strong&gt;Start&lt;/strong&gt; menu pops, type &lt;strong&gt;cmd&lt;/strong&gt; inside the textbox labeled &lt;strong&gt;Run&lt;/strong&gt; then press ENTER. &lt;/p&gt;

&lt;p&gt;On Windows 8, press the Windows superkey, type &lt;strong&gt;cmd&lt;/strong&gt; then press ENTER. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. List the network processes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;List all the processes that are using network resources and filter the results. We are looking for a specific process that uses port number 80. Windows has the commands &lt;strong&gt;netstat&lt;/strong&gt; and &lt;strong&gt;findstr&lt;/strong&gt; which can do the job for us.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\&amp;gt; netstat -aon | findstr 0.0:80
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The two commands above are joined by the pipe operator. The netstat command will list all network related processes. Its output is used as an input to findstr. The resulting list is filtered such that only applications using port 80 will show up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Find the application name of the app using port 80&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;netstat&lt;/strong&gt; command will not give us the name of the application that uses port 80. It will give us only its process id or pid. We need to use another command to find out the application name&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\&amp;gt; tasklist | findstr 560
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The number 560 above may not be applicable for you. In my machine, the pid of the offending app was 560, it may not be the same for you. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Kill the offending process&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can use the &lt;strong&gt;taskkill&lt;/strong&gt; command to terminate the application&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\&amp;gt; taskkill /F /PID 560
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Alternatively, you can use GUI tools like the Windows &lt;strong&gt;Task Manager&lt;/strong&gt;  to terminate running programs or a third-party tool like &lt;strong&gt;Process Explorer&lt;/strong&gt; from SysInternals.&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;3 Further reading&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;The &lt;strong&gt;netstat&lt;/strong&gt; command documentation can be found at the &lt;a href=&quot;http://technet.microsoft.com/en-us/library/ff961504.aspx&quot;&gt;Technet page for netstat&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;tasklist&lt;/strong&gt; command documentation can be found at &lt;a href=&quot;http://technet.microsoft.com/en-us/library/cc732459.aspx&quot;&gt;Technet page for tasklist&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;taskkill&lt;/strong&gt; command documentation can be found at the &lt;a href=&quot;http://technet.microsoft.com/en-us/library/bb491009.aspx&quot;&gt;Technet page for taskkill&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Port numbers&lt;/strong&gt; and service name assignments can be found at the &lt;a href=&quot;http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml?&amp;amp;page=2&quot;&gt;IANA page&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;resources&quot;&gt;4 Resources&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;ProcessExplorer&lt;/strong&gt; - You can download ProcessExplorer from the &lt;a href=&quot;http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx&quot;&gt;SysInternals website&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Java Object Oriented Programming</title>
   <link href="http://thelogbox.com/java-object-oriented-programming"/>
   <updated>2011-11-21T00:00:00+08:00</updated>
   <id>http://thelogbox.com/java-object-oriented-programming</id>
   <content type="html">&lt;p&gt;If you set out to truly understand how an automobile works, down to tiniest detail of how each nut and bolt performs, you could be in over your head—especially if do not have a degree in mechanical engineering. On the other hand, if the goal is a simpler one such as “to drive a car”, it would seem to be a more achievable goal, by order of magnitudes. The mechanics of vehicle control such as steering, braking and accelerating are more manageable to keep in our heads as compared to principles of hydraulics or the inner workings of the internal combustion engine.  &lt;/p&gt;

&lt;h3 id=&quot;complexity&quot;&gt;Complexity&lt;/h3&gt;
&lt;p&gt;We are surrounded by complex systems in our daily lives, and a career in programming will not shield you from that—au contraire. Our saving grace is that we have gotten pretty good at dealing with complexities. Take for example the plants that you have at home, you don’t need to know the gory details of its biological structure in order to know that you need to give it some sun and water lest it will die. Another example is the light switch, you don’t need a degree in electrical engineering to know that you if you flip the switch one way, its lights out—flip it another way and its lights on. &lt;/p&gt;

&lt;p&gt;Computer scientist have grappled with complexities through the ages and have managed to develop tools to manage software complexities. One of the goals of complexity management is to engineer the illusion of simplicity—to hide the working details of a complex system in order for it to be usable. &lt;/p&gt;

&lt;p&gt;There appears to be an inherent limit in the capabilities of our brain to deal with a swarm of information, we just can’t deal with all of it—at once. The silver lining, like I mentioned earlier is that we have gotten pretty good at dealing with an avalanche of information. We have developed a coping mechanism called “abstraction”&lt;/p&gt;

&lt;p&gt;A new employee on a large organization cannot and will not be able to comprehend all operational tasks that happens in the organization. He cannot possibly know the tiniest work details of each and every employee in the company. If you will just but give him a little time in the company, not only will be able to re-orient himself, he can also do something really productive that adds value to the company. So what happened between then and now? What makes us capable of navigating complex systems now but not then? The answer is, our minds oriented itself and adapted to its new environment.&lt;/p&gt;

&lt;p&gt;Our minds focused on just a few items while ignoring the other inessential details of the others. It then moved on to other parts of the complex system forming hierarchies of concepts that builds on top of one and then another. The information bottleneck was broken by dealing with it in chunks. When we focus on specific chunks, we are choosing to deal with idealized and generalized model of the object right in front of us \cite{ooad} thus increasing its semantic content. This abstraction process is responsible why we are capable of understanding very complex systems.  &lt;/p&gt;

&lt;h2 id=&quot;learning-objectives&quot;&gt;Learning objectives&lt;/h2&gt;
&lt;p&gt;Abstraction is a key and foundational concept in OOP. There is no way around it. You will not go far in OOP and hence, Java programming without understanding the concept of process of abstraction. You also need the ability to leap from the OOP concepts to their Java implementations—those are the things we need to learn at the moment. &lt;/p&gt;

&lt;h2 id=&quot;key-concepts&quot;&gt;Key concepts&lt;/h2&gt;

&lt;p&gt;There are a couple of criteria that a programming language needs to meet before it can be considered a OOP language. It needs provide a facility to effectively implement the process of &lt;em&gt;abstraction&lt;/em&gt;. It needs to provide a way to reuse functionality by means of extension—&lt;em&gt;inheritance&lt;/em&gt;. It needs to have a mechanism to protect data and type from inadvertent and unintentional state changes—&lt;em&gt;encapsulation&lt;/em&gt;. It needs to have a mechanism to effect &lt;em&gt;polymorphism&lt;/em&gt; and it needs to have a mechanism for grouping some programming constructs such as methods and classes—&lt;em&gt;encapsulation&lt;/em&gt;.  &lt;/p&gt;

&lt;h3 id=&quot;abstraction&quot;&gt;Abstraction&lt;/h3&gt;

&lt;p&gt;Abstraction is an activity where the essential characteristics of &lt;em&gt;something&lt;/em&gt; is distilled. It makes that something different from other somethings. For example, if you think hard about an elevator and try to list down the characteristics, what would they be? How is an elevator different from other modes of transport such as an escalator or a conveyor? &lt;/p&gt;

&lt;p&gt;We cannot simply list &lt;em&gt;move up&lt;/em&gt; and &lt;em&gt;move down&lt;/em&gt;, while these set of behaviors differentiate the elevator from the conveyor (which simply moves to the left and to the right), it does not differentiate it effectively from an escalator. Even if we incorporate the idea that an elevator stops in between floors, it still does not differentiate it because the escalator also takes us from floor to floor. We can incorporate the behavior of &lt;em&gt;skipping floors&lt;/em&gt; and that will be an effective differentiator because an escalator cannot skip floors. &lt;/p&gt;

&lt;p&gt;If we summarize the &lt;em&gt;behavior&lt;/em&gt; of the elevator, we can come up with two behavior-item—&lt;strong&gt;moveDownToFloor()&lt;/strong&gt; and &lt;strong&gt;moveUpToFloor()&lt;/strong&gt;. That is the essence of an elevator object. The tricky part is how to know when to stop adding or removing behavior from an object. Unfortunately, abstraction is an acquired skill, and you can only get better at it overtime if you do it lots of times. I can tell you from practice that abstraction is not so much as identifying a thousand (unimportant) behavior for an object. On the contrary, abstraction is more an exercise on reduction. Try to remove behavior from an object until you are down to a bare minimum. Let’s take a shoe object for an example. You can remove the heels of a shoe and it still will be a shoe. You can remove the laces and it still (barely) is a shoe—but you cannot remove its sole. &lt;/p&gt;

&lt;p&gt;The abstracted list of behavior of an object is known as a &lt;em&gt;Type&lt;/em&gt;—this is an important terminology in OOP and Java, that is why I am emphasizing it in this section. All objects in Java &lt;strong&gt;must have at least one type&lt;/strong&gt;—it can have more, but not less.  &lt;/p&gt;

&lt;h3 id=&quot;a-discussion-on-types&quot;&gt;A discussion on Types&lt;/h3&gt;

&lt;p&gt;It might help if you think of a &lt;em&gt;Type&lt;/em&gt; as some sort of a contract or a promise from an object. The object is making a committment that it will respond to any other object or program who calls anyone of the methods within this type. Going back to the elevator example, it means that any Java object or program can call &lt;em&gt;elevator.moveDownTo()&lt;/em&gt; or &lt;em&gt;elevatorMoveUpTo()&lt;/em&gt; and they are guaranteed to get a response.  &lt;/p&gt;

&lt;p&gt;There are three ways to define a Type in Java, the &lt;em&gt;class&lt;/em&gt;, &lt;em&gt;abstract class&lt;/em&gt; and &lt;em&gt;interface&lt;/em&gt;—each has its own strengths and inconveniences.  &lt;/p&gt;

&lt;h2 id=&quot;objects-classes-and-types&quot;&gt;Objects, Classes and Types&lt;/h2&gt;

&lt;p&gt;An object is an abstraction of something useful to you (the programmer). An object represents an idealized and generalized model of something of interest. Take for example a Phone object, its protocols could be abstracted as &lt;em&gt;answerCall()&lt;/em&gt; and &lt;em&gt;dialNumber()&lt;/em&gt;. If we skip all the programming details of type creation, we can start using the object in a Java program.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Phone phone = new Phone();
phone.answerCall();
phone.dialNumber(&quot;6321234567&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;using-an-object&quot;&gt;Using an object&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Phone&lt;/em&gt; with an uppercase first letter is a type declaration and &lt;em&gt;phone&lt;/em&gt; all lowercase letter is variable of type &lt;em&gt;Phone&lt;/em&gt;—in the statement \highlight{int i=1;} &lt;em&gt;int&lt;/em&gt; or integer is the type and &lt;em&gt;i&lt;/em&gt; is a variable of type integer. The &lt;em&gt;new&lt;/em&gt; keyword is responsible for creating the Phone object and &lt;em&gt;Phone()&lt;/em&gt; is actually a special function or method—its called a &lt;em&gt;constructor&lt;/em&gt;. To invoke the behavior of an object, you simply need to call its method using the dot notation. That is what we did in the statements &lt;em&gt;phone.answerCall()&lt;/em&gt; and &lt;em&gt;phone.dialNumber()&lt;/em&gt;.  &lt;/p&gt;

&lt;p&gt;Objects are made by instantiating &lt;em&gt;Classes&lt;/em&gt;. Classes are actually what we define as abstraction construct. If we were to codify the Phone program example, it could look like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Phone {

   String phonenumber=&quot;6321234567&quot;;
&lt;/code&gt;&lt;/pre&gt;

   	void answerCall() {
   	}

   	void dialNumber(String args) {
   	}

&lt;pre&gt;&lt;code&gt;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Phone.java&lt;/em&gt; is a Java class. It is constructed by using &lt;em&gt;class&lt;/em&gt; keyword followed by a name of the class ^[A class name is something that you need provide as the author of the class]. The open and close curly brace is the body of the class.  &lt;/p&gt;

&lt;p&gt;You can define methods and variables inside the class body. The methods as a group constitutes the protocols of the object. It is the set of methods that the Phone object guarantees to respond to. &lt;/p&gt;

&lt;p&gt;Java classes are written on source files—ideally, one class definition per source file but you can define more than one class in a source file. Classes are compiled using &lt;em&gt;javac sourcefile.java&lt;/em&gt;, in our case, &lt;strong&gt;java Phone.java&lt;/strong&gt;. This will produce a file named &lt;em&gt;Phone.class&lt;/em&gt;, it is the compiled version of Phone.java—compiled classes is a requisite before you can create objects out of them.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import static java.lang.System.out;

class Phone {
&lt;/code&gt;&lt;/pre&gt;

   	String phonenumber=”6321234567”;

   	void answerCall() {
&lt;pre&gt;&lt;code&gt;  	out.println(&quot;Answering call...&quot;);
   	}
&lt;/code&gt;&lt;/pre&gt;

   	void dialNumber(String args) {
&lt;pre&gt;&lt;code&gt;  	out.println(&quot;Calling &quot; + args);
   	}
&lt;/code&gt;&lt;/pre&gt;

   	void setPhoneNumber(String args) {
&lt;pre&gt;&lt;code&gt;  	phonenumber = args;
   	}

}

class PhoneTest {
&lt;/code&gt;&lt;/pre&gt;

   	public static void main (String [] args)
   	{
&lt;pre&gt;&lt;code&gt;  	Phone p1 = new Phone();
  	p1.answerCall();
  	p1.dialNumber(&quot;6329876543&quot;);
  
  	Phone p2 = new Phone();
  	p2.answerCall();
  	p2.dialNumber(&quot;6327778888&quot;);
&lt;/code&gt;&lt;/pre&gt;

   	}

&lt;pre&gt;&lt;code&gt;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The PhoneTest program shows a more complete example of how you might use the Phone object. The PhoneTest class is not necessary because the &lt;em&gt;main()&lt;/em&gt; function could have been easily written inside Phone class, but the verbosity of two classes was chosen to make the example more readable and less confusing for beginner programmers. &lt;/p&gt;

&lt;h3 id=&quot;instantiation&quot;&gt;Instantiation&lt;/h3&gt;

&lt;p&gt;To create an object, you need to instantiate a class. The resulting object now has the protocols or the &lt;em&gt;Type&lt;/em&gt; of that class. You can begin using the object according to the protocols that was defined by its class. The protocols needs to be followed strictly, if the method defined is &lt;em&gt;dialNumber(String args)&lt;/em&gt;, you need to call the method exactly as it was defined. The spelling needs to be right, the casing of the letters needs to be right and if the method expects an argument or parameter to be passed, you need to pass the expected parameter—in the case of the &lt;em&gt;dialNumber&lt;/em&gt; method, it expects a String parameter. &lt;/p&gt;

&lt;p&gt;The PhoneTest program defines the &lt;em&gt;setPhoneNumber()&lt;/em&gt; method and the &lt;em&gt;phonenumber&lt;/em&gt; variable. The class initially defines its own phone number via the phonenumber variable, but it also offers a way to change this phone number. The &lt;em&gt;setPhoneNumber&lt;/em&gt; method was declared to facilitate a way to change an internal detail of the class. If the &lt;em&gt;setPhoneNumber&lt;/em&gt; method is called passing a new phone number, the object’s state will change—it will have a new phone number.  &lt;/p&gt;

&lt;h3 id=&quot;encapsulation&quot;&gt;Encapsulation&lt;/h3&gt;

&lt;p&gt;Classes provides a way to package data and behavior in a single construction. The &lt;em&gt;phonenumber&lt;/em&gt; variable is not foreign or external to &lt;em&gt;Phone Type&lt;/em&gt;, it is an instrinsic property of the Phone. The &lt;em&gt;setPhoneNumber&lt;/em&gt; method is also intrinsic to the Phone. If you invoke the &lt;em&gt;setPhoneNumber&lt;/em&gt; method, it will act on a data that belongs to the Phone object, not something alien to the Phone. Java enforces this kind of encapsulation in a strict fashion. There is no way to define a stand-alone method or a stand-alone variable, every method and every variable needs to be associated with a &lt;em&gt;Type&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;The concept of objects, classes and types are intertwined. Understanding these concepts individually and collectively forms one of the basis of effective Java programming. &lt;/p&gt;

&lt;p&gt;Objects are created from classes, you cannot create an object without a class definition. When you create an object, the process is known as &lt;em&gt;instantiation&lt;/em&gt; ^[An object is known as instance of a class]. An instantiated class (object) can respond to messages or methods as long as the methods are within the defined protocols of the class.  &lt;/p&gt;

&lt;p&gt;A &lt;em&gt;Type&lt;/em&gt; is a collection of methods. One way to define a &lt;em&gt;Type&lt;/em&gt; is to define a class—there are two other ways, they will be discussed later in this chapter. It is not correct to say that a class has a type. It is correct to say that a class is a Type, just as it is correct to say that an object has a Type—the Type that was defined by the class.&lt;/p&gt;

&lt;p&gt;To illustrate the relationship between a class and an object, try imagining a house plan, a blueprint if you may—the kinds of drawings that architects produce before building a house. If we build one house out of an architect’s blueprint, we can say that the physical house that was built is an instance of the blueprint.  &lt;/p&gt;

&lt;p&gt;If we build another house using the same architect’s blueprint, we can say that the second house is another instance of the architect’s blueprint. Now there are two houses built from the same blueprint. Even if the two houses will be identical because of their structural similarities, they are actually two distinct houses, they are not one and the same. They will be inhabited by different people, they may differ in roof colors or interior paints etc. That is exactly what’s going on as well between &lt;strong&gt;Classes&lt;/strong&gt; and &lt;strong&gt;Objects&lt;/strong&gt;. Classes are the blueprints from whence objects are made from. &lt;/p&gt;

&lt;p&gt;Going back to the Phone example, if we wanted to create other Phone objects, we simply need to instantiate the Phone class again. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import static java.lang.System.out;

class Phone {
&lt;/code&gt;&lt;/pre&gt;

   	String phonenumber=”6321234567”;

   	void answerCall() {
&lt;pre&gt;&lt;code&gt;  	out.println(&quot;Answering call...&quot;);
   	}
&lt;/code&gt;&lt;/pre&gt;

   	void dialNumber(String args) {
&lt;pre&gt;&lt;code&gt;  	out.println(&quot;Calling &quot; + args);
   	}

	void setPhoneNumber(String args) {
  	phonenumber = args;
   	}

}

class PhoneTest {

   public static void main (String [] args)
   	{
  	Phone p1 = new Phone();
  	p1.answerCall();
  	p1.dialNumber(&quot;6329876543&quot;);
  
  	Phone p2 = new Phone();
		p2.setPhoneNumber(&quot;6329995555&quot;);
  	p2.answerCall();
  	p2.dialNumber(&quot;6327778888&quot;);
&lt;/code&gt;&lt;/pre&gt;

   	}

&lt;pre&gt;&lt;code&gt;}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;state-encapsulation&quot;&gt;State encapsulation&lt;/h3&gt;

&lt;p&gt;The variables &lt;em&gt;p1&lt;/em&gt; and &lt;em&gt;p2&lt;/em&gt; are both of type Phone but they are two distinct objects. They have two different states (phone numbers). You can manipulate one phone object without impacting the state of the other. This characteristic of objects allows for a more sane and rational programming environment. &lt;/p&gt;

&lt;h2 id=&quot;constructors&quot;&gt;Constructors&lt;/h2&gt;

&lt;p&gt;Object creation requires four things, the type of object to be created, a variable to store the reference of the created object, the &lt;em&gt;new&lt;/em&gt; keyword to effect the actual creation and a &lt;em&gt;constructor&lt;/em&gt;. You have seen and used all these things with the exception of the last one, the constructor. In the statement \highlight{Phone p1 = new Phone()}, &lt;em&gt;Phone&lt;/em&gt; is the type and &lt;em&gt;Phone()&lt;/em&gt; is the constructor. &lt;/p&gt;

&lt;p&gt;A constructor call is a function, first and foremost but it is not an ordinary function. It is special because it bears the same name as that of the class where it is declared and unlike ordinary functions, it is not written with a return type. &lt;/p&gt;

&lt;p&gt;Constructors are important, you cannot create objects without them. They are of extreme importance that Java will actually supply a default constructor in case you do not provide one explicitly. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Phone {

	public static void main(String []args) {
		Phone p1 = new Phone();
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the preceding code sample, we did not define an explicit constructor but we were still able to call \highlight{new Phone()}. The reason for this is because Java supplied our code with a default no-arg constructor ^[No argument constructor]. As if we had written something like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Phone {

	Phone() {
	}

	public static void main(String []args) {
		Phone p1 = new Phone();
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is also no &lt;em&gt;return&lt;/em&gt; statement within the body of the constructor. When the constructor returns, it will create an object of type Phone, the variable &lt;em&gt;p1&lt;/em&gt; will hold a reference (an address) to actual Phone object. &lt;/p&gt;

&lt;h2 id=&quot;inheritance-and-polymorphism&quot;&gt;Inheritance and Polymorphism&lt;/h2&gt;

&lt;p&gt;A class can re-use all the codes and functionalities of another class by means of extension. The class being extended is typically called the &lt;em&gt;parent class&lt;/em&gt; ^[Sometimes also called super class or base class] and the extending class is called a &lt;em&gt;child class&lt;/em&gt;.  Class extension grants the child class all the inheritable methods and variables of the super class ^[Not all members can be inherited. Members that were declared as private cannot be inherited. This is elaborated in chapter 10]. The instant functionality gained from class extension impacts the productivity of the programmer in a positive way. If the abstractions are done carefully and rationally, it becomes possible to write a piece of code that can be used in other applications. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import static java.lang.System.out;

class Telephone {

	String phonenumber;

	void init() {
		out.println(&quot;connecting to carrier via land line&quot;);
	}

	void dialNumber(String args) {
		out.println(&quot;Dialling &quot; + args);
	}

	void answerCall() {
		out.println(&quot;Answering call...&quot;);
	}	

}

class MobilePhone extends Telephone {

}

class TelephoneTest {

	public static void main(String[] args) {

		MobilePhone mp = new MobilePhone();

		mp.init();
		mp.dialNumber(&quot;6327775566&quot;);
		mp.answerCall();

	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;extends-keyword&quot;&gt;extends keyword&lt;/h3&gt;
&lt;p&gt;In the sample code, the &lt;em&gt;MobilePhone&lt;/em&gt; type was created by defining a class. The class block does not contain any definition and yet we were able to call the &lt;em&gt;init&lt;/em&gt;, &lt;em&gt;dialNumber&lt;/em&gt; and &lt;em&gt;answerCall&lt;/em&gt; methods against it—these methods, though not explicitly defined inside the &lt;em&gt;MobilePhone&lt;/em&gt; class has been inherited from the &lt;em&gt;Telephone&lt;/em&gt; class. The &lt;em&gt;extends&lt;/em&gt; keyword is used to denote that one class is inheriting from another class.&lt;/p&gt;

&lt;h3 id=&quot;javalangobject-is-the-root-class-in-java&quot;&gt;java.lang.Object is the root class in Java&lt;/h3&gt;

&lt;p&gt;Class extension is not an optional activity in Java programming. A Java class needs to extend &lt;em&gt;at least and at most&lt;/em&gt; one other class. All newly defined classes, by default, extends the &lt;em&gt;java.lang.Object&lt;/em&gt; class, unless otherwise overriden by an explicit &lt;em&gt;extends&lt;/em&gt; declaration. In Listing 4.5, class Telephone is not explicitly extending any class, hence it is a child class of &lt;em&gt;Object&lt;/em&gt;–it is as if we had written;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Telephone extends Object {

}
class MobilePhone extends Telephone {

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;MobilePhone&lt;/em&gt; does not extend &lt;em&gt;Object&lt;/em&gt; because we declared explicitly that it extends Telephone. You will realize soon enough that every class in Java descends either directly or indirectly from \code{java.lang.Object}. &lt;/p&gt;

&lt;h3 id=&quot;single-rooted-class-inheritance&quot;&gt;Single rooted class inheritance&lt;/h3&gt;

&lt;p&gt;I would not advise that you explicitly declare all your classes to extend from Object. Firstly because Java will do that for you implicitly and secondly because you can only extend one class. There is no way to achieve multiple class inheritance. Java follows a single-rooted class inheritance, once you have extended a class, you cannot inherit from another one. That is not to say multiple inheritance cannot be achieved in Java, it can be, using &lt;em&gt;interfaces&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;interfaces&quot;&gt;interfaces&lt;/h3&gt;

&lt;p&gt;Creating a class is one of three ways to define a &lt;em&gt;Type&lt;/em&gt;. The second way is to create an &lt;em&gt;interface&lt;/em&gt;. An interface is the purest form of a type because it only contains the protocols but not the implementing details of the object. The class on the otherhand contains both the protocol (the Type) and the implementing details (body of the functions). &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;interface Phone {
	void answerCall();
	void dialNumber(String args);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An interface is declared using the &lt;em&gt;interface&lt;/em&gt; keyword followed by a name ^[The name of interfaces are programmer defined, like the class]. The opening and closing curly braces comprises the body of the interface.&lt;/p&gt;

&lt;p&gt;Methods are variables can be declared in an interface, but they are not the kind of variables and methods that you would declare insie the class. Interfaces can only contain &lt;em&gt;abstract methods&lt;/em&gt;, which makes sense because interfaces are supposed to contain only the Type information and not the implementation detail. An abstract method declares only the method signature ^[Method signature is the return type, name of the method and parameters that it accepts] and has a semi-colon immediately right after, in place of the usual method body. If you declare variables inside the interfaces, they will be &lt;strong&gt;automatically&lt;/strong&gt; &lt;em&gt;final, static&lt;/em&gt; and &lt;em&gt;public&lt;/em&gt; ^[These keywords are better discussed on the post RE methods].&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//PhoneToo.java

interface IPhone {

	void answerCall();
	void dialNumber(String args);

}

class Phone implements IPhone {

	public void answerCall() {
		System.out.println(&quot;Answering call&quot;);
	}

	public void dialNumber(String args){
		System.out.println(&quot;Calling &quot; + args);
	}

	public static void main(String[] args) {
		Phone p = new Phone();
		p.dialNumber(&quot;632444888&quot;);
		p.answerCall();
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Interfaces are not meant to be instantiated, they are meant for type extensions (inheritance). To use interfaces, they must be &lt;em&gt;implemented&lt;/em&gt; by a class. The code sample of listing 4.7 shows a Phone class inheriting the type &lt;em&gt;IPhone&lt;/em&gt; using the &lt;em&gt;implements&lt;/em&gt; keyword. &lt;/p&gt;

&lt;h3 id=&quot;inheriting-from-an-interface-binds-you-to-a-contract&quot;&gt;Inheriting from an interface binds you to a contract&lt;/h3&gt;

&lt;p&gt;When you &lt;em&gt;implement&lt;/em&gt; an interface, you are entering into a contract, that you will &lt;em&gt;implement&lt;/em&gt; whatever methods you have inherited. Implementing a method means that you will provide the details of the function—you will supply the function body. &lt;/p&gt;

&lt;p&gt;At first glance, it looks like more work for the programmer because you are duplicating code. First you will write the interface but the methods doesn’t have details, then you will implement in a class then supply the details of the method. This argument maybe true for trivial applications ^[I would define a trivial application as something that you don’t intend to maintain or improve in the course of years. A disposable application], but for non-trivial applications, coding against an interface rather than a concrete class is good way to use the Java typing system to achieve maintainability of code. Another reason to use interfaces is when you truly need multiple inheritance. Let us expand the Phone program.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//MultiFunction.java

import static java.lang.System.out;

interface Printer {
	void print();
}

interface Phone {
	void answerCall();
	void dialNumber(String args);
}

interface Copier {
	void copy();
}

class MultiFunction implements Printer, Phone, Copier {

	public void print() {
		out.println(&quot;Printing&quot;);
	}

	public void answerCall() {
		out.println(&quot;Answering call&quot;);
	}

	public void dialNumber(String args) {
		out.println(&quot;Dialling &quot; + args);
	}

	public void copy() {
		out.println(&quot;Copying&quot;);
	}	
}

class TestMultiFunction {

	public static void main(String[] args) {
	
		Printer printer = new MultiFunction();
		Phone phone = new MultiFunction();
		Copier copier = new MultiFunction();
	
		printer.print();
		phone.answerCall();
		copier.copy();
	
		System.out.println(copier.toString());
		copier.print();
	
	}

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Multifunction.java code defines three interfaces, the &lt;em&gt;Phone&lt;/em&gt;, &lt;em&gt;Printer&lt;/em&gt; and the &lt;em&gt;Copier&lt;/em&gt;. The class &lt;em&gt;MultiFunction&lt;/em&gt; implements all three interfaces. If you think about it, what the code is saying is—MultiFunction &lt;em&gt;is a&lt;/em&gt; Printer, it &lt;em&gt;is also a Copier&lt;/em&gt; and a &lt;em&gt;Phone&lt;/em&gt;. As such, a MultiFunction object should behave as a Phone, a Printer or Copier will behave. That is the object contract between these three interfaces and the class.  &lt;/p&gt;

&lt;p&gt;If you review line 39-45 of Listing 4.8, I did not use the MultiFunction type when I created a MultiFunction object. I used the specific interfaces as the Type to be created. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Printer printer = new MultiFunction();
Phone phone = new MultiFunction();
Copier copier = new MultiFunction();
	
printer.print();
phone.answerCall();
copier.copy();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;MultiFunction printer = new MultiFunction()&lt;/em&gt; would have been fine, the code will still compile and run perfectly, so why didn’t I do that? Because I only need a &lt;em&gt;Printer&lt;/em&gt;, I chose a more general type because I am not sure that I will not change the implementation details of the &lt;em&gt;print()&lt;/em&gt; method in the future. &lt;/p&gt;

&lt;p&gt;It can be argued that if I need to change some details of the print() function, I should just go inside the MultiFunction class and change it, but I would rather not do that for a host of reasons. The most important one being that at some point, some of my codes maybe depending on how I actually implemented the print function inside the MultiFunction class, and if I change that, some parts of the application could break. On the other hand, using the &lt;em&gt;Printer&lt;/em&gt; interface as a type allows me to achieve loose coupling between the Type and its actual implementation. If I need to change some of the details of print() function, I could simply create another class that implements the &lt;em&gt;Printer&lt;/em&gt; type and make that adjustments on the new class. This approach has some level of encapsulation because I am containing the possible (negative) impact of code change. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//If I need to change something on the print function()
class ColorPrinter implements Printer {
	public void print() {
		...
	}
}

Printer printer = new ColorPrinter();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above code shows a possible approach if I really need to make adjustments to the print() function in the future. &lt;/p&gt;

&lt;h3 id=&quot;looking-closely-into-multifunction&quot;&gt;Looking closely into MultiFunction&lt;/h3&gt;

&lt;p&gt;All Java objects will have at least one type, but usually it has more than one. The MultiFunction object we have created actually has five. It is a &lt;em&gt;Copier, Printer, Phone, MultiFunction&lt;/em&gt; and a &lt;em&gt;java.lang.Object&lt;/em&gt;. The Copier, Printer and Phone types are easy to see, they were explicitly implemented by MultiFunction, so that’s three. The fourth one (MultiFunction) is not very obvious, but whenever you create a new class, you are creating a new Type—hence, whatever object you will create out of that class will also bear its type. The fifth one (java.lang.Object) is because no matter what you do, at some point, your class will extend the Object class, either directly or indirectly. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/object-type.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;polymorphism&quot;&gt;Polymorphism&lt;/h3&gt;

&lt;p&gt;You will notice that the MultiFunction object needed to re-define all the methods it has inherited from the three interfaces. We had to re-define &lt;em&gt;print(), copy, answerCall() and dialNumber()&lt;/em&gt;. Re-defining a method in a subtype is called &lt;em&gt;method overriding&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Overriding a method is done in order for the inheriting class to have a chance to define a unique behavior for the method. For example, the MultiFunction object inherited the &lt;em&gt;copy()&lt;/em&gt; from the &lt;em&gt;Copier&lt;/em&gt; interface. What it effectively means is that MultiFunction is making a promise that because it is now a &lt;em&gt;Copier&lt;/em&gt; object, it will respond to the &lt;em&gt;copy()&lt;/em&gt; message if invoked. The Copier interface did not specify any behavior for the method, it is up to the implementing class (MultiFunction) to provide the behavior. The provision of behavior for an inherited method can be done using method overriding.  &lt;/p&gt;

&lt;p&gt;\lstinputlisting [caption=Shape example]
{source/04-OOP/Shape.java}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//Shape.java
interface Shape {
	void draw();
}

class Square implements Shape {
	public void draw() {
		System.out.println(&quot;Drawing a square&quot;);
	}
}

class Circle implements Shape {
	public void draw() {
		System.out.println(&quot;Drawing a circle&quot;);
	}
}

class TestShape {

	public static void main(String[] args) {
		Shape square = new Square();
		Shape circle = new Circle();
		square.draw();
		circle.draw();
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Shape program is a very trivial and non-realistic example, but the simplicity should aid our understanding of why we use overriding. &lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Shape&lt;/em&gt; type could have been written as a class. The &lt;em&gt;Square&lt;/em&gt; and &lt;em&gt;Circle&lt;/em&gt; classes could have &lt;strong&gt;extended&lt;/strong&gt; a Shape class instead of implemented a Shape interface—why didn’t we do that? Because:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Shape is not a real object (even in the real world). Shape is a name we give to describe the contour of something, the state of something—it is not &lt;strong&gt;something&lt;/strong&gt;. Just like &lt;strong&gt;Animal&lt;/strong&gt; is the classification we give to cats and dogs. A cat is a real thing, a dog is a real thing, an animal is not—Animal is a &lt;em&gt;Type&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;If you think about it hard enough, can &lt;em&gt;Shape&lt;/em&gt; really draw something, will it make sense?&lt;/li&gt;
  &lt;li&gt;It makes sense that Circle and Square descend from a common type, after all Circle and Square are—Shapes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;em&gt;draw()&lt;/em&gt; method are both available in Circle and Square, but they have different implementations or behavior (method body). This was possible because we have overriden the draw() method where it makes sense. It makes the \code{draw()} method polymorphic, it changes its behavior depending on which object you are calling it against. &lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;stress&quot;&gt;Bibliography&lt;/span&gt;&amp;lt;p&amp;gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Ivar Jacobson, Rumbaugh, Object Oriented Analysis and Design. 3rd ed, Ad- dison Wesley 1965&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;James Gosling, The Java Programming Language. 3rd ed, 1999.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Control Flow</title>
   <link href="http://thelogbox.com/java-controlling-program-flow"/>
   <updated>2011-11-20T00:00:00+08:00</updated>
   <id>http://thelogbox.com/java-controlling-program-flow</id>
   <content type="html">&lt;p&gt;Your ability to direct and command the flow of control in your program is one of the defining skills for a programmer. There are basically 3 ways that you can arrange the commands in your program code. They are;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You can execute commands one after another – &lt;strong&gt;sequencing&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;You can execute certain commands when certain conditions are met – &lt;strong&gt;branching&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;You can keep on repeating certain commands while certain conditions are still true – &lt;strong&gt;looping or iteration&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;learning-objectives&quot;&gt;LEARNING OBJECTIVES&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Write loops and nested loops&lt;/li&gt;
  &lt;li&gt;Write if conditions and nested if conditions&lt;/li&gt;
  &lt;li&gt;Identify the legal arguments that you can write inside a for loop&lt;/li&gt;
  &lt;li&gt;Identify the legal arguments that you can write inside a while loop&lt;/li&gt;
  &lt;li&gt;identify legal argumentns you can write inside if statements&lt;/li&gt;
  &lt;li&gt;Use the switch statement (when possible) &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;if-statement&quot;&gt;IF statement&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;em&gt;if&lt;/em&gt; statement allows you to conditionally perform some commands. It allows you side-step the main flow of your code. If you remember the flowcharting symbols, when you see the diamond shape, it means you have a fork in the road. When a condition is met, you either go left or right. That is what the &lt;em&gt;if&lt;/em&gt; statement does. It allows you to test for conditions. When the condition is true, you go to the beginning of the if block (the opening curly brace) and begin executing all the statements there until all the statements are exhausted. When you have reached the end of the block (the closing curly brace), then there are no more commands to execute. The flow of control will resume immediately after the end of the curly brace. &lt;/p&gt;

&lt;p&gt;The &lt;em&gt;condition&lt;/em&gt; in the &lt;em&gt;if&lt;/em&gt; statement can be written as expressions that will evaluate to either true or false. This is the most common use you will have of the if statement. On some occassions, you may see the condition written as the literals &lt;em&gt;true&lt;/em&gt; or &lt;em&gt;false&lt;/em&gt; — this is rare, but it will still be a legal code. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GOTCHA&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;but i is equal to one&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you have coded in &lt;strong&gt;C&lt;/strong&gt; before, you might fall into this gotcha. Do not  worry though, Java will not allow you to make a mess like this. This will be caught by the compiler. &lt;/p&gt;

&lt;p&gt;The reason that the gotcha code above is not legal is because &lt;em&gt;i = 1&lt;/em&gt; is not a boolean expression. It is an assignment operation. Java requires that the condition evaluate to either true or false.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;You can put an if statement inside another if statement. You can in fact nest them up pretty deeply. While there is no set limit on how deep you can nest if statements, practical considerations and code readability should knock some sense into your code. &lt;/p&gt;

&lt;p&gt;From my experience, whenever I am treading dangerously deep into a web of if-else-if-else …  I usually take a step back and look if there are other ways of going about routing the program flow. It could be a design or analysis problem already and that using the if-else statement is not the right tool to solve the problem at hand. &lt;/p&gt;

&lt;h1 id=&quot;while-statement&quot;&gt;WHILE statement&lt;/h1&gt;

&lt;p&gt;The &lt;em&gt;while&lt;/em&gt; loop and &lt;em&gt;for&lt;/em&gt; loop may overlap at times because they have a similar function. For a beginner, it may not be quite obvious when to use one and not the other. The basic difference of the two loops though is that;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use the &lt;em&gt;while&lt;/em&gt; loop if you do not know how many times you need to loop&lt;/li&gt;
  &lt;li&gt;Use the &lt;em&gt;for&lt;/em&gt; loop if you actually know how many times you will need to go through the loop&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The canonical form of the &lt;strong&gt;while loop&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;

while(condition) {
  
	statement 1;
	statement 2;
	statement n;

}

&lt;/pre&gt;

&lt;p&gt;The &lt;em&gt;condition&lt;/em&gt; is either a literal (the keywords true or false) or an expression that will evaluate to either true or false (boolean values).&lt;/p&gt;

&lt;p&gt;The basic ideas in the while loop are the following.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The condition is evaluated for the first time, if the condition is true or resolves to true, then;&lt;/li&gt;
  &lt;li&gt;Perform statement 1, then;&lt;/li&gt;
  &lt;li&gt;Perform statement 2, then;&lt;/li&gt;
  &lt;li&gt;Perform statement n, then;&lt;/li&gt;
  &lt;li&gt;The program detects that we are at the end of while block (the closing curly brace is the end of the while block)&lt;/li&gt;
  &lt;li&gt;The program will loop back to the condition and re-evaluate it again, if it still true, then;&lt;/li&gt;
  &lt;li&gt;Perform statement (again)&lt;/li&gt;
  &lt;li&gt;rinse repeat until you get the end of the end of the block again and until you get to re-evaluate the condition (again). &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You will only drop off end of the while block if and when the condition evaluates to false. This is the reason it is best to remember that you need write code inside the while block that will make the condition false at some point in time, lest you end up in a perpetual loop.&lt;/p&gt;

&lt;p&gt;Example code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;While&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    
            &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Like the &lt;em&gt;if&lt;/em&gt; statement, you can also nest a while loop inside another while loop.&lt;/p&gt;

&lt;h1 id=&quot;for-statement&quot;&gt;FOR statement&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beginning&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ending&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;em&gt;for loop&lt;/em&gt; like the &lt;em&gt;while loop&lt;/em&gt; allows you to iterate and perform a group of statements over and over again. The for loop though, allows for more control.  &lt;/p&gt;

&lt;p&gt;A key concept in using the for loop is the counter (the &lt;strong&gt;step&lt;/strong&gt;). Loop will perform all the statements inside the block for a finite and determined number of times. Each time that the whole block is evaluated, the &lt;strong&gt;step&lt;/strong&gt; value is incremented. The incremented step value is then compared to the &lt;strong&gt;ending value&lt;/strong&gt;, and when the ending value is reached, the for loop will then terminate. The program control will fall over to first statement immediately after the for loop block. &lt;/p&gt;

&lt;p&gt;In this example, we print some numeric values from zero (0) to ten (10). This is the exact thing that our &lt;em&gt;while&lt;/em&gt; example was doing earlier.  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;for_sample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;switch-statement&quot;&gt;SWITCH statement&lt;/h1&gt;

&lt;p&gt;When the nature of the decision you need to make is a bit on the fuzzy side, it could be impractical to use the if-statement, for those kinds of decisions, you will use the switch-statement.&lt;/p&gt;

&lt;p&gt;The syntax of the switch statement is;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expression&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;CONSTANTEXPR:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;ENUMCONSTANTNAME:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where expression can either be a char, byte, short, int OR Character, Byte, Short, Integer OR an enum type. By the way, Character is not the same as char, that wasn’t a typo. Character is a Java class which is a wrapper class for the char primitive. &lt;/p&gt;

&lt;p&gt;Let’s take a look at some sample code. The &lt;em&gt;SwitchSample.java&lt;/em&gt; code extracts the &lt;em&gt;Day of Week&lt;/em&gt; value from a Java Calendar object. The Day of Week is returned as integer, which makes it perfect to filter using a Switch statement rather than nested &lt;em&gt;ifs&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SwitchSample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]){&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DAY_OF_WEEK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Sunday&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Monday&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Tuesday&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Wednesday&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Thursday&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Friday&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Saturday&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;What the value really is = &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The switch is really simple to use, just put the expression which you’d like to test as an argument to the switch statement, then have a series of case statements inside the switch body.&lt;/p&gt;

&lt;p&gt;Each case statement corresponds to a value, if the value of the expression is equivalent to a case value, then instructions immediately right after the colon of the case statement will be executed/evaluated, in fact the rest of the statements will be evaluated, all the way down, until it gets to the last instruction at the bottom of the switch statement; that’s not what your intention might be; that is the reason why I put a break statement. Once a case statement evaluates to true, Java blindly executes all the statements after that case, it won’t even bother checking the other cases – so note this, and be careful.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A &lt;em&gt;for loop&lt;/em&gt; within another for loop is useful when you need to work with product of more than one set. That maybe a little vague, I would say – when you need to work with Cartesian products, but I don’t think that will help the vagueness at all. Let me try again. &lt;/p&gt;

&lt;p&gt;Imagine the multiplication table, if we were to generate the multiplication table, the size of which is 3 rows by 5 columns, it would look like this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1  2  3  4  5  6 
2  4  6  8  10 12   
3  6  9  12 15 18
4  8  12 16 20 24
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We all know how to do this arithmetically, but if we were to write a code for this using Java, it may stomp us for a little while. Look closely though and you will start to see a plan of attack. That is, if I write a &lt;em&gt;for loop&lt;/em&gt; to walk through the values of the first column (1..6), it would look like.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let’s make a minor change on the statement inside the &lt;em&gt;for loop&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This does not really change our output arithmetically, anything multiplied by 1 is equal to itself. This small modification though gives us further insight into our Cartesian problem and one step closer to the solution.&lt;/p&gt;

&lt;p&gt;We can programatically increase the value of the multiplier by one, which then allows us to generate the values for the rows (2..4). We can use another loop inside the first &lt;em&gt;for loop&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;break-and-continue&quot;&gt;BREAK AND CONTINUE&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;break&lt;/strong&gt; and &lt;strong&gt;continue&lt;/strong&gt; keywords disrupts program flow inside loops, whether the for-loop or while-loop. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;break&lt;/strong&gt; statement causes the program flow inside a block to forcibly exit (whether for-loop or while-loop). In example code above, as soon as the &lt;strong&gt;break&lt;/strong&gt; statement is encountered, the program control will ignore statement 3 and 4. The while loop will go out of scope and program control will be transferred to the first executable statement immediately after the while block – in this case, statement 5.  &lt;/p&gt;

&lt;p&gt;You normally will not use the &lt;strong&gt;break&lt;/strong&gt; statement in this fashion because it doesn’t make sense. This statement is usually deployed with more logic finesse. Let me show you an example.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;someCondition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;	

	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is a more likely use of the &lt;strong&gt;break&lt;/strong&gt; statement. I should warn you though that this is a frowned upon practice. A truly structured programming should have only one entry point and one exit point. Because of the introduction the &lt;strong&gt;break&lt;/strong&gt; statement, our control structure now has one entry point and two exit points.  &lt;/p&gt;

&lt;p&gt;While this code is innocent enough right now, it could get very hairy and complicated. You will appreciate following the 1-entry-1-exit rule when you have had your fair share of debugging someone else’s code and you are wading through a maze of nested structures with lots of breaks peppered into the source code. &lt;/p&gt;

&lt;p&gt;Next is the &lt;strong&gt;continue&lt;/strong&gt; keyword. Here is how it behaves.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When the &lt;strong&gt;continue&lt;/strong&gt; statement is encountered, statements 3 and 4 will be ignored (just like how it was with the break). Unlike the case in &lt;strong&gt;break&lt;/strong&gt; though, the loop will not go out of scope and will not be immediately terminated.  &lt;/p&gt;

&lt;p&gt;What the continue statement will do is to go back to the beginning of the loop and forcibly re-evaluate condition. If the condition is still true, then the loop continues normally.  &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Beginning to Program Java</title>
   <link href="http://thelogbox.com/java/java-beginning-to-program"/>
   <updated>2011-11-11T00:00:00+08:00</updated>
   <id>http://thelogbox.com/java/java-beginning-to-program</id>
   <content type="html">&lt;p&gt;Head over to &lt;a href=&quot;/java-tutorial/&quot;&gt;Java Beginnning to Program&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Free eBook</title>
   <link href="http://thelogbox.com/free-resource-java-shooters-pdf"/>
   <updated>2011-11-06T00:00:00+08:00</updated>
   <id>http://thelogbox.com/free-resource-java-shooters-pdf</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;DOWNLOAD HERE&lt;/strong&gt; &lt;a href=&quot;https://docs.google.com/file/d/0B9KzAAnwByp8N1ZmMkY5WG9Jc1E/edit?usp=sharing&quot;&gt;Java Shooters PDF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Java Shooters is an introduction to the Java programming language. The examples and concepts are based upon JSE 1.6.&lt;/p&gt;

&lt;p&gt;About the name, it is called Shooters because like the alcoholic drink that is typically drank in 1.5 ounces shot-glass, the key concepts are meant to be ‘drank’ quickly in one fell swoop. It is not meant to be a lengthy or exhaustive introduction to the Java programming language. It is meant to be read as a first book in Java, without the terse and cryptic explanations of the concepts that usually trips up beginning programmers.&lt;/p&gt;

&lt;p&gt;Java Shooters is not a Nutshell book, I did not list all the possible API calls (nor was it my intention to do so). I also downplayed the edge conditions of a lot of things in Java, i.e . class fundamentals , conditions when the double equal not work should with Strings but it does anyway due to some concepts about pools — things like that, I left out. If you need (or want) to find out things like that, may I point you to the The Java Language Specification (it is on the Bibliography) or an SCJP preparation book perhaps.&lt;/p&gt;

&lt;p&gt;The purpose of the material is to be up and running as quickly as possible, coding only the happy thoughts of Java programming. I did put some cautions and warnings when I think that when I think that it could be a huge blunder to ignore it. This approach allowed for a leaner and shorter material that will (hopefully) enable a beginning programmer to pick up the Java language. This material was originally intended to be read by programmers who would like to go to Android application development but lack the necessary Java foundations. That was precisely the reason why eliminated some aspects of Java programming that I thought would not be necessary for Android.&lt;/p&gt;

&lt;p&gt;Java Shooters has been released early, with missing chapters actually, because the material needs feedback. I will be happy to hear ways on how to improve this. In Agile software development, there is a concept of release-early, release-frequent—I thought that might work for Java-Shooters as well.&lt;/p&gt;

&lt;p&gt;Lastly, Java Shooters is free. It is licensed under Creative Commons Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License. You can use it for any purpose except commercial ones. If you do find a use for the material, I would appreciate if you drop me a note.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Install Parse Failed Error</title>
   <link href="http://thelogbox.com/android-error-install-parse-failed"/>
   <updated>2011-10-25T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-error-install-parse-failed</id>
   <content type="html">&lt;p&gt;&lt;em&gt;Failure [INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This error can happen when you have used an Android device on a different development machine. There is a signature on the device that came from the old development machine, that is the one getting in the way.  &lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;Just delete the Android applications that are installed on the device which came from your old development machine, then try to rebuild — &lt;span class=&quot;codeblock&quot;&gt; ant release install&lt;/span&gt; or &lt;span class=&quot;codeblock&quot;&gt; ant debug install &lt;/span&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Install MySQL on OSX</title>
   <link href="http://thelogbox.com/installing-mysql-osx-lion"/>
   <updated>2011-10-11T00:00:00+08:00</updated>
   <id>http://thelogbox.com/installing-mysql-osx-lion</id>
   <content type="html">&lt;p&gt;MySQL Installations on OSX Leopard, Snow Leopard, Lion and Mountain Lion have been pretty straightforward using the packaged installed from the &lt;a href=&quot;http://dev.mysql.com/downloads/&quot;&gt;MySQL developer website&lt;/a&gt;. All you need to do is to download the package, run the package and the start the MySQL server using the tools provided on &lt;strong&gt;System Preferences&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;In OSX 10.10, the packaged installer of MySQL is with a slight hiccup. Yosemite will report that the installation has failed. It will show you a window stating that it was not able to complete the installation. But in fact, it got installed. The hiccup might be fixed in the future. For now, just go to the Mac System Preferences, find the MySQL menu and start it.&lt;/p&gt;

&lt;p&gt;If you have &lt;strong&gt;HomeBrew&lt;/strong&gt; in your system, you can also install mysql that way.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install mysql*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If what you have is &lt;strong&gt;MacPorts&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo port install mysql*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In most occassions, these installers will create a symlink of the &lt;strong&gt;mysql&lt;/strong&gt; command in the usual search paths of OSX. Just in case the symlinks were not created, you can include the mysql tools to your system path. Edit &lt;strong&gt;~/.bash_profile&lt;/strong&gt; or &lt;strong&gt;~/.profile&lt;/strong&gt; and add the following entries&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PATH=PATH$:/usr/local/mysql/bin:.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Close the terminal window and re-open it so that the new entries in bash_profile or profile will be read and properly exported to your shell environment.&lt;/p&gt;

&lt;h2 id=&quot;using-mysql&quot;&gt;Using MySQL&lt;/h2&gt;

&lt;p&gt;The server is not started by default. There is a utility in the &lt;strong&gt;System Preferences&lt;/strong&gt; right at the bottom part of the screen. Use it to start and stop MySQL server &lt;/p&gt;

&lt;p&gt;From a terminal window, use the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press &lt;strong&gt;RET&lt;/strong&gt;. The default installation of MySQL has a blank password for the root user.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Android Virtual Device</title>
   <link href="http://thelogbox.com/android-virtual-device"/>
   <updated>2011-08-12T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-virtual-device</id>
   <content type="html">&lt;p&gt;You can create an AVD for any android version provided that you have downloaded a system image for it. System images can be downloaded using the android sdk manager.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Check your available android images&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can create an emulator for a specific android version only if you have downloaded a system image for it. You can list the available system images that are installed in your development machine by running the following command in a terminal window &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;android list targets
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;strong&gt;list targets&lt;/strong&gt; command will output libraries and system images of all available android versions installed on your machine. Below is a snippet of what the command has outputted.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;id: 11 or &quot;android-19&quot;
     Name: Android 4.4.2
     Type: Platform
     API level: 19
     Revision: 4
     Skins: HVGA, QVGA, WQVGA400, WQVGA432, WSVGA, WVGA800 (default), WVGA854, WXGA720, WXGA800, WXGA800-7in
 Tag/ABIs : default/armeabi-v7a, default/x86
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The system image you are looking for is usually on the &lt;strong&gt;ABI&lt;/strong&gt; line. In the example snippet above, it means I have the libraries to develop an application for API level 19, the KitKat version and that I also have two system images for it, the armeabi-v7a and the x86. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Decide which version of android&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.1 Create the AVD&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;android create avd --name kitkat --target android-19 --abi default/x86
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command will create an emulator for android level 19. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–name&lt;/strong&gt; The name option is something that you choose. It will become the label of the emulator. I chose “kitkat” because it is descriptive, after all, we are creating an emulator for the KitKat version of android&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–target&lt;/strong&gt; This refers to the id of the android library as it is stored in your machine. You will get this from the output of the &lt;strong&gt;android list targets&lt;/strong&gt; command. In our example, the target is android-19 which is the KitKat version &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–abi&lt;/strong&gt; This refers to the name of the system image. You will also get this from the output of &lt;strong&gt;android list targets&lt;/strong&gt; command. In our case, we chose to use the default/x86 which is an Intel image&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;create avd&lt;/strong&gt; command has a couple more options we can use, but we only used three of them here. You can pass other options that will affect things like skin and the amount of sd card storage. You can learn the other options of this command by typing &lt;strong&gt;android create avd&lt;/strong&gt; in a terminal window. That will display a help file.&lt;/p&gt;

&lt;p&gt;If you need to create an emulator for another android version, just follow these steps all over again.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.2 Download System Images&lt;/strong&gt; if necessary&lt;/p&gt;

&lt;p&gt;If you need additional android versions and system images, use the sdk manager to download them. Launch the android sdk manager. Chose the android version or API level you want to download. Mark it for installation &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/sdk-manager-system-image.png&quot; alt=&quot;PIC sdk manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the “Install” button. You will need to accept the license agreements before you can continue to download.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Another Way to Create an Emulator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Alternatively, we can also create an avd using graphical tool of the android sdk manager. Launch the sdk manager like you did before, click &lt;strong&gt;Tools&lt;/strong&gt; → &lt;strong&gt;Manage AVDs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/avd-creation.png&quot; alt=&quot;PIC manage avds&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can test the emulator by launching it either from the terminal window or from the graphical avd tool&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;emulator -avd kitkat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;strong&gt;-avd&lt;/strong&gt; name is the value you specified as the &lt;strong&gt;–name&lt;/strong&gt; value when you created the emulator.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/avd-launched.png&quot; alt=&quot;PIC avd launched&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Setting Up a Physical Device for Testing</title>
   <link href="http://thelogbox.com/android-physical-device"/>
   <updated>2011-08-12T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-physical-device</id>
   <content type="html">&lt;p&gt;The use of an actual android device during development and testing has many advantages over simply using an emulator or the avd. There are things you cannot test on the emulator like the accelerometer or testing the cellular data connection. Another big reason for using an actual device is that it gives you better appreciation of how the real app will look and feel. &lt;/p&gt;

&lt;h2 id=&quot;samsung-galaxy-tab&quot;&gt;1 Samsung Galaxy Tab&lt;/h2&gt;

&lt;p&gt;1.1 &lt;strong&gt;Disconnect the android device&lt;/strong&gt; from the PC&lt;/p&gt;

&lt;p&gt;1.2 &lt;strong&gt;Go to Settings&lt;/strong&gt; → Applications → Development&lt;/p&gt;

&lt;p&gt;1.3 &lt;strong&gt;Enable USB Debugging&lt;/strong&gt;. This is usually a check box &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/img/usb-debugging.png&quot;&gt;PIC: USB Dev Settings for Samsung Galaxy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1.4 &lt;strong&gt;Connect the device to the PC&lt;/strong&gt; to start development and testing&lt;/p&gt;

&lt;h2 id=&quot;lg-optimus&quot;&gt;2 LG Optimus&lt;/h2&gt;

&lt;p&gt;On some android devices, the steps could be slightly different from the ones above. On an LG Optimus device for example, the steps are as follows.&lt;/p&gt;

&lt;p&gt;2.1 &lt;strong&gt;Go to Settings&lt;/strong&gt; → Connection, then tap &lt;strong&gt;USB Connection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2.2 Choose &lt;strong&gt;Charge only&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2.3 &lt;strong&gt;Go back&lt;/strong&gt; to the Settings screen&lt;/p&gt;

&lt;p&gt;2.4 Enable &lt;strong&gt;USB Debugging&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;You need to do this while the device is disconnected from the PC otherwise, this option will be greyed out which means it is not possible to make any modification on the setting&lt;/p&gt;

&lt;h2 id=&quot;testing&quot;&gt;3 Testing&lt;/h2&gt;

&lt;p&gt;Once you have connected the device the PC, you can run a command on a terminal window to check if the device will be recognized by the android tool. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;adb logcat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the device is recognized by the android tools, a bunch of messages will hurriedly scroll through your terminal window. You can stop it by pressing &lt;strong&gt;CTRL C&lt;/strong&gt;. If the device was not recognized, you will see a message saying “waiting for the device”.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Getting Started</title>
   <link href="http://thelogbox.com/android-getting-started"/>
   <updated>2011-08-12T00:00:00+08:00</updated>
   <id>http://thelogbox.com/android-getting-started</id>
   <content type="html">&lt;p&gt;One of the best, if not the best way to learn something is to start doing it. Get your feet wet. Your hands dirty, so to speak.&lt;/p&gt;

&lt;p&gt;What will happen in the next couple of minutes, maybe hours is  that you will read some code, some theories, some explanations. Not all of them will make sense, not all at once. That’s okay. You’re not alone on that one. Most people who are not at genius level go through that learning experience. There is confusion, maybe even frustration. You cannot dodge that, that’s part of the learning experience. Recognizing that difficulty, I thought it might serve us better to start with really simple constructions, they maybe useless pieces of code, something you won’t even use in production. These sample codes may not be industrial strength, but they are not meant to be. Simple examples ease our brain into the subject. That’s the goal.&lt;/p&gt;

&lt;p&gt;We will still do the &lt;strong&gt;Hello World&lt;/strong&gt; example, not really to observe the time honoured tradition of the &lt;em&gt;C Programming Language&lt;/em&gt;, but because it is the simplest example that we first have to hurdle.&lt;/p&gt;

&lt;p&gt;The Hello World in Android is way more involved than simply creating a basic class, defining a static main() and invoking the out.println(). It is way more involved than that. You will need to create an &lt;em&gt;Activity&lt;/em&gt; object, override its &lt;em&gt;onCreate()&lt;/em&gt; method, invoke the &lt;em&gt;ant&lt;/em&gt; build tool, define an AVD (Android Virtual Device) and install the &lt;em&gt;.apk&lt;/em&gt; (Android Package) either into the AVD or a physical Android Device. That’s how messy the &lt;strong&gt;Hello World&lt;/strong&gt; program is in Android. Be mindful that you are not writing desktop programs, you are writing mobile applications. You maybe familiar with the language — Java — but the tools and programming workflow are different.&lt;/p&gt;

&lt;h1 id=&quot;the-hello-world-project&quot;&gt;The Hello World project&lt;/h1&gt;

&lt;p&gt;We need to create a project. An Android project is a collection of files which are structured and nested in a very specific way so that the build tools can work with them properly. This is the reason why it is not advisable to build the structure by hand, manually. Use the SDK tools.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir workarea
cd workarea
android create project --target 8 path first --activity First --package com.thelogbox 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the Android SDK tools were properly installed, that last command should complete without problems and it would have created a folder named &lt;em&gt;first&lt;/em&gt; on the current directory. If you get an error such as &lt;em&gt;Bad command or filename&lt;/em&gt; or &lt;em&gt;command not found&lt;/em&gt; or something to that effect, that is your just OS telling you that the &lt;strong&gt;android&lt;/strong&gt; executable is not properly setup. Check your installation and configuration. See if the &lt;em&gt;android tools&lt;/em&gt; and &lt;em&gt;android platform tools&lt;/em&gt; are in your &lt;em&gt;SYSTEM PATH&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The folder structure of an android project is shown below&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;default&quot; src=&quot;/img/android-project-structure.png&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-to-create-a-project&quot;&gt;How to create a project&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;–target&lt;/strong&gt; expects an integer value. This value stands for a unique API level for a specific android version. In our example above, level 8 was specified because I intend to target android 2.2 (Froyo). Gingerbread will have a different value, Honeycomb, ICS and Jekllybean will have a different ones as well. &lt;/p&gt;

&lt;aside&gt;
If you want to see all the possible targets, you can type &lt;code class=&quot;codeblock&quot;&gt;android list targets&lt;/code&gt;
&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;–path&lt;/strong&gt; specifies the name of top level folder for your project. Think of it as a project folder. It will be the root directory of your project&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–activity&lt;/strong&gt; will cause our project to create a class that extends from the the Activity class. An Activity is commonly used if we need a user-facing class. Think of it as UI 2 mechanism in android. In our example, &lt;code class=&quot;codeblock&quot;&gt;--activity First&lt;/code&gt; means that our project will have class named First and is a child class of the base class Activity&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–package&lt;/strong&gt; an android project will be comprised of various XML files, resource files and Java source files. The Java source files will be stored using the package directive that we specify in the option. The package directive will only affect the location of Java source files, it will not affect the location and storage of the other android resources (i.e. XML files)&lt;/p&gt;

&lt;h1 id=&quot;how-to-test-and-run&quot;&gt;How to test and run&lt;/h1&gt;

&lt;p&gt;On the command terminal, make sure you are at root directory of the project, run the command &lt;code class=&quot;codeblock&quot;&gt;ant debug install&lt;/code&gt;. That should compile, build then install the empty project we just created.&lt;/p&gt;

&lt;p&gt;Just in case you wondered why use &lt;code class=&quot;codeblock&quot;&gt;ant debug install&lt;/code&gt; instead of simply &lt;code class=&quot;codeblock&quot;&gt;ant install&lt;/code&gt;. We used the &lt;em&gt;debug target&lt;/em&gt; so that we can side step Android’s requirement to setup security keys and signing our applications with that key. Let’s deal with the application signing later on when we get to deploying and releasing our mobile app into the wild.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;debug target&lt;/em&gt; of ANT generated a debug key that served as the security key for our app. This is good enough for now because we are just trying to get our feet wet. If you release your real app, you should generate real security keys and signature.&lt;/p&gt;

&lt;p&gt;You should see a bunch of scrolling echo messages in the terminal. Look for a message (right towards the end) that says something like &lt;em&gt;BUILD SUCCESSFUL&lt;/em&gt;. It should be successful for now because we haven’t messed around with it yet. There is no reason at this point for the build to fail. &lt;/p&gt;

&lt;p&gt;Right after the compilation process, there are lots of changes within our project directory. Quite noticeably, there are now lots of files inside the &lt;strong&gt;bin&lt;/strong&gt; and &lt;strong&gt;gen&lt;/strong&gt; folders. Somewhere in these jungle lies the executables that we can actually deploy to a real device — but save that for later. Right now, the goal is to just be comfortable with the project creation, compilation and deployment process. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Setting Up the Development Environment</title>
   <link href="http://thelogbox.com/installing-android-sdk"/>
   <updated>2011-08-11T00:00:00+08:00</updated>
   <id>http://thelogbox.com/installing-android-sdk</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Download the &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;Android SDK from android.developer.com&lt;/a&gt;. Choose your platform. In my case, it was a zipped file&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Place the unzipped file somewhere in your directories. It is best not to put in a directory that contains white space. I placed mine inside /Users/myname/prgtools/android-sdk (this is your ANDROID-HOME)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Go to your ANDROID-HOME/tools, launch the  &lt;code class=&quot;codeblock&quot;&gt;android&lt;/code&gt; executable. This will launch the Android SDK Manager. The android SDK needs an internet connection. It connects to the android.developer.com website and checks which SDK levels are installed in your machine. Naturally, if you have installed the SDK, there won’t be much. Choose the API levels that you would like to install in your machine.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each version or platform of Android (Froyo, Gingerbread etc) is a numbered API level. If you want to install the Froyo SDK, for example, then check the box next to API level 8 (Android version 2.2). If you have really fast internet connection and you are not sure which API to check, check them all—be warned though, you will wait for a long time for it to finish.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Include the android tools and platform tools in your shell’s path. You will need it if you want to work with android using the command line. The two folders of interest are &lt;strong&gt;ANDROID-HOME/tools&lt;/strong&gt; and &lt;strong&gt;ANDROID-HOME/platform-tools&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In OSX, you can add the following entries in th &lt;em&gt;~/.bash_profile&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export ANDROID_HOME=/path/to/android-sdk
export PATH=$PATH:$ANDROID_HOME/tools:.
export PATH=$PATH:$ANDROID_HOME/platform-tools:.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In Linux, add the following lines to &lt;em&gt;~/.bashrc&lt;/em&gt;, if you are using bash&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export ANDROID_HOME=/path/to/android-sdk
export PATH=$PATH:$ANDROID_HOME/tools:.
export PATH=$PATH:$ANDROID_HOME/platform-tools:.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Close the terminal, then launch it again in order to reflect the changes we made to the PATH variable. Try to type &lt;strong&gt;android&lt;/strong&gt; from the command line. If it launches the android SDK manager, then you have set the android paths correctly.&lt;/p&gt;

&lt;p&gt;If you are using Eclipse, see the steps on &lt;a href=&quot;/android-install-eclipse-plugin/&quot;&gt;how to configure android for eclipse&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Connect to Ubuntu Remote Desktop (Windows)</title>
   <link href="http://thelogbox.com/remote-desktop-to-ubuntu-from-windows"/>
   <updated>2010-10-27T00:00:00+08:00</updated>
   <id>http://thelogbox.com/remote-desktop-to-ubuntu-from-windows</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;Get the &lt;em&gt;tsclient&lt;/em&gt;. &lt;code class=&quot;codeblock&quot;&gt;$ sudo apt-get install xnest&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Enable xdmcp. Edit &lt;em&gt;/etc/gdm/gdm.conf&lt;/em&gt; – &lt;em&gt;$ sudo nano /etc/gdm/gdm,conf&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Uncomment &lt;em&gt;RemoteGreeter&lt;/em&gt; in the daemon section – delete the pound or sharp sign on the RemoteGreeter&lt;/li&gt;
  &lt;li&gt;Find the &lt;em&gt;xdmcp section&lt;/em&gt;. Under the xdmcp section, change the value of &lt;em&gt;Enable&lt;/em&gt; key, set it to &lt;em&gt;true&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Log out of Ubuntu in order to restart the &lt;em&gt;gdm&lt;/em&gt;. If you don’t want to logout, from the Terminal. &lt;code class=&quot;codeblock&quot;&gt;$ sudo /etc/init.d/gdm restart&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can now connect from your Windows machine to an Ubuntu machine using Remote Desktop Protocol&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Google Tasks</title>
   <link href="http://thelogbox.com/viewing-google-tasks"/>
   <updated>2010-10-26T00:00:00+08:00</updated>
   <id>http://thelogbox.com/viewing-google-tasks</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;Via &lt;a href=&quot;http://snippage.gabocorp.com&quot;&gt;Snippage&lt;/a&gt; - This is not a specific application written for Google Tasks. It actually can produce an application out of any web page. I have never been a big fan of these things, but if you are …&lt;/li&gt;
  &lt;li&gt;While in Gmail (Of course!) - but I don’t want to leave my Mail.app – so no.&lt;/li&gt;
  &lt;li&gt;Get a FireFox side bar (FireFox addon) - I am not a big fan of this either&lt;/li&gt;
  &lt;li&gt;in iGoogle, the GTasks is a gadget – not a big fan of this, moving on…&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Access the Google Tasks url directly&lt;/strong&gt; – hmmm, this can work. I can set the url of the browser to &lt;strong&gt;https://mail.google.com/tasks/ig&lt;/strong&gt;, then set the browser full screen. I think this can really work.  &lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Automatic Backup of MySQL</title>
   <link href="http://thelogbox.com/automatically-backup-mysql-database"/>
   <updated>2010-10-01T00:00:00+08:00</updated>
   <id>http://thelogbox.com/automatically-backup-mysql-database</id>
   <content type="html">&lt;p&gt;The key command we need is &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo mysqldump -u UserName -p --all-databases &amp;gt; /path/to/file.backup 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;em&gt;–all-databases&lt;/em&gt; flag will back up everything inside of the MySQL instance. If you don’t want to backup everything, specify the database name(s) instead of backing up everything.&lt;/p&gt;

&lt;p&gt;The result of &lt;em&gt;mysqldump&lt;/em&gt; is a series of SQL commands that contains both the structure and contents of the database.&lt;/p&gt;

&lt;h2 id=&quot;how-to-restore&quot;&gt;How to Restore&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ mysql -u UserName -p

mysql &amp;gt; create database name_of_name_database
mysql &amp;gt; use name_of_new_database
mysql &amp;gt; .\file.backup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some extra things you can do to make this a bit more robust.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Put this command in a cron job&lt;/li&gt;
  &lt;li&gt;Refine by gzipping redirected text-output&lt;/li&gt;
  &lt;li&gt;Refine further by adding time stamp to the backup files&lt;/li&gt;
  &lt;li&gt;Refine by setting up Rsync to work with this backup approach&lt;/li&gt;
  &lt;li&gt;I could actually put backup file inside DropBox, then I won’t need rsync. However, mostly likely, if the installation is enterprise grade, chances are the Dropbox code won’t be an option&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Wireless Linux Music Player</title>
   <link href="http://thelogbox.com/wireless-linux-music-player"/>
   <updated>2010-04-06T00:00:00+08:00</updated>
   <id>http://thelogbox.com/wireless-linux-music-player</id>
   <content type="html">&lt;p&gt;This project will let you control a music player daemon running on a Linux box. The Linux box (headphone jack) will be connected into a stereo receiver (input) — It’s an over engineered music player. But if you don’t have anything better to do with an old notebook, this might save it from the junk yard.&lt;/p&gt;

&lt;p&gt;For this project, I used 1) an old notebook with WiFi still working 2) an old stereo receiver with 3.5mm stereo jack input &lt;/p&gt;

&lt;h2 id=&quot;installation-and-configuration&quot;&gt;Installation and Configuration&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Get the &lt;strong&gt;MPD&lt;/strong&gt; (Music Player Daemon) – &lt;em&gt;$ sudo apt-get install mpd mpc&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Edit the configuration file – &lt;em&gt;$ sudo nano /etc/mpd.conf&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Find the entry on the conf file where you are supposed to point to where you music files are&lt;/li&gt;
  &lt;li&gt;Press &lt;em&gt;CTRL-o&lt;/em&gt; then &lt;em&gt;CTRL-x&lt;/em&gt; when you are done making the changes (that is how to save files in nano&lt;/li&gt;
  &lt;li&gt;Restart the Music Player Daemon – &lt;em&gt;$ sudo /etc/init.d/mpd restart&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Create the database for the first time to add all songs to the playlist – &lt;em&gt;$ sudo mpd –create-db&lt;/em&gt; then &lt;em&gt;$ sudo mpd add l&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Install MPD clients on your other computers. At the time I wrote this, I used &lt;strong&gt;ncmpc&lt;/strong&gt;. Lots of things has changed since then, Wikia.com has a list of &lt;a href=&quot;http://mpd.wikia.com./wiki/Clients&quot;&gt;MPD clients&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>File Sharing between OSX and Linux</title>
   <link href="http://thelogbox.com/file-sharing-osx-linux"/>
   <updated>2009-11-22T00:00:00+08:00</updated>
   <id>http://thelogbox.com/file-sharing-osx-linux</id>
   <content type="html">&lt;p&gt;Plenty of ways to share files between Linux and Mac, after all, they are brethrens because of their UNIX nature – I would have said lineage but that may be contestable by the purists. After all, I am not an expert on UNIX history.&lt;/p&gt;

&lt;p&gt;History and purity aside, some of the ways of sharing files between these two systems are;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;CIFS or SMB (Samba)&lt;/strong&gt;, Common Internet File System or Server Message Block, respectively. The Mac comes with smb out of the box, but the Linux side of the fence is not so predictable. It depends on what Linux distribution you have used and the installation route that you took. You may have to install some software on the Linux side&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SCP or SFTP&lt;/strong&gt;. Again, the Mac comes with the SSH swiss knife out of the box. On Linux, you may have to install the SSH software as an add-on
+. The very reliable &lt;em&gt;FTP&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;RSync&lt;/strong&gt;. A quick way to bring two file systems into sync (as the name implies). RSync is a bit different from the others mentioned here because you mostly employ this system on situations where you need one file system or folder to be perfect clone or mirror of another&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;NFS&lt;/strong&gt;, short for Network File Share – There are plenty of Linux distributions to use but for the purpose of this guide, Debian has been chosen (which means this installation is very similar if you are using Ubuntu or any of its derivatives)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AFP&lt;/strong&gt; Apple File Protocol&lt;/li&gt;
  &lt;li&gt;And of course, probably the easiest of all &lt;strong&gt;DropBox&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;use-linux-as-the-samba-smb-server&quot;&gt;1. Use Linux as the Samba (SMB) server&lt;/h2&gt;

&lt;p&gt;You need to be a bit comfortable working with the Linux terminal in order to perform most of these exercises. While there are methods perform these administrative tasks using some GUI tools (like SWAT), it much more straightforward to do them in the Terminal). Any terminal should be okay like xTerm, rTerm, Terminator or Gnome-Terminal. In the sections ahead, I will no longer mention that the highlighted commands should be performed on the Terminal because all of them will be.&lt;/p&gt;

&lt;h3 id=&quot;preparing-what-we-need-to-get-samba-up-and-running&quot;&gt;Preparing what we need to get Samba up and running&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Get Samba from the repositories1&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install samba smbfs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Edit the Samba configuration file&lt;/strong&gt;, it’s found under &lt;em&gt;/etc/samba/smb.conf&lt;/em&gt;. A bit of a tip, it’s easier to start with a clean slate of smb.conf than to edit the original configuration file – that way, if you mess the configuration, you can always go back to a fresh, untouched config file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /etc/samba
$ sudo mv smb.conf smb.conf.original
$ sudo touch smb.conf
$ sudo nano smb.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;em&gt;mv(move)&lt;/em&gt; command renames smb.conf to smb.conf.original. The &lt;em&gt;touch&lt;/em&gt; command creates a file called smb.conf – a blank one; And nano, opens smb.conf for editing, you don’t really have to use nano if you are comfortable with another text editor, just use what you like.&lt;/p&gt;

&lt;p&gt;Starting with a blank samba configuration file is both intimidating (if you are not used to it) and liberating (if you have done this quite a couple of times). A very basic file share in samba needs the following lines&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;security=user
username map=/etc/samba/smbusers

[homes]
comment=Home Directories
browseable=yes
writable=yes
valid=%S ; so that only the defined users can view it
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;security=user&lt;/strong&gt; means that samba will allow access only to the users that you (will) define in &lt;em&gt;/etc/samba/smbusers&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;username map=/etc/samba/smbusers&lt;/strong&gt; means that a samba user defined in the file &lt;em&gt;smbusers&lt;/em&gt; also have a shell account (the user can login to your linux box and has an entry on the /home/ folder. If you need to check if the user(s) you are defining has a shell account, you can use the command &lt;strong&gt;$ sudo id NameOfUser&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The lines after ‘[home]’ defines which folders Windows users can see, access, and write to, the rest is self explanatory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Save the smb.conf&lt;/strong&gt;. If you use the nano editor &lt;em&gt;CTRL-O then CTRL-X&lt;/em&gt;, ctrl-O saves the file in nano, ctrl-X exits nano.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create the Linux shell account for your users&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo adduser firstuser
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will be asked to input a password for firstuser, and a couple more more information that you might have enter. After the creation dialog has finished, make sure that the user has been successfully created by typing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo id firstuser
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you don’t see “no such user”, you’re in good shape. Just repeat step #5 for every shell account you want to create, say “seconduser”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create and populate the smbusers file&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /etc/samba
$ sudo touch smbusers
$ sudo nano smbusers
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Map the Linux shell account to the Samba account&lt;/strong&gt;, this is the content of the &lt;em&gt;/etc/samba/smbusers&lt;/em&gt; file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;firstuser=firstuser
seconduser=seconduser
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Set the samba password for the user&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A user’s password in samba is not the same as the user’s shell account password (the password to login to the Linux box), Both passwords can be identical though if you choose to, but they don’t have to be.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo smbpasswd -a firstuser
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will be asked for a password – twice! The -a option in smbpasswd means that the firstuser password will be added to /etc/samba/smbpasswd file. The shell accoun for &lt;em&gt;firstuser&lt;/em&gt; should already exist, otherwise the smbpasswd will fail.&lt;/p&gt;

&lt;p&gt;Reboot; &lt;strong&gt;$ sudo reboot&lt;/strong&gt; should do it.&lt;/p&gt;

&lt;p&gt;In your Mac, you should be able to see the name of Samba server in your &lt;em&gt;Finder&lt;/em&gt;. If you are using Windows, the file server should be visible in the &lt;em&gt;Network&lt;/em&gt; places.&lt;/p&gt;

&lt;p&gt;Samba will challenge you for your username and password, what it is asking for is the username and password entry in the &lt;em&gt;/etc/samba/smbusers&lt;/em&gt; and not your shell account username/password – This is why it is a good idea to keep the shell account credentials and smbusers credentials identical.&lt;/p&gt;

&lt;h2 id=&quot;scp-secure-copy-and-sftp-secure-ftp&quot;&gt;2. SCP (Secure copy) and SFTP (Secure FTP)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Install SSH on the Linux end&lt;/strong&gt; if it doesn’t have it yet.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get upgrade
$ sudo apt-get install ssh openssh-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To copy one file from the Mac to the Linux server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ scp path/to/file linuxUserName@LinuxServer:/path/to/linux/destination/FILENAME-TO-COPY
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Replace &lt;em&gt;path/to/file&lt;/em&gt; with the folder path and file to copy. This is why it is a good idea to be verbose when doing this kind of stuff. You should &lt;em&gt;cd&lt;/em&gt; first to the directory where the source file (file to be copied) is before performing the above command.&lt;/p&gt;

&lt;p&gt;Replace &lt;em&gt;linuxUsername&lt;/em&gt; with your shell account in Linux. The &lt;em&gt;LinuxServer&lt;/em&gt; is either the name or IP address of your Linux server&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SFTP&lt;/strong&gt; is much easier to do from a Mac. Get either &lt;a href=&quot;http://cyberduck.sh&quot;&gt;CyberDuck&lt;/a&gt; or &lt;a href=&quot;http://filezilla-project.org&quot;&gt;FileZilla&lt;/a&gt; for your Mac. Open a connection, use your linux username on the &lt;em&gt;username&lt;/em&gt; textfield. Use the &lt;em&gt;linuxName&lt;/em&gt; or &lt;em&gt;IpAddress&lt;/em&gt; on the hostname textfield &lt;strong&gt;AND&lt;/strong&gt; don’t forget to enter &lt;strong&gt;22&lt;/strong&gt; on the port number – That is what makes SFTP different from regular FTP. Regular FTP uses &lt;em&gt;port # 21&lt;/em&gt; while SFTP ues &lt;em&gt;port number 22&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;The rest of the file copying/moving is the same as that of regular FTP.&lt;/p&gt;

&lt;h2 id=&quot;rsync&quot;&gt;3. RSync&lt;/h2&gt;

&lt;p&gt;RSync is a bit different from the rest of file sharing methods discussed here. The other file sharing methods does not require nor result in two file locations having exactly the same content . RSync is actually inteded for mirroring purposes, and because of that characteristic, it is more akin to software like &lt;a href=&quot;http://www.amanda.org&quot;&gt;amanda&lt;/a&gt;, &lt;a href=&quot;http://www.drbd.org&quot;&gt;drbd&lt;/a&gt; and &lt;a href=&quot;http://code.google.com/p/lsyncd/&quot;&gt;lsync&lt;/a&gt; to name a few – of course there are more. &lt;/p&gt;

&lt;h3 id=&quot;get-a-basic-rsync-running-on-a-linux-server&quot;&gt;Get a basic RSync running on a Linux server&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Install rsync&lt;/strong&gt;  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install rsync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Create the conf file and configure rsync&lt;/strong&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo touch /etc/rsync/rsyncd.conf

#contents of file rsyncd,conf

max connections = 2
log file = /var/log/rsync.log
time = 300

[mine]

comment = Folder I would like to sync
path = /path/to/folder/tobe/synced
read only = yes
uid = nogroup
gid = nogroup
auth users = mine
secretst file = /etc/rsyncd.secrets
hosts allow = 192.168.0.0/24 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;– INCOMPLETE GUIDE – need to finish the rsync instructions&lt;/p&gt;

&lt;h2 id=&quot;use-linux-as-an-nfs-server&quot;&gt;4. Use Linux as an NFS server&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Get some packages from the repositories. You can do this either via Synaptic (if you are using a desktop software like Gnome) or, better yet, from a Linux Terminal window, you can&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;
$ sudo apt get install nfs-kernel-server nfs-common portmap sysv-rc-conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Only the first three software is all we need for NFS but the &lt;strong&gt;sysv-rc-conf&lt;/strong&gt; is handy utility so that you can start/stop/restart any service on the Linux server. &lt;strong&gt;sysv-rc-conf&lt;/strong&gt;  has an ncurses user interface which let you manage the state of services by just pointing to the service using the arrow keys, then pressing the plus sign (+) to start a service and the minus (-) sign to stop a service&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;After getting the packages, you will need to edit &lt;em&gt;/etc/exports&lt;/em&gt; file and add some lines so that you can expose the folders that you would like share using NFS&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;
/home (rw,sync,no_subtree_check,insecure)
/mnt/foldertoshare (rw,sync,no_subtree_check,insecure)
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Replace /home and /mnt/foldertoshare with your own folders that you’d like to share. I had to include the ‘insecure’ option in the exports declaration because OSX wouldn’t let me mount without that option. There are other types of declaration you can do in the exports file, but it’s beyond the scope of this post–I’ll put some more time on this one, then I’ll redo this post to include the other options for NFS exports file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;After editing &lt;em&gt;/etc/exports&lt;/em&gt;, &lt;strong&gt;RESTART&lt;/strong&gt; the nfs server, you can do that 2 ways. First is by&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;
$ sudo /etc/init.d/nfs-kernel-server restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The second is to invoke sysv-rc-conf from the command line, then use your arrow keys to find nfs-kernel-server, then press ‘-‘ sign to stop, then press ‘+’ sign to start.&lt;/p&gt;

&lt;h3 id=&quot;how-to-use-nfs-using-mac-as-the-client-and-linux-as-the-server&quot;&gt;How to use NFS using Mac as the client and Linux as the server&lt;/h3&gt;

&lt;p&gt;There is a GUI way to mount NFS drives in Mac, but I suggest you use &lt;strong&gt;Terminal.app&lt;/strong&gt;. Access Terminal.app from &lt;em&gt;Applications–&amp;gt;Utilities&lt;/em&gt; folder then type the following&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir ~/mymount
$ cd ~
$ sudo mount servername:/mnt/badass ~/mymount
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first command createas a local folder under the user directory (/User/yourname). The second command switches to that directory. The third command mounts the network file system you have defined in the Linux server as local folder in OSX.&lt;/p&gt;

&lt;p&gt;All the contents of the shared files in your NFS server should now be accessible within the mymount folder, just cd to &lt;strong&gt;~/mymount&lt;/strong&gt; and use it as if the file is local to your Mac. You can even view this network folder in &lt;em&gt;Finder&lt;/em&gt; and it will appear as a regular folder.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Kyocera KM1820 on OSX</title>
   <link href="http://thelogbox.com/install-kyocera-km1820-osx"/>
   <updated>2009-04-10T00:00:00+08:00</updated>
   <id>http://thelogbox.com/install-kyocera-km1820-osx</id>
   <content type="html">&lt;p&gt;To setup the Kyocera KM1820 on the Mac, you will need the following.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The KPDL driver of Kyocera, you can download it at &lt;a href=&quot;http://www.kyoceramita.co.uk/index/products/download_centre.false.driver.FS1118MFP._.EN.html#&quot;&gt;kyocera&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;StuffIt expander, you can download it at &lt;a href=&quot;http://www.StuffIt.com&quot;&gt;stuffit&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To do network printing, please follow the steps outlined below.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Download the StuffIt expander, double-click the DMG installer and follow the prompts – you can copy the StuffIt application file into your usual “Applications” folder for easy access in the future.&lt;/li&gt;
  &lt;li&gt;Download the Kyocera KM-1820 driver, the file could be an HTX file, OSX would know what to do with it, it will simply expand the HTX file. As as result of the expansion, it may produce the “Archive.sitx” file–this is where you will use the StuffIt expander. Double Archive.sitx, it will produce a PKG file (Kyocera OS X v1.1), just double click the PKG file.&lt;/li&gt;
  &lt;li&gt;Open the System Preferences dialog (from the Apple logo on the upper-left hand side of your desktop. Choose “Print &amp;amp; Fax”&lt;/li&gt;
  &lt;li&gt;Click the plus (+) sign at the lower left hand side of the “Print and Fax” dialog. Find the printer location (if it’s a shared printer on the network).&lt;/li&gt;
  &lt;li&gt;On the “Print using” drop-down option, choose “Select printer software”, you should be able to find the KM-1820 option by now.&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Connect Windows to a CUPS Print Server</title>
   <link href="http://thelogbox.com/connect-windows-to-cups-printer"/>
   <updated>2009-04-08T00:00:00+08:00</updated>
   <id>http://thelogbox.com/connect-windows-to-cups-printer</id>
   <content type="html">&lt;p&gt;There are a couple of ways to print to a CUPS printer from a Windows machine. &lt;em&gt;CUPS&lt;/em&gt; printer means it’s a printer connected to either a UNIX, Linux or an OSX machine. CUPS is the system which these OSes use to share print services. &lt;/p&gt;

&lt;p&gt;One way to print from Windows is to use the  Samba features of your Linux server. Samba appears to be easier for the Windows users because Samba looks and feels just like another Windows box. I won’t use Samba for this guide. Instead we will connect to the CUPS printer using internet printing protocol.&lt;/p&gt;

&lt;h2 id=&quot;things-you-will-need&quot;&gt;Things you will need&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;A &lt;em&gt;driver&lt;/em&gt; for your printer. I don’t know what printer you have so I can’t list generic resources here. You can use the CD/DVD that came with your printer, or you can get the latest drivers online (always better to get updated drivers). This approach assumes that the Windows machine contains the printer driver locally. This doesn’t scale very well for enterprise settings, if you are looking for a setup where CUPS is the RIP (if you don’t know what a RIP is, then it’s probably not for you) by acting as a generic postscript printer by using PPDs and CUPS filter queues, you can head over to LinuxPrinting.org, printing with CUPS in Samba&lt;/li&gt;
  &lt;li&gt;A properly configured &lt;em&gt;CUPS printer&lt;/em&gt;. If you haven not configured your CUPS printer yet, &lt;a href=&quot;/easy-way-to-install-print-server-linux&quot;&gt;read this one firsrt&lt;/a&gt;, then come back here&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Make sure the CUPS printer is powered on, connected, and that you can ping it from your windows machine.&lt;/li&gt;
  &lt;li&gt;From your Windows machine, go to the “Add printers” section–you know how to find this.&lt;/li&gt;
  &lt;li&gt;Choose &lt;em&gt;Add a network printer&lt;/em&gt;. The CUPS won’t be listed, so click “My printer isn’t listed”&lt;/li&gt;
  &lt;li&gt;On the box provided, type &lt;code class=&quot;codeblock&quot;&gt;http://IpOrNameOfPrintServer:631/printers/nameofQueue&lt;/code&gt; the “printers” subdirectory is pretty common for CUPS printers, the &lt;em&gt;nameofQueue&lt;/em&gt; is something your Sys Admin (or you) would know, this the name of the printer added to CUPS, if you are not sure, launch a web browser and type http://IpOrNameOfPrintServer:631 then click “Printers” so that you can verify the name of the printer queue&lt;/li&gt;
  &lt;li&gt;After clicking “Next”, you will be prompted to select a driver for your printer, just go on ahead and select it.&lt;/li&gt;
  &lt;li&gt;Print a test page&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Install CLP 315 on Debian</title>
   <link href="http://thelogbox.com/install-clp315-on-linux-print-server"/>
   <updated>2009-04-07T00:00:00+08:00</updated>
   <id>http://thelogbox.com/install-clp315-on-linux-print-server</id>
   <content type="html">&lt;p&gt;These steps will install the Samsung CLP 315 on a headless Linux Server. &lt;/p&gt;

&lt;p&gt;You will need a properly configured CUPS server before proceeding. If you haven’t configured a printer server yet, &lt;a href=&quot;/easy-way-to-install-print-server-linux&quot;&gt;read this one first&lt;/a&gt; then come back. You will also need an internet connection for this one. There are some files to download.&lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Get the UnifiedLinuxDriver.tar either from the CD that came with the printer or from the &lt;a href=&quot;http://www.samsung.com&quot;&gt;Samsung site&lt;/a&gt;. You need to navigate the site a little bit. Go to &lt;em&gt;Support and Downloads&lt;/em&gt; page, then find the printer, there is a wizard&lt;/li&gt;
  &lt;li&gt;Find a way to SSH to your Linux Server, &lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html&quot;&gt;Putty&lt;/a&gt; should do it&lt;/li&gt;
  &lt;li&gt;Find a way to upload UnifiedLinuxDriver.tar.gz to your headless server. FTP or SCP or even Samba shares should do it&lt;/li&gt;
  &lt;li&gt;Unzip, or rather, untar the UnifiedLinuxDriver – &lt;em&gt;$ sudo tar -xzvf UnifiedLinuxDriver.tar.gz&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Change directory to &lt;em&gt;cdroot&lt;/em&gt;, this is one of the folders that is contained in the UnifiedLinuxDriver&lt;/li&gt;
  &lt;li&gt;Run the installer – &lt;em&gt;$ sudo install.sh&lt;/em&gt; . The installer was intended to be ran from GUI workstation, so it will give you some warnings that may look like errors. It will eventually detect that you are not running on a GUI and it will degrade gracefully to a text-based installation. We need to run the installer because we need a very specific file. That file is &lt;strong&gt;rastertosamsungsplc&lt;/strong&gt;, it is the PPD file we need for the CLP 315 printer to function normally in Linux&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;Copy the rastertosamsungsplc ppd file to the &lt;em&gt;/usr/lib/cups/filter&lt;/em&gt; folder &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /path/to/where/rastertosamsungsplc-is/
$ cp rastertosamsungsplc /usr/lib/cups/filterrastertosamsungsplc
$ sudo /etc/init.d/cupsd restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point, you can now start adding the CLP 315 as one of the printers to your CUPS server. Open a browser window (anywhere in your network) and type &lt;strong&gt;http://NameOfPrintServer:631&lt;/strong&gt;. Click &lt;strong&gt;Administration&lt;/strong&gt; → &lt;strong&gt;Add Printer&lt;/strong&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Connect OSX to a CUPS Print Server</title>
   <link href="http://thelogbox.com/connect-mac-osx-to-cups-printer"/>
   <updated>2009-04-07T00:00:00+08:00</updated>
   <id>http://thelogbox.com/connect-mac-osx-to-cups-printer</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;Open &lt;strong&gt;System Preferences&lt;/strong&gt; dialog. You can reach this dialog by clicking the small Apple logo at upper-left most corner of your desktop, &lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Print and Fax&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;On Printers column, click the plus sign to add a printer (There is a &lt;strong&gt;+&lt;/strong&gt; sign at the lower left portion of the dialog window&lt;/li&gt;
  &lt;li&gt;The “Protocol dropdown will say “Line Printing Daemon” or LPD, you need to change this to “Internet Printing” or “IP”, click the drop down and find “Internet Printing”&lt;/li&gt;
  &lt;li&gt;On the address field, type the IP address or the hostname of the CUPS server, just write the hostname, don’t include the protocol. Hence you would write &lt;strong&gt;cupsipaddress&lt;/strong&gt;, not &lt;strong&gt;ipp://cupsipaddress&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;On the queue input field, type the queue name of the target printer attached to the CUPS server, the queue name of printers in a CUPS server is always prefixed by the word &lt;em&gt;printers/&lt;/em&gt; – you need to ask your administrator what is the name of the printer as defined on the CUPS server. If you are the administrator, the name of the queue name is the same as what you typed on the name field of a printer when you were installing your printer to the CUPS server. What you need to type on the queue input field is &lt;strong&gt;printers/nameofprinteroncups&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;On the name field, type something that you can easily recognize, when you have several printers installed on your MAC, it helps if the printer names are easily recognizable.&lt;/li&gt;
  &lt;li&gt;On the “print using” field, choose “select a driver to use”, and just choose your appropriate driver .&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That should work now. Your Mac OSX is actually a CUPS server itself, there is a UNIX-ish way of installing printers on OSX, just open Safari, and type &lt;span class=&quot;codeblock&quot;&gt;http://localhost:631&amp;lt;/code&amp;gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;you will be greeted by the CUPS opening page.&lt;/p&gt;

&lt;p&gt;That’s it, now your OSX can print to a remote CUPS server.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Mac Mini Mic Hack</title>
   <link href="http://thelogbox.com/mac-mini-microphone-hack"/>
   <updated>2009-03-01T00:00:00+08:00</updated>
   <id>http://thelogbox.com/mac-mini-microphone-hack</id>
   <content type="html">&lt;p&gt;The Mac Mini requires line level mic input. It needs to be powered. A mic that works on PC may not work on the mini.&lt;/p&gt;

&lt;p&gt;You can spare your self the experimentation and reading this hack if you just buy the third party products designed for the mac mini e.g. iMic. If you have the time, the materials suggested here and the inclindation, go on and hack away.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Find an old voice recorder&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There could be one or more of these old gadgets gathering dust in that sealed box of yesteryear gadgets. I found an old Sony TCM-150. Any recorder with a built-in microphone should do it&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Get a 3.5mm stereo jack&lt;/strong&gt;, also called a mini jack, with both ends as male connectors. This can be easily procured at any audio supplies store or hardware supply store&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Connect the Mac Mini&lt;/strong&gt; and the voice recorder using the stereo mini jack &lt;/p&gt;

&lt;p&gt;You might want to check the batteries on that old voice recorder, I hope you did not forget to remove the batteries when you locked it away for keeping. If the dry cell batteries have leaked, the voice recorded may not be usable anymore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Power the voice recorder&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Put in record mode (you can press the pause button so that it actually doesn’t record, we just need the mic)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Test it&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I tested mine by using it in a skype call. In fact, that was the only reason I needed a microphone for the Mac Mini&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Improve Your Team</title>
   <link href="http://thelogbox.com/notice/improve-your-team"/>
   <updated>2009-02-11T00:00:00+08:00</updated>
   <id>http://thelogbox.com/notice/improve-your-team</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;READ TECH TUTORIALS&lt;/strong&gt;. We will send you email — very INFREQUENTLY — when new tutorials are released or while they are in progress. Join the mailing list so we can notify you. We won’t give away or sell your email address to anyone or any company. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GET THE COURSES&lt;/strong&gt;. We work hard on every course we teach. We didn’t just read a book and taught courses. We do actually have programming and coding experience; the fact that we also have professional experience teaching in both corporate and university setting doesn’t hurt. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://eepurl.com/BFz-X&quot; class=&quot;button&quot;&gt;Join the Mailing List&lt;/a&gt;&lt;/p&gt;

&lt;!--

&lt;div id=&quot;mc_embed_signup&quot;&gt;

&lt;form action=&quot;http://thelogbox.us5.list-manage.com/subscribe/post?u=ccf5609c10396fa44241f5400&amp;amp;id=0117706770&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate&gt;
	
&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;To get our updates, enter your email here&quot; required&gt;
&lt;div class=&quot;clear&quot;&gt;  
  &lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot;
  name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot;
  class=&quot;button&quot;&gt;
&lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;

--&gt;
</content>
 </entry>
 
 <entry>
   <title>Installing a Print Server</title>
   <link href="http://thelogbox.com/easy-way-to-install-print-server-linux"/>
   <updated>2009-02-06T00:00:00+08:00</updated>
   <id>http://thelogbox.com/easy-way-to-install-print-server-linux</id>
   <content type="html">&lt;p&gt;This guide will walk through the steps on how to share a printer over a local network using a Linux server. It will use the &lt;em&gt;internet printing protocol&lt;/em&gt; and the &lt;em&gt;linux print daemon&lt;/em&gt;.  &lt;/p&gt;

&lt;p&gt;For this guide, the materials used were:  &lt;strong&gt;1)&lt;/strong&gt; a minimally installed Debian Linux &lt;strong&gt;2)&lt;/strong&gt; a Samsung CLP-315 color printer. and; &lt;strong&gt;3)&lt;/strong&gt; a single subnet local area network&lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;Install CUPS from the repositories&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
$ sudo apt-get install cupssys
&lt;/pre&gt;

&lt;p&gt;Edit &lt;em&gt;/etc/cups/cupsd.conf&lt;/em&gt;. There are quite a few entries on the default &lt;em&gt;cupsd.conf&lt;/em&gt; and it could be distracting. We will erase that and start with a simple configuration&lt;/p&gt;

&lt;pre class=&quot;codeblock&quot;&gt;
$ cd /etc/cups
$ sudo cp cupsd.conf cupsd.conf.original
$ sudo echo &quot;&quot; &amp;gt; cupsd.conf 
&lt;/pre&gt;

&lt;p&gt;Second line above makes a copy of the original cupsd.conf and the third line wipes out the textual content of &lt;em&gt;cupsd.conf&lt;/em&gt;. After that we can edit cupsd.conf with minimal fuss. The new &lt;em&gt;cupsd.conf&lt;/em&gt; looks like the following&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;LogLevel debug
SystemGroup lpadmin
#Allow remote access
Port 631
Listen /var/run/cups/cups.sock
#Share local printers on the local network.
Browsing On
BrowseOrder allow,deny
BrowseAddress @LOCAL

#DefaultAuthType Basic
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Location&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  Allow localhost
  Allow 192.168.0.*
  Allow all
  #Allow shared printing and remote administration...
  Order allow,deny
  Allow all
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;Location&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;/admin&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  Allow 192.168.0.*
  Encryption Required
  Allow all
  Allow all
  #Allow remote administration...
  Order allow,deny
  Allow all
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;
    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Location&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;/admin/conf&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  Allow 192.168.0.*
  #AuthType Default
  #Require user @SYSTEM
  Allow all
  #Allow remote access to the configuration files...
  Order allow,deny
  Allow all
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Obviously not a very tight and secure CUPS configuration. You can harden it later when you know more about the configuration. For now, this will happily function as a basic, albeit, insecure print server. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to Find Out Which App is Using What Port</title>
   <link href="http://thelogbox.com/which-application-is-using-what-port"/>
   <updated>2009-02-03T00:00:00+08:00</updated>
   <id>http://thelogbox.com/which-application-is-using-what-port</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;UPDATE (June 3,2009)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The original article describes the steps to take on how to find applications that are using your port in a Windows machine, using only tools that came with your Windows installation–no third party apps. I am updating the article now to include a third party tool; WinNetstat is a GUI tool for netstat, it’s at winnetstat.zapto.org&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Network-aware applications are a pain in the __ when they are acting up. They are particularly annoying and infuriating when they don’t want to start. If you have tried starting Apache or MySQL etc either in stand-alone mode or service mode (daemon mode in UNIX), you’d know what I’m saying.&lt;/p&gt;

&lt;p&gt;The first thing to check when network-aware applications won’t start, is of course – their log files, try to see what’s preventing them from starting; Almost always, the log file is going to tell you the reason why the app won’t start.&lt;/p&gt;

&lt;p&gt;Lots of times, I encounter the problem of two applications using exactly the same port number — just to be clear, that’s bad. What the heck is a port number? — I’d point you to Wikipedia, but it’s too geeky and too academe-ish. I’ll take a shot of defining what an application port number is instead; I’ll segue a bit, then I’ll come back to the main point, which is how to hunt an app that’s hostaging a port number .. (holding my breath now)&lt;/p&gt;

&lt;h1 id=&quot;what-is-an-application-port-number&quot;&gt;WHAT IS AN APPLICATION PORT NUMBER&lt;/h1&gt;

&lt;p&gt;Every application that needs to talk to other applications, needs to have a port number. Every computer can give out port numbers ranging from 0 - 65535, and once a port number is given, it cannot be given to another application (while it is running at least) – so, one application is to one port number. The reason why application have port numbers is so that, when one application (say Firefox) wants to talk to another application (in another computer, say Apache; a web server), Firefox needs to know that when he sends out a message, it will be received by the intended recipient (Apache), and this can only be done if Firefox knows exactly where Apache is. There are 2 components that make up a unique address of an application – one is the IP address of the machine where the application is running, and the other component is – you guessed it, the port number; Collectively these two (IP address and port number) are known as a socket, but that’s another story, let’s stop here – What’s important to know is that, port numbers are – well, important; they determine the uniqueness of an application within a machine.
How to hunt down applications via their port numbers&lt;/p&gt;

&lt;p&gt;I’m sure there could be a more neat - albeit geekier - way of finding out which app is using which port; but will do it verbosely; easier to follow too.&lt;/p&gt;

&lt;p&gt;You will use a command line tool called netstat (network status); netstat is available on Windows, UNIX, and Linux, there are few differences in the parameters though, so I will cover UNIX and Linux separately (in another post that is)&lt;/p&gt;

&lt;p&gt;You will also use another command line utility called findstr (short for find string), it’s a Windows command line utility which does – well, find strings. It locates patterns of strings within a stream of other strings. So, it’s a handy utility when searching for very specific words (or part of words) within a large text file. If you’ve ever used the Find function in a word processor, you get the picture already. The UNIX folks have been enjoying this tool for a long time, it’s called grep.&lt;/p&gt;

&lt;p&gt;Anyway, the basic idea is to use the netstat command so that we can list all the applications that are either accepting or sending network traffic, and we’d like to list their port numbers and their process IDs too. Then, when we find the port number we are looking for, we will list all the running processes and make the match using the process ID – then we’ll know who the culprit is.&lt;/p&gt;

&lt;p&gt;Let’s say that we are looking for port 80 – IIS, Apache and other web servers listen in port 80, so when you are having problems starting Apache, this technique will be useful. The command to use is &lt;code class=&quot;codeblock&quot;&gt;netstat -aon | findstr 0.0:80&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;-a&lt;/em&gt; means list all active connections and their ports. -o means include their process IDs. -n means display the port numbers numerically.&lt;/p&gt;

&lt;p&gt;The pipe symbol  means, that instead of the result of netstat being displayed on the screen, feed it’s result to the findstr process – we are looking specifically for the line which has 0.0:80 – you actually don’t need findstr, but I don’t want to scroll down and hunt down manually which app is using port 80. You might see something like this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;TCP 0.0.0.0:80 0.0.0.0:0 LISTENING 560
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Now we know that process 560 is using port 80 (that last column right there, is the process ID), you could press CTRL-ALT-DEL now to show the &lt;strong&gt;Process Manager&lt;/strong&gt; window, and manually look up which app has the process ID 560. You can also do that on the cmd line using the command **tasklist&lt;/td&gt;
      &lt;td&gt;findstr 560**&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;tasklist&lt;/em&gt;&lt;/strong&gt; is another Windows command line utility which shows you a list of all active processes, again I’d feed it to the findstr utility via the pipe operator, and voila – Skype is the culprit.&lt;/p&gt;

&lt;p&gt;Skype actually doesn’t have to use port 80, it can use other port numbers, but for some reason it just does. To free up port 80, you need to shutdown Skype and give your webserver a chance to grab port 80, then start Skype all over again so it can choose which port it will bind to.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Shutdown skype, either via the GUI; or if you’re feeling geeky enough, you can try taskkill /F /PID 560 (this will be different on your system)&lt;/li&gt;
  &lt;li&gt;Start Apache, or IIS or whatever it is that needs to use port 80&lt;/li&gt;
  &lt;li&gt;Then start skype again&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;if you repeat the procedure of netstat and tasklist, you’ll see that skype now happily uses another port number.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Install SSH</title>
   <link href="http://thelogbox.com/install-ssh-on-debian"/>
   <updated>2009-01-02T00:00:00+08:00</updated>
   <id>http://thelogbox.com/install-ssh-on-debian</id>
   <content type="html">&lt;p&gt;To install SSH on Debian or its derivatives, get it from the repositories — &lt;code class=&quot;codeblock&quot;&gt;sudo apt-get install ssh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you prefer to do it in GUI mode and you are running a desktop program in Linux like Gnome, Unity, LXDE etc, you could do it using &lt;strong&gt;synaptic&lt;/strong&gt;, search ssh and you should be on your way – but then again, you are running a server, why would you have a GUI running in it? &lt;/p&gt;

&lt;p&gt;That’s it, you don’t even have to restart your server. While you are at it, why don’t you install &lt;em&gt;sysv-rc-conf&lt;/em&gt; as well. Why? so that you have an easy way to start, stop, and restart services on your server.&lt;/p&gt;

&lt;p&gt;To install sysv-rc-conf, get it via aptitude — &lt;code class=&quot;codeblock&quot;&gt;$ sudo apt-get install sysv-rc-conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It’s a good idea to test if you can really connect to your server via SSH, before you remove the monitor and keyboard. If you are using an OSX or a Linux or a UNIX workstation, you can simply type &lt;code class=&quot;codeblock&quot;&gt;$ ssh yourUserName@ServerNameOrIp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Replace &lt;em&gt;yourUserName&lt;/em&gt; with a user defined in your server and &lt;em&gt;ServerNameOrIp&lt;/em&gt; with the hostname or IP address of your  server. If this the first time you will connect to the server, it will ask you a question whether you’d like to store an on entry on your &lt;em&gt;/homefolder/.ssh/known_hosts&lt;/em&gt;. Say “yes” to this question.&lt;/p&gt;

&lt;p&gt;If you are using Windows XP or Vista, you can download Putty. Putty is a windows client software that allows you to connect to remote systems using SSH and Telnet, in our case, we’ll use SSH.&lt;/p&gt;
</content>
 </entry>
 
 
</feed>